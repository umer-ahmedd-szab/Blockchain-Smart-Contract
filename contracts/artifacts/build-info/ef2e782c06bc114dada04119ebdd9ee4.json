{
	"id": "ef2e782c06bc114dada04119ebdd9ee4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/UmerToken_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    uint public fee = 10;\n    address _owner = msg.sender;\n\n    function transfer (address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        address feeAddress = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;\n\n        uint256 feeamount = (value*fee)/100;\n        value -= fee;\n\n        _transfer(owner, feeAddress, feeamount);\n        _transfer(owner,to, value);\n        return true;\n    }\n\n    modifier onlyOwner() {\n        require(_msgSender() == _owner, \"Not an owner\");\n        _;\n    }\n\n    function changeFee(uint newFee) public virtual onlyOwner returns (bool) {\n        fee = newFee;\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: contracts/UmerToken.sol\n\n\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.22;\n\n\ncontract UmerToken is ERC20 {\n    constructor(address recipient) ERC20(\"UmerToken\", \"UTK\") {\n        _mint(recipient, 10000 * 10 ** decimals());\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/UmerToken_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UmerToken_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UmerToken_flattened.sol\":{\"keccak256\":\"0x82fa10ba4c86e246f2e29d4ea4a1858e9f0c3d1299d80b33df7747f0fea8ec67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d7427bb9ef1280eb4de232f74ee80a877081b1882b53a7558ca3900641df446\",\"dweb:/ipfs/QmP4HQhZq3d6R9Hi8EjUHj43kHGW6jkXhGZFRiwWFZ9nXM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newFee",
									"type": "uint256"
								}
							],
							"name": "changeFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"stateVariables": {
							"fee": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"changeFee(uint256)": "6a1db1bf",
							"decimals()": "313ce567",
							"fee()": "ddca3f43",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"changeFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"stateVariables\":{\"fee\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UmerToken_flattened.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UmerToken_flattened.sol\":{\"keccak256\":\"0x82fa10ba4c86e246f2e29d4ea4a1858e9f0c3d1299d80b33df7747f0fea8ec67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d7427bb9ef1280eb4de232f74ee80a877081b1882b53a7558ca3900641df446\",\"dweb:/ipfs/QmP4HQhZq3d6R9Hi8EjUHj43kHGW6jkXhGZFRiwWFZ9nXM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/UmerToken_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/UmerToken_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/UmerToken_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/UmerToken_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/UmerToken_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 361,
								"contract": "contracts/UmerToken_flattened.sol:ERC20",
								"label": "fee",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 365,
								"contract": "contracts/UmerToken_flattened.sol:ERC20",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UmerToken_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UmerToken_flattened.sol\":{\"keccak256\":\"0x82fa10ba4c86e246f2e29d4ea4a1858e9f0c3d1299d80b33df7747f0fea8ec67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d7427bb9ef1280eb4de232f74ee80a877081b1882b53a7558ca3900641df446\",\"dweb:/ipfs/QmP4HQhZq3d6R9Hi8EjUHj43kHGW6jkXhGZFRiwWFZ9nXM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UmerToken_flattened.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UmerToken_flattened.sol\":{\"keccak256\":\"0x82fa10ba4c86e246f2e29d4ea4a1858e9f0c3d1299d80b33df7747f0fea8ec67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d7427bb9ef1280eb4de232f74ee80a877081b1882b53a7558ca3900641df446\",\"dweb:/ipfs/QmP4HQhZq3d6R9Hi8EjUHj43kHGW6jkXhGZFRiwWFZ9nXM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UmerToken_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UmerToken_flattened.sol\":{\"keccak256\":\"0x82fa10ba4c86e246f2e29d4ea4a1858e9f0c3d1299d80b33df7747f0fea8ec67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d7427bb9ef1280eb4de232f74ee80a877081b1882b53a7558ca3900641df446\",\"dweb:/ipfs/QmP4HQhZq3d6R9Hi8EjUHj43kHGW6jkXhGZFRiwWFZ9nXM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UmerToken_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UmerToken_flattened.sol\":{\"keccak256\":\"0x82fa10ba4c86e246f2e29d4ea4a1858e9f0c3d1299d80b33df7747f0fea8ec67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d7427bb9ef1280eb4de232f74ee80a877081b1882b53a7558ca3900641df446\",\"dweb:/ipfs/QmP4HQhZq3d6R9Hi8EjUHj43kHGW6jkXhGZFRiwWFZ9nXM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UmerToken_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UmerToken_flattened.sol\":{\"keccak256\":\"0x82fa10ba4c86e246f2e29d4ea4a1858e9f0c3d1299d80b33df7747f0fea8ec67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d7427bb9ef1280eb4de232f74ee80a877081b1882b53a7558ca3900641df446\",\"dweb:/ipfs/QmP4HQhZq3d6R9Hi8EjUHj43kHGW6jkXhGZFRiwWFZ9nXM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"UmerToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newFee",
									"type": "uint256"
								}
							],
							"name": "changeFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/UmerToken_flattened.sol\":22388:22540  contract UmerToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/UmerToken_flattened.sol\":14234:14236  10 */\n  0x0a\n    /* \"contracts/UmerToken_flattened.sol\":14216:14236  uint public fee = 10 */\n  0x05\n  sstore\n    /* \"contracts/UmerToken_flattened.sol\":14259:14269  msg.sender */\n  caller\n    /* \"contracts/UmerToken_flattened.sol\":14242:14269  address _owner = msg.sender */\n  0x06\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/UmerToken_flattened.sol\":22422:22538  constructor(address recipient) ERC20(\"UmerToken\", \"UTK\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/UmerToken_flattened.sol\":12502:12615  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x556d6572546f6b656e0000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x55544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/UmerToken_flattened.sol\":12576:12581  name_ */\n  dup2\n    /* \"contracts/UmerToken_flattened.sol\":12568:12573  _name */\n  0x03\n    /* \"contracts/UmerToken_flattened.sol\":12568:12581  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/UmerToken_flattened.sol\":12601:12608  symbol_ */\n  dup1\n    /* \"contracts/UmerToken_flattened.sol\":12591:12598  _symbol */\n  0x04\n    /* \"contracts/UmerToken_flattened.sol\":12591:12608  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/UmerToken_flattened.sol\":12502:12615  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/UmerToken_flattened.sol\":22489:22531  _mint(recipient, 10000 * 10 ** decimals()) */\n  tag_11\n    /* \"contracts/UmerToken_flattened.sol\":22495:22504  recipient */\n  dup2\n    /* \"contracts/UmerToken_flattened.sol\":22520:22530  decimals() */\n  tag_12\n    /* \"contracts/UmerToken_flattened.sol\":22520:22528  decimals */\n  shl(0x20, tag_13)\n    /* \"contracts/UmerToken_flattened.sol\":22520:22530  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/UmerToken_flattened.sol\":22514:22516  10 */\n  0x0a\n    /* \"contracts/UmerToken_flattened.sol\":22514:22530  10 ** decimals() */\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"contracts/UmerToken_flattened.sol\":22506:22511  10000 */\n  0x2710\n    /* \"contracts/UmerToken_flattened.sol\":22506:22530  10000 * 10 ** decimals() */\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"contracts/UmerToken_flattened.sol\":22489:22494  _mint */\n  shl(0x20, tag_18)\n    /* \"contracts/UmerToken_flattened.sol\":22489:22531  _mint(recipient, 10000 * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/UmerToken_flattened.sol\":22422:22538  constructor(address recipient) ERC20(\"UmerToken\", \"UTK\") {... */\n  pop\n    /* \"contracts/UmerToken_flattened.sol\":22388:22540  contract UmerToken is ERC20 {... */\n  jump(tag_19)\n    /* \"contracts/UmerToken_flattened.sol\":13608:13690  function decimals() public view virtual returns (uint8) {... */\ntag_13:\n    /* \"contracts/UmerToken_flattened.sol\":13657:13662  uint8 */\n  0x00\n    /* \"contracts/UmerToken_flattened.sol\":13681:13683  18 */\n  0x12\n    /* \"contracts/UmerToken_flattened.sol\":13674:13683  return 18 */\n  swap1\n  pop\n    /* \"contracts/UmerToken_flattened.sol\":13608:13690  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/UmerToken_flattened.sol\":18840:19048  function _mint(address account, uint256 value) internal {... */\ntag_18:\n    /* \"contracts/UmerToken_flattened.sol\":18929:18930  0 */\n  0x00\n    /* \"contracts/UmerToken_flattened.sol\":18910:18931  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/UmerToken_flattened.sol\":18910:18917  account */\n  dup3\n    /* \"contracts/UmerToken_flattened.sol\":18910:18931  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/UmerToken_flattened.sol\":18906:18997  if (account == address(0)) {... */\n  tag_22\n  jumpi\n    /* \"contracts/UmerToken_flattened.sol\":18983:18984  0 */\n  0x00\n    /* \"contracts/UmerToken_flattened.sol\":18954:18986  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/UmerToken_flattened.sol\":18906:18997  if (account == address(0)) {... */\ntag_22:\n    /* \"contracts/UmerToken_flattened.sol\":19006:19041  _update(address(0), account, value) */\n  tag_25\n    /* \"contracts/UmerToken_flattened.sol\":19022:19023  0 */\n  0x00\n    /* \"contracts/UmerToken_flattened.sol\":19026:19033  account */\n  dup4\n    /* \"contracts/UmerToken_flattened.sol\":19035:19040  value */\n  dup4\n    /* \"contracts/UmerToken_flattened.sol\":19006:19013  _update */\n  shl(0x20, tag_26)\n    /* \"contracts/UmerToken_flattened.sol\":19006:19041  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"contracts/UmerToken_flattened.sol\":18840:19048  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/UmerToken_flattened.sol\":17390:18497  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"contracts/UmerToken_flattened.sol\":17495:17496  0 */\n  0x00\n    /* \"contracts/UmerToken_flattened.sol\":17479:17497  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/UmerToken_flattened.sol\":17479:17483  from */\n  dup4\n    /* \"contracts/UmerToken_flattened.sol\":17479:17497  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/UmerToken_flattened.sol\":17475:18015  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"contracts/UmerToken_flattened.sol\":17631:17636  value */\n  dup1\n    /* \"contracts/UmerToken_flattened.sol\":17615:17627  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/UmerToken_flattened.sol\":17615:17636  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/UmerToken_flattened.sol\":17475:18015  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"contracts/UmerToken_flattened.sol\":17667:17686  uint256 fromBalance */\n  0x00\n    /* \"contracts/UmerToken_flattened.sol\":17689:17698  _balances */\n  dup1\n    /* \"contracts/UmerToken_flattened.sol\":17689:17704  _balances[from] */\n  0x00\n    /* \"contracts/UmerToken_flattened.sol\":17699:17703  from */\n  dup6\n    /* \"contracts/UmerToken_flattened.sol\":17689:17704  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"contracts/UmerToken_flattened.sol\":17667:17704  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"contracts/UmerToken_flattened.sol\":17736:17741  value */\n  dup2\n    /* \"contracts/UmerToken_flattened.sol\":17722:17733  fromBalance */\n  dup2\n    /* \"contracts/UmerToken_flattened.sol\":17722:17741  fromBalance < value */\n  lt\n    /* \"contracts/UmerToken_flattened.sol\":17718:17833  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"contracts/UmerToken_flattened.sol\":17793:17797  from */\n  dup4\n    /* \"contracts/UmerToken_flattened.sol\":17799:17810  fromBalance */\n  dup2\n    /* \"contracts/UmerToken_flattened.sol\":17812:17817  value */\n  dup4\n    /* \"contracts/UmerToken_flattened.sol\":17768:17818  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/UmerToken_flattened.sol\":17718:17833  if (fromBalance < value) {... */\ntag_32:\n    /* \"contracts/UmerToken_flattened.sol\":17985:17990  value */\n  dup2\n    /* \"contracts/UmerToken_flattened.sol\":17971:17982  fromBalance */\n  dup2\n    /* \"contracts/UmerToken_flattened.sol\":17971:17990  fromBalance - value */\n  sub\n    /* \"contracts/UmerToken_flattened.sol\":17953:17962  _balances */\n  0x00\n    /* \"contracts/UmerToken_flattened.sol\":17953:17968  _balances[from] */\n  dup1\n    /* \"contracts/UmerToken_flattened.sol\":17963:17967  from */\n  dup7\n    /* \"contracts/UmerToken_flattened.sol\":17953:17968  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/UmerToken_flattened.sol\":17953:17990  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/UmerToken_flattened.sol\":17653:18015  {... */\n  pop\n    /* \"contracts/UmerToken_flattened.sol\":17475:18015  if (from == address(0)) {... */\ntag_31:\n    /* \"contracts/UmerToken_flattened.sol\":18043:18044  0 */\n  0x00\n    /* \"contracts/UmerToken_flattened.sol\":18029:18045  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/UmerToken_flattened.sol\":18029:18031  to */\n  dup3\n    /* \"contracts/UmerToken_flattened.sol\":18029:18045  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/UmerToken_flattened.sol\":18025:18450  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"contracts/UmerToken_flattened.sol\":18208:18213  value */\n  dup1\n    /* \"contracts/UmerToken_flattened.sol\":18192:18204  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/UmerToken_flattened.sol\":18192:18213  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/UmerToken_flattened.sol\":18025:18450  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"contracts/UmerToken_flattened.sol\":18420:18425  value */\n  dup1\n    /* \"contracts/UmerToken_flattened.sol\":18403:18412  _balances */\n  0x00\n    /* \"contracts/UmerToken_flattened.sol\":18403:18416  _balances[to] */\n  dup1\n    /* \"contracts/UmerToken_flattened.sol\":18413:18415  to */\n  dup5\n    /* \"contracts/UmerToken_flattened.sol\":18403:18416  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/UmerToken_flattened.sol\":18403:18425  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/UmerToken_flattened.sol\":18025:18450  if (to == address(0)) {... */\ntag_36:\n    /* \"contracts/UmerToken_flattened.sol\":18480:18482  to */\n  dup2\n    /* \"contracts/UmerToken_flattened.sol\":18465:18490  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/UmerToken_flattened.sol\":18474:18478  from */\n  dup4\n    /* \"contracts/UmerToken_flattened.sol\":18465:18490  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/UmerToken_flattened.sol\":18484:18489  value */\n  dup4\n    /* \"contracts/UmerToken_flattened.sol\":18465:18490  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/UmerToken_flattened.sol\":17390:18497  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_40:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_42:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_43:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_79\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_42\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_44:\n    /* \"#utility.yul\":641:665   */\n  tag_81\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_43\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_82\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_82:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_45:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_84\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_44\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_87\n  tag_40\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":932:1051   */\ntag_86:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_88\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_45\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_46:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_47:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_48:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_49:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_93\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_93:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_94\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_95\n  tag_48\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1909:1993   */\ntag_94:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_50:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_51:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_52:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_53:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_100\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_52\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2624:2663   */\n  tag_101\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_52\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_54:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_55:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_56:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_105\n    /* \"#utility.yul\":3013:3047   */\n  tag_106\n    /* \"#utility.yul\":3022:3046   */\n  tag_107\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_54\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3013:3047   */\n  tag_55\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2995:3048   */\n  tag_54\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_57:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_58:\n    /* \"#utility.yul\":3251:3290   */\n  tag_110\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_56\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3312:3403   */\n  tag_111\n    /* \"#utility.yul\":3361:3402   */\n  tag_112\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_57\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_53\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_59:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_60:\n    /* \"#utility.yul\":3572:3604   */\n  tag_115\n  tag_59\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3613:3678   */\n  tag_116\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_58\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_61:\n    /* \"#utility.yul\":3750:3870   */\ntag_118:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_121\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_60\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_118)\ntag_120:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_62:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_124\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_50\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4101:4130   */\n  tag_125\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_51\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_126:\n    /* \"#utility.yul\":4328:4408   */\n  tag_127\n    /* \"#utility.yul\":4384:4406   */\n  tag_128\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_51\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_61\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_123:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_63:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_64:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_131\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_63\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_65:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_133\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_64\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_8:\n    /* \"#utility.yul\":5145:5182   */\n  tag_135\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_46\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_137\n  tag_47\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5233:5289   */\ntag_136:\n    /* \"#utility.yul\":5313:5351   */\n  tag_138\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_49\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":5398:5465   */\n  tag_139\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_62\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_141\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_142:\n    /* \"#utility.yul\":6339:6406   */\n  tag_143\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_65\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_140)\n    /* \"#utility.yul\":5560:6178   */\ntag_141:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_144\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_50\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_145:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_145)\ntag_147:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_149\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_64\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_148:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_140:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6609   */\ntag_66:\n    /* \"#utility.yul\":6477:6554   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6474:6475   */\n  0x00\n    /* \"#utility.yul\":6467:6555   */\n  mstore\n    /* \"#utility.yul\":6574:6578   */\n  0x11\n    /* \"#utility.yul\":6571:6572   */\n  0x04\n    /* \"#utility.yul\":6564:6579   */\n  mstore\n    /* \"#utility.yul\":6598:6602   */\n  0x24\n    /* \"#utility.yul\":6595:6596   */\n  0x00\n    /* \"#utility.yul\":6588:6603   */\n  revert\n    /* \"#utility.yul\":6615:6717   */\ntag_67:\n    /* \"#utility.yul\":6657:6665   */\n  0x00\n    /* \"#utility.yul\":6704:6709   */\n  dup2\n    /* \"#utility.yul\":6701:6702   */\n  0x01\n    /* \"#utility.yul\":6697:6710   */\n  shr\n    /* \"#utility.yul\":6676:6710   */\n  swap1\n  pop\n    /* \"#utility.yul\":6615:6717   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6723:7571   */\ntag_68:\n    /* \"#utility.yul\":6784:6789   */\n  0x00\n    /* \"#utility.yul\":6791:6795   */\n  dup1\n    /* \"#utility.yul\":6815:6821   */\n  dup3\n    /* \"#utility.yul\":6806:6821   */\n  swap2\n  pop\n    /* \"#utility.yul\":6839:6844   */\n  dup4\n    /* \"#utility.yul\":6830:6844   */\n  swap1\n  pop\n    /* \"#utility.yul\":6853:7565   */\ntag_153:\n    /* \"#utility.yul\":6874:6875   */\n  0x01\n    /* \"#utility.yul\":6864:6872   */\n  dup6\n    /* \"#utility.yul\":6861:6876   */\n  gt\n    /* \"#utility.yul\":6853:7565   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":6969:6973   */\n  dup1\n    /* \"#utility.yul\":6964:6967   */\n  dup7\n    /* \"#utility.yul\":6960:6974   */\n  div\n    /* \"#utility.yul\":6954:6958   */\n  dup2\n    /* \"#utility.yul\":6951:6975   */\n  gt\n    /* \"#utility.yul\":6948:6998   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":6978:6996   */\n  tag_157\n  tag_66\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6948:6998   */\ntag_156:\n    /* \"#utility.yul\":7028:7029   */\n  0x01\n    /* \"#utility.yul\":7018:7026   */\n  dup6\n    /* \"#utility.yul\":7014:7030   */\n  and\n    /* \"#utility.yul\":7011:7462   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":7443:7447   */\n  dup1\n    /* \"#utility.yul\":7436:7441   */\n  dup3\n    /* \"#utility.yul\":7432:7448   */\n  mul\n    /* \"#utility.yul\":7423:7448   */\n  swap2\n  pop\n    /* \"#utility.yul\":7011:7462   */\ntag_158:\n    /* \"#utility.yul\":7493:7497   */\n  dup1\n    /* \"#utility.yul\":7487:7491   */\n  dup2\n    /* \"#utility.yul\":7483:7498   */\n  mul\n    /* \"#utility.yul\":7475:7498   */\n  swap1\n  pop\n    /* \"#utility.yul\":7523:7555   */\n  tag_159\n    /* \"#utility.yul\":7546:7554   */\n  dup6\n    /* \"#utility.yul\":7523:7555   */\n  tag_67\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7511:7555   */\n  swap5\n  pop\n    /* \"#utility.yul\":6853:7565   */\n  jump(tag_153)\ntag_155:\n    /* \"#utility.yul\":6723:7571   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7577:8650   */\ntag_69:\n    /* \"#utility.yul\":7631:7636   */\n  0x00\n    /* \"#utility.yul\":7822:7830   */\n  dup3\n    /* \"#utility.yul\":7812:7852   */\n  tag_161\n  jumpi\n    /* \"#utility.yul\":7843:7844   */\n  0x01\n    /* \"#utility.yul\":7834:7844   */\n  swap1\n  pop\n    /* \"#utility.yul\":7845:7850   */\n  jump(tag_160)\n    /* \"#utility.yul\":7812:7852   */\ntag_161:\n    /* \"#utility.yul\":7871:7875   */\n  dup2\n    /* \"#utility.yul\":7861:7897   */\n  tag_162\n  jumpi\n    /* \"#utility.yul\":7888:7889   */\n  0x00\n    /* \"#utility.yul\":7879:7889   */\n  swap1\n  pop\n    /* \"#utility.yul\":7890:7895   */\n  jump(tag_160)\n    /* \"#utility.yul\":7861:7897   */\ntag_162:\n    /* \"#utility.yul\":7957:7961   */\n  dup2\n    /* \"#utility.yul\":8005:8006   */\n  0x01\n    /* \"#utility.yul\":8000:8027   */\n  dup2\n  eq\n  tag_164\n  jumpi\n    /* \"#utility.yul\":8041:8042   */\n  0x02\n    /* \"#utility.yul\":8036:8227   */\n  dup2\n  eq\n  tag_165\n  jumpi\n    /* \"#utility.yul\":7950:8227   */\n  jump(tag_163)\n    /* \"#utility.yul\":8000:8027   */\ntag_164:\n    /* \"#utility.yul\":8018:8019   */\n  0x01\n    /* \"#utility.yul\":8009:8019   */\n  swap2\n  pop\n    /* \"#utility.yul\":8020:8025   */\n  pop\n  jump(tag_160)\n    /* \"#utility.yul\":8036:8227   */\ntag_165:\n    /* \"#utility.yul\":8081:8084   */\n  0xff\n    /* \"#utility.yul\":8071:8079   */\n  dup5\n    /* \"#utility.yul\":8068:8085   */\n  gt\n    /* \"#utility.yul\":8065:8108   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":8088:8106   */\n  tag_167\n  tag_66\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":8065:8108   */\ntag_166:\n    /* \"#utility.yul\":8137:8145   */\n  dup4\n    /* \"#utility.yul\":8134:8135   */\n  0x02\n    /* \"#utility.yul\":8130:8146   */\n  exp\n    /* \"#utility.yul\":8121:8146   */\n  swap2\n  pop\n    /* \"#utility.yul\":8172:8175   */\n  dup5\n    /* \"#utility.yul\":8165:8170   */\n  dup3\n    /* \"#utility.yul\":8162:8176   */\n  gt\n    /* \"#utility.yul\":8159:8199   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":8179:8197   */\n  tag_169\n  tag_66\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8159:8199   */\ntag_168:\n    /* \"#utility.yul\":8212:8217   */\n  pop\n  jump(tag_160)\n    /* \"#utility.yul\":7950:8227   */\ntag_163:\n  pop\n    /* \"#utility.yul\":8336:8338   */\n  0x20\n    /* \"#utility.yul\":8326:8334   */\n  dup4\n    /* \"#utility.yul\":8323:8339   */\n  lt\n    /* \"#utility.yul\":8317:8320   */\n  0x0133\n    /* \"#utility.yul\":8311:8315   */\n  dup4\n    /* \"#utility.yul\":8308:8321   */\n  lt\n    /* \"#utility.yul\":8304:8340   */\n  and\n    /* \"#utility.yul\":8286:8288   */\n  0x4e\n    /* \"#utility.yul\":8276:8284   */\n  dup5\n    /* \"#utility.yul\":8273:8289   */\n  lt\n    /* \"#utility.yul\":8268:8270   */\n  0x0b\n    /* \"#utility.yul\":8262:8266   */\n  dup5\n    /* \"#utility.yul\":8259:8271   */\n  lt\n    /* \"#utility.yul\":8255:8290   */\n  and\n    /* \"#utility.yul\":8239:8350   */\n  or\n    /* \"#utility.yul\":8236:8482   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":8392:8400   */\n  dup3\n    /* \"#utility.yul\":8386:8390   */\n  dup3\n    /* \"#utility.yul\":8382:8401   */\n  exp\n    /* \"#utility.yul\":8373:8401   */\n  swap1\n  pop\n    /* \"#utility.yul\":8427:8430   */\n  dup4\n    /* \"#utility.yul\":8420:8425   */\n  dup2\n    /* \"#utility.yul\":8417:8431   */\n  gt\n    /* \"#utility.yul\":8414:8454   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":8434:8452   */\n  tag_172\n  tag_66\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8414:8454   */\ntag_171:\n    /* \"#utility.yul\":8467:8472   */\n  jump(tag_160)\n    /* \"#utility.yul\":8236:8482   */\ntag_170:\n    /* \"#utility.yul\":8507:8549   */\n  tag_173\n    /* \"#utility.yul\":8545:8548   */\n  dup5\n    /* \"#utility.yul\":8535:8543   */\n  dup5\n    /* \"#utility.yul\":8529:8533   */\n  dup5\n    /* \"#utility.yul\":8526:8527   */\n  0x01\n    /* \"#utility.yul\":8507:8549   */\n  tag_68\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8492:8549   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":8581:8585   */\n  dup2\n    /* \"#utility.yul\":8576:8579   */\n  dup5\n    /* \"#utility.yul\":8572:8586   */\n  div\n    /* \"#utility.yul\":8565:8570   */\n  dup2\n    /* \"#utility.yul\":8562:8587   */\n  gt\n    /* \"#utility.yul\":8559:8610   */\n  iszero\n  tag_174\n  jumpi\n    /* \"#utility.yul\":8590:8608   */\n  tag_175\n  tag_66\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8559:8610   */\ntag_174:\n    /* \"#utility.yul\":8639:8643   */\n  dup2\n    /* \"#utility.yul\":8632:8637   */\n  dup2\n    /* \"#utility.yul\":8628:8644   */\n  mul\n    /* \"#utility.yul\":8619:8644   */\n  swap1\n  pop\n    /* \"#utility.yul\":7577:8650   */\ntag_160:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8656:8742   */\ntag_70:\n    /* \"#utility.yul\":8691:8698   */\n  0x00\n    /* \"#utility.yul\":8731:8735   */\n  0xff\n    /* \"#utility.yul\":8724:8729   */\n  dup3\n    /* \"#utility.yul\":8720:8736   */\n  and\n    /* \"#utility.yul\":8709:8736   */\n  swap1\n  pop\n    /* \"#utility.yul\":8656:8742   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8748:9029   */\ntag_15:\n    /* \"#utility.yul\":8806:8811   */\n  0x00\n    /* \"#utility.yul\":8830:8853   */\n  tag_178\n    /* \"#utility.yul\":8848:8852   */\n  dup3\n    /* \"#utility.yul\":8830:8853   */\n  tag_54\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8822:8853   */\n  swap2\n  pop\n    /* \"#utility.yul\":8874:8899   */\n  tag_179\n    /* \"#utility.yul\":8890:8898   */\n  dup4\n    /* \"#utility.yul\":8874:8899   */\n  tag_70\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8862:8899   */\n  swap3\n  pop\n    /* \"#utility.yul\":8918:9022   */\n  tag_180\n    /* \"#utility.yul\":8955:9021   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8945:8953   */\n  dup5\n    /* \"#utility.yul\":8939:8943   */\n  dup5\n    /* \"#utility.yul\":8918:9022   */\n  tag_69\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8909:9022   */\n  swap1\n  pop\n    /* \"#utility.yul\":8748:9029   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9035:9445   */\ntag_17:\n    /* \"#utility.yul\":9075:9082   */\n  0x00\n    /* \"#utility.yul\":9098:9118   */\n  tag_182\n    /* \"#utility.yul\":9116:9117   */\n  dup3\n    /* \"#utility.yul\":9098:9118   */\n  tag_54\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":9093:9118   */\n  swap2\n  pop\n    /* \"#utility.yul\":9132:9152   */\n  tag_183\n    /* \"#utility.yul\":9150:9151   */\n  dup4\n    /* \"#utility.yul\":9132:9152   */\n  tag_54\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":9127:9152   */\n  swap3\n  pop\n    /* \"#utility.yul\":9187:9188   */\n  dup3\n    /* \"#utility.yul\":9184:9185   */\n  dup3\n    /* \"#utility.yul\":9180:9189   */\n  mul\n    /* \"#utility.yul\":9209:9239   */\n  tag_184\n    /* \"#utility.yul\":9227:9238   */\n  dup2\n    /* \"#utility.yul\":9209:9239   */\n  tag_54\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":9198:9239   */\n  swap2\n  pop\n    /* \"#utility.yul\":9388:9389   */\n  dup3\n    /* \"#utility.yul\":9379:9386   */\n  dup3\n    /* \"#utility.yul\":9375:9390   */\n  div\n    /* \"#utility.yul\":9372:9373   */\n  dup5\n    /* \"#utility.yul\":9369:9391   */\n  eq\n    /* \"#utility.yul\":9349:9350   */\n  dup4\n    /* \"#utility.yul\":9342:9351   */\n  iszero\n    /* \"#utility.yul\":9322:9405   */\n  or\n    /* \"#utility.yul\":9299:9438   */\n  tag_185\n  jumpi\n    /* \"#utility.yul\":9418:9436   */\n  tag_186\n  tag_66\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":9299:9438   */\ntag_185:\n    /* \"#utility.yul\":9083:9445   */\n  pop\n    /* \"#utility.yul\":9035:9445   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9451:9569   */\ntag_71:\n    /* \"#utility.yul\":9538:9562   */\n  tag_188\n    /* \"#utility.yul\":9556:9561   */\n  dup2\n    /* \"#utility.yul\":9538:9562   */\n  tag_43\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9533:9536   */\n  dup3\n    /* \"#utility.yul\":9526:9563   */\n  mstore\n    /* \"#utility.yul\":9451:9569   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9575:9797   */\ntag_24:\n    /* \"#utility.yul\":9668:9672   */\n  0x00\n    /* \"#utility.yul\":9706:9708   */\n  0x20\n    /* \"#utility.yul\":9695:9704   */\n  dup3\n    /* \"#utility.yul\":9691:9709   */\n  add\n    /* \"#utility.yul\":9683:9709   */\n  swap1\n  pop\n    /* \"#utility.yul\":9719:9790   */\n  tag_190\n    /* \"#utility.yul\":9787:9788   */\n  0x00\n    /* \"#utility.yul\":9776:9785   */\n  dup4\n    /* \"#utility.yul\":9772:9789   */\n  add\n    /* \"#utility.yul\":9763:9769   */\n  dup5\n    /* \"#utility.yul\":9719:9790   */\n  tag_71\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9575:9797   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9803:9994   */\ntag_30:\n    /* \"#utility.yul\":9843:9846   */\n  0x00\n    /* \"#utility.yul\":9862:9882   */\n  tag_192\n    /* \"#utility.yul\":9880:9881   */\n  dup3\n    /* \"#utility.yul\":9862:9882   */\n  tag_54\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9857:9882   */\n  swap2\n  pop\n    /* \"#utility.yul\":9896:9916   */\n  tag_193\n    /* \"#utility.yul\":9914:9915   */\n  dup4\n    /* \"#utility.yul\":9896:9916   */\n  tag_54\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9891:9916   */\n  swap3\n  pop\n    /* \"#utility.yul\":9939:9940   */\n  dup3\n    /* \"#utility.yul\":9936:9937   */\n  dup3\n    /* \"#utility.yul\":9932:9941   */\n  add\n    /* \"#utility.yul\":9925:9941   */\n  swap1\n  pop\n    /* \"#utility.yul\":9960:9963   */\n  dup1\n    /* \"#utility.yul\":9957:9958   */\n  dup3\n    /* \"#utility.yul\":9954:9964   */\n  gt\n    /* \"#utility.yul\":9951:9987   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":9967:9985   */\n  tag_195\n  tag_66\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9951:9987   */\ntag_194:\n    /* \"#utility.yul\":9803:9994   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10000:10118   */\ntag_72:\n    /* \"#utility.yul\":10087:10111   */\n  tag_197\n    /* \"#utility.yul\":10105:10110   */\n  dup2\n    /* \"#utility.yul\":10087:10111   */\n  tag_54\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":10082:10085   */\n  dup3\n    /* \"#utility.yul\":10075:10112   */\n  mstore\n    /* \"#utility.yul\":10000:10118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10124:10566   */\ntag_34:\n    /* \"#utility.yul\":10273:10277   */\n  0x00\n    /* \"#utility.yul\":10311:10313   */\n  0x60\n    /* \"#utility.yul\":10300:10309   */\n  dup3\n    /* \"#utility.yul\":10296:10314   */\n  add\n    /* \"#utility.yul\":10288:10314   */\n  swap1\n  pop\n    /* \"#utility.yul\":10324:10395   */\n  tag_199\n    /* \"#utility.yul\":10392:10393   */\n  0x00\n    /* \"#utility.yul\":10381:10390   */\n  dup4\n    /* \"#utility.yul\":10377:10394   */\n  add\n    /* \"#utility.yul\":10368:10374   */\n  dup7\n    /* \"#utility.yul\":10324:10395   */\n  tag_71\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":10405:10477   */\n  tag_200\n    /* \"#utility.yul\":10473:10475   */\n  0x20\n    /* \"#utility.yul\":10462:10471   */\n  dup4\n    /* \"#utility.yul\":10458:10476   */\n  add\n    /* \"#utility.yul\":10449:10455   */\n  dup6\n    /* \"#utility.yul\":10405:10477   */\n  tag_72\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":10487:10559   */\n  tag_201\n    /* \"#utility.yul\":10555:10557   */\n  0x40\n    /* \"#utility.yul\":10544:10553   */\n  dup4\n    /* \"#utility.yul\":10540:10558   */\n  add\n    /* \"#utility.yul\":10531:10537   */\n  dup5\n    /* \"#utility.yul\":10487:10559   */\n  tag_72\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":10124:10566   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10572:10794   */\ntag_38:\n    /* \"#utility.yul\":10665:10669   */\n  0x00\n    /* \"#utility.yul\":10703:10705   */\n  0x20\n    /* \"#utility.yul\":10692:10701   */\n  dup3\n    /* \"#utility.yul\":10688:10706   */\n  add\n    /* \"#utility.yul\":10680:10706   */\n  swap1\n  pop\n    /* \"#utility.yul\":10716:10787   */\n  tag_203\n    /* \"#utility.yul\":10784:10785   */\n  0x00\n    /* \"#utility.yul\":10773:10782   */\n  dup4\n    /* \"#utility.yul\":10769:10786   */\n  add\n    /* \"#utility.yul\":10760:10766   */\n  dup5\n    /* \"#utility.yul\":10716:10787   */\n  tag_72\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10572:10794   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/UmerToken_flattened.sol\":22388:22540  contract UmerToken is ERC20 {... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/UmerToken_flattened.sol\":22388:22540  contract UmerToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6a1db1bf\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x6a1db1bf\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xddca3f43\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/UmerToken_flattened.sol\":12680:12769  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UmerToken_flattened.sol\":15380:15566  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UmerToken_flattened.sol\":13750:13847  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UmerToken_flattened.sol\":16158:16402  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UmerToken_flattened.sol\":13608:13690  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UmerToken_flattened.sol\":14753:14875  function changeFee(uint newFee) public virtual onlyOwner returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UmerToken_flattened.sol\":13905:14021  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UmerToken_flattened.sol\":12882:12975  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UmerToken_flattened.sol\":14276:14645  function transfer (address to, uint256 value) public virtual returns (bool) {... */\n    tag_11:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UmerToken_flattened.sol\":14933:15073  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UmerToken_flattened.sol\":14216:14236  uint public fee = 10 */\n    tag_13:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/UmerToken_flattened.sol\":12680:12769  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"contracts/UmerToken_flattened.sol\":12725:12738  string memory */\n      0x60\n        /* \"contracts/UmerToken_flattened.sol\":12757:12762  _name */\n      0x03\n        /* \"contracts/UmerToken_flattened.sol\":12750:12762  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":12680:12769  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/UmerToken_flattened.sol\":15380:15566  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_22:\n        /* \"contracts/UmerToken_flattened.sol\":15453:15457  bool */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":15469:15482  address owner */\n      dup1\n        /* \"contracts/UmerToken_flattened.sol\":15485:15497  _msgSender() */\n      tag_71\n        /* \"contracts/UmerToken_flattened.sol\":15485:15495  _msgSender */\n      tag_72\n        /* \"contracts/UmerToken_flattened.sol\":15485:15497  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"contracts/UmerToken_flattened.sol\":15469:15497  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":15507:15538  _approve(owner, spender, value) */\n      tag_73\n        /* \"contracts/UmerToken_flattened.sol\":15516:15521  owner */\n      dup2\n        /* \"contracts/UmerToken_flattened.sol\":15523:15530  spender */\n      dup6\n        /* \"contracts/UmerToken_flattened.sol\":15532:15537  value */\n      dup6\n        /* \"contracts/UmerToken_flattened.sol\":15507:15515  _approve */\n      tag_74\n        /* \"contracts/UmerToken_flattened.sol\":15507:15538  _approve(owner, spender, value) */\n      jump\t// in\n    tag_73:\n        /* \"contracts/UmerToken_flattened.sol\":15555:15559  true */\n      0x01\n        /* \"contracts/UmerToken_flattened.sol\":15548:15559  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":15380:15566  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UmerToken_flattened.sol\":13750:13847  function totalSupply() public view virtual returns (uint256) {... */\n    tag_26:\n        /* \"contracts/UmerToken_flattened.sol\":13802:13809  uint256 */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":13828:13840  _totalSupply */\n      sload(0x02)\n        /* \"contracts/UmerToken_flattened.sol\":13821:13840  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":13750:13847  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/UmerToken_flattened.sol\":16158:16402  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"contracts/UmerToken_flattened.sol\":16245:16249  bool */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":16261:16276  address spender */\n      dup1\n        /* \"contracts/UmerToken_flattened.sol\":16279:16291  _msgSender() */\n      tag_77\n        /* \"contracts/UmerToken_flattened.sol\":16279:16289  _msgSender */\n      tag_72\n        /* \"contracts/UmerToken_flattened.sol\":16279:16291  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"contracts/UmerToken_flattened.sol\":16261:16291  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":16301:16338  _spendAllowance(from, spender, value) */\n      tag_78\n        /* \"contracts/UmerToken_flattened.sol\":16317:16321  from */\n      dup6\n        /* \"contracts/UmerToken_flattened.sol\":16323:16330  spender */\n      dup3\n        /* \"contracts/UmerToken_flattened.sol\":16332:16337  value */\n      dup6\n        /* \"contracts/UmerToken_flattened.sol\":16301:16316  _spendAllowance */\n      tag_79\n        /* \"contracts/UmerToken_flattened.sol\":16301:16338  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/UmerToken_flattened.sol\":16348:16374  _transfer(from, to, value) */\n      tag_80\n        /* \"contracts/UmerToken_flattened.sol\":16358:16362  from */\n      dup6\n        /* \"contracts/UmerToken_flattened.sol\":16364:16366  to */\n      dup6\n        /* \"contracts/UmerToken_flattened.sol\":16368:16373  value */\n      dup6\n        /* \"contracts/UmerToken_flattened.sol\":16348:16357  _transfer */\n      tag_81\n        /* \"contracts/UmerToken_flattened.sol\":16348:16374  _transfer(from, to, value) */\n      jump\t// in\n    tag_80:\n        /* \"contracts/UmerToken_flattened.sol\":16391:16395  true */\n      0x01\n        /* \"contracts/UmerToken_flattened.sol\":16384:16395  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":16158:16402  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UmerToken_flattened.sol\":13608:13690  function decimals() public view virtual returns (uint8) {... */\n    tag_35:\n        /* \"contracts/UmerToken_flattened.sol\":13657:13662  uint8 */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":13681:13683  18 */\n      0x12\n        /* \"contracts/UmerToken_flattened.sol\":13674:13683  return 18 */\n      swap1\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":13608:13690  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/UmerToken_flattened.sol\":14753:14875  function changeFee(uint newFee) public virtual onlyOwner returns (bool) {... */\n    tag_41:\n        /* \"contracts/UmerToken_flattened.sol\":14819:14823  bool */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":14706:14712  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UmerToken_flattened.sol\":14690:14712  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UmerToken_flattened.sol\":14690:14702  _msgSender() */\n      tag_84\n        /* \"contracts/UmerToken_flattened.sol\":14690:14700  _msgSender */\n      tag_72\n        /* \"contracts/UmerToken_flattened.sol\":14690:14702  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"contracts/UmerToken_flattened.sol\":14690:14712  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/UmerToken_flattened.sol\":14682:14729  require(_msgSender() == _owner, \"Not an owner\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"contracts/UmerToken_flattened.sol\":14841:14847  newFee */\n      dup2\n        /* \"contracts/UmerToken_flattened.sol\":14835:14838  fee */\n      0x05\n        /* \"contracts/UmerToken_flattened.sol\":14835:14847  fee = newFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":14864:14868  true */\n      0x01\n        /* \"contracts/UmerToken_flattened.sol\":14857:14868  return true */\n      swap1\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":14753:14875  function changeFee(uint newFee) public virtual onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/UmerToken_flattened.sol\":13905:14021  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_46:\n        /* \"contracts/UmerToken_flattened.sol\":13970:13977  uint256 */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":13996:14005  _balances */\n      dup1\n        /* \"contracts/UmerToken_flattened.sol\":13996:14014  _balances[account] */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":14006:14013  account */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":13996:14014  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/UmerToken_flattened.sol\":13989:14014  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":13905:14021  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/UmerToken_flattened.sol\":12882:12975  function symbol() public view virtual returns (string memory) {... */\n    tag_49:\n        /* \"contracts/UmerToken_flattened.sol\":12929:12942  string memory */\n      0x60\n        /* \"contracts/UmerToken_flattened.sol\":12961:12968  _symbol */\n      0x04\n        /* \"contracts/UmerToken_flattened.sol\":12954:12968  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_65\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_65\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":12882:12975  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/UmerToken_flattened.sol\":14276:14645  function transfer (address to, uint256 value) public virtual returns (bool) {... */\n    tag_53:\n        /* \"contracts/UmerToken_flattened.sol\":14346:14350  bool */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":14362:14375  address owner */\n      dup1\n        /* \"contracts/UmerToken_flattened.sol\":14378:14390  _msgSender() */\n      tag_97\n        /* \"contracts/UmerToken_flattened.sol\":14378:14388  _msgSender */\n      tag_72\n        /* \"contracts/UmerToken_flattened.sol\":14378:14390  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"contracts/UmerToken_flattened.sol\":14362:14390  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":14400:14418  address feeAddress */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":14421:14463  0x5B38Da6a701c568545dCfcB03FcB875f56beddC4 */\n      0x5b38da6a701c568545dcfcb03fcb875f56beddc4\n        /* \"contracts/UmerToken_flattened.sol\":14400:14463  address feeAddress = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4 */\n      swap1\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":14474:14491  uint256 feeamount */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":14506:14509  100 */\n      0x64\n        /* \"contracts/UmerToken_flattened.sol\":14501:14504  fee */\n      sload(0x05)\n        /* \"contracts/UmerToken_flattened.sol\":14495:14500  value */\n      dup7\n        /* \"contracts/UmerToken_flattened.sol\":14495:14504  value*fee */\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"contracts/UmerToken_flattened.sol\":14494:14509  (value*fee)/100 */\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"contracts/UmerToken_flattened.sol\":14474:14509  uint256 feeamount = (value*fee)/100 */\n      swap1\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":14528:14531  fee */\n      sload(0x05)\n        /* \"contracts/UmerToken_flattened.sol\":14519:14531  value -= fee */\n      dup6\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      swap5\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":14542:14581  _transfer(owner, feeAddress, feeamount) */\n      tag_104\n        /* \"contracts/UmerToken_flattened.sol\":14552:14557  owner */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":14559:14569  feeAddress */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":14571:14580  feeamount */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":14542:14551  _transfer */\n      tag_81\n        /* \"contracts/UmerToken_flattened.sol\":14542:14581  _transfer(owner, feeAddress, feeamount) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/UmerToken_flattened.sol\":14591:14617  _transfer(owner,to, value) */\n      tag_105\n        /* \"contracts/UmerToken_flattened.sol\":14601:14606  owner */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":14607:14609  to */\n      dup8\n        /* \"contracts/UmerToken_flattened.sol\":14611:14616  value */\n      dup8\n        /* \"contracts/UmerToken_flattened.sol\":14591:14600  _transfer */\n      tag_81\n        /* \"contracts/UmerToken_flattened.sol\":14591:14617  _transfer(owner,to, value) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/UmerToken_flattened.sol\":14634:14638  true */\n      0x01\n        /* \"contracts/UmerToken_flattened.sol\":14627:14638  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":14276:14645  function transfer (address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UmerToken_flattened.sol\":14933:15073  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_58:\n        /* \"contracts/UmerToken_flattened.sol\":15013:15020  uint256 */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":15039:15050  _allowances */\n      0x01\n        /* \"contracts/UmerToken_flattened.sol\":15039:15057  _allowances[owner] */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":15051:15056  owner */\n      dup5\n        /* \"contracts/UmerToken_flattened.sol\":15039:15057  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UmerToken_flattened.sol\":15039:15066  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":15058:15065  spender */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":15039:15066  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/UmerToken_flattened.sol\":15032:15066  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":14933:15073  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UmerToken_flattened.sol\":14216:14236  uint public fee = 10 */\n    tag_61:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/UmerToken_flattened.sol\":4209:4305  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \"contracts/UmerToken_flattened.sol\":4262:4269  address */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":4288:4298  msg.sender */\n      caller\n        /* \"contracts/UmerToken_flattened.sol\":4281:4298  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":4209:4305  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/UmerToken_flattened.sol\":20108:20236  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_74:\n        /* \"contracts/UmerToken_flattened.sol\":20192:20229  _approve(owner, spender, value, true) */\n      tag_109\n        /* \"contracts/UmerToken_flattened.sol\":20201:20206  owner */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":20208:20215  spender */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":20217:20222  value */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":20224:20228  true */\n      0x01\n        /* \"contracts/UmerToken_flattened.sol\":20192:20200  _approve */\n      tag_110\n        /* \"contracts/UmerToken_flattened.sol\":20192:20229  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/UmerToken_flattened.sol\":20108:20236  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UmerToken_flattened.sol\":21797:22273  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_79:\n        /* \"contracts/UmerToken_flattened.sol\":21896:21920  uint256 currentAllowance */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":21923:21948  allowance(owner, spender) */\n      tag_112\n        /* \"contracts/UmerToken_flattened.sol\":21933:21938  owner */\n      dup5\n        /* \"contracts/UmerToken_flattened.sol\":21940:21947  spender */\n      dup5\n        /* \"contracts/UmerToken_flattened.sol\":21923:21932  allowance */\n      tag_58\n        /* \"contracts/UmerToken_flattened.sol\":21923:21948  allowance(owner, spender) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/UmerToken_flattened.sol\":21896:21948  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":21981:21998  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/UmerToken_flattened.sol\":21962:21978  currentAllowance */\n      dup2\n        /* \"contracts/UmerToken_flattened.sol\":21962:21998  currentAllowance < type(uint256).max */\n      lt\n        /* \"contracts/UmerToken_flattened.sol\":21958:22267  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_113\n      jumpi\n        /* \"contracts/UmerToken_flattened.sol\":22037:22042  value */\n      dup2\n        /* \"contracts/UmerToken_flattened.sol\":22018:22034  currentAllowance */\n      dup2\n        /* \"contracts/UmerToken_flattened.sol\":22018:22042  currentAllowance < value */\n      lt\n        /* \"contracts/UmerToken_flattened.sol\":22014:22144  if (currentAllowance < value) {... */\n      iszero\n      tag_114\n      jumpi\n        /* \"contracts/UmerToken_flattened.sol\":22096:22103  spender */\n      dup3\n        /* \"contracts/UmerToken_flattened.sol\":22105:22121  currentAllowance */\n      dup2\n        /* \"contracts/UmerToken_flattened.sol\":22123:22128  value */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":22069:22129  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/UmerToken_flattened.sol\":22014:22144  if (currentAllowance < value) {... */\n    tag_114:\n        /* \"contracts/UmerToken_flattened.sol\":22185:22242  _approve(owner, spender, currentAllowance - value, false) */\n      tag_117\n        /* \"contracts/UmerToken_flattened.sol\":22194:22199  owner */\n      dup5\n        /* \"contracts/UmerToken_flattened.sol\":22201:22208  spender */\n      dup5\n        /* \"contracts/UmerToken_flattened.sol\":22229:22234  value */\n      dup5\n        /* \"contracts/UmerToken_flattened.sol\":22210:22226  currentAllowance */\n      dup5\n        /* \"contracts/UmerToken_flattened.sol\":22210:22234  currentAllowance - value */\n      sub\n        /* \"contracts/UmerToken_flattened.sol\":22236:22241  false */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":22185:22193  _approve */\n      tag_110\n        /* \"contracts/UmerToken_flattened.sol\":22185:22242  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/UmerToken_flattened.sol\":21958:22267  if (currentAllowance < type(uint256).max) {... */\n    tag_113:\n        /* \"contracts/UmerToken_flattened.sol\":21886:22273  {... */\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":21797:22273  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UmerToken_flattened.sol\":16775:17075  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_81:\n        /* \"contracts/UmerToken_flattened.sol\":16874:16875  0 */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":16858:16876  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UmerToken_flattened.sol\":16858:16862  from */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":16858:16876  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/UmerToken_flattened.sol\":16854:16940  if (from == address(0)) {... */\n      tag_119\n      jumpi\n        /* \"contracts/UmerToken_flattened.sol\":16926:16927  0 */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":16899:16929  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/UmerToken_flattened.sol\":16854:16940  if (from == address(0)) {... */\n    tag_119:\n        /* \"contracts/UmerToken_flattened.sol\":16967:16968  0 */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":16953:16969  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UmerToken_flattened.sol\":16953:16955  to */\n      dup3\n        /* \"contracts/UmerToken_flattened.sol\":16953:16969  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/UmerToken_flattened.sol\":16949:17035  if (to == address(0)) {... */\n      tag_122\n      jumpi\n        /* \"contracts/UmerToken_flattened.sol\":17021:17022  0 */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":16992:17024  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/UmerToken_flattened.sol\":16949:17035  if (to == address(0)) {... */\n    tag_122:\n        /* \"contracts/UmerToken_flattened.sol\":17044:17068  _update(from, to, value) */\n      tag_124\n        /* \"contracts/UmerToken_flattened.sol\":17052:17056  from */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":17058:17060  to */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":17062:17067  value */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":17044:17051  _update */\n      tag_125\n        /* \"contracts/UmerToken_flattened.sol\":17044:17068  _update(from, to, value) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/UmerToken_flattened.sol\":16775:17075  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UmerToken_flattened.sol\":21083:21515  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_110:\n        /* \"contracts/UmerToken_flattened.sol\":21212:21213  0 */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":21195:21214  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UmerToken_flattened.sol\":21195:21200  owner */\n      dup5\n        /* \"contracts/UmerToken_flattened.sol\":21195:21214  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/UmerToken_flattened.sol\":21191:21280  if (owner == address(0)) {... */\n      tag_127\n      jumpi\n        /* \"contracts/UmerToken_flattened.sol\":21266:21267  0 */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":21237:21269  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/UmerToken_flattened.sol\":21191:21280  if (owner == address(0)) {... */\n    tag_127:\n        /* \"contracts/UmerToken_flattened.sol\":21312:21313  0 */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":21293:21314  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UmerToken_flattened.sol\":21293:21300  spender */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":21293:21314  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/UmerToken_flattened.sol\":21289:21379  if (spender == address(0)) {... */\n      tag_129\n      jumpi\n        /* \"contracts/UmerToken_flattened.sol\":21365:21366  0 */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":21337:21368  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/UmerToken_flattened.sol\":21289:21379  if (spender == address(0)) {... */\n    tag_129:\n        /* \"contracts/UmerToken_flattened.sol\":21418:21423  value */\n      dup2\n        /* \"contracts/UmerToken_flattened.sol\":21388:21399  _allowances */\n      0x01\n        /* \"contracts/UmerToken_flattened.sol\":21388:21406  _allowances[owner] */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":21400:21405  owner */\n      dup7\n        /* \"contracts/UmerToken_flattened.sol\":21388:21406  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UmerToken_flattened.sol\":21388:21415  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":21407:21414  spender */\n      dup6\n        /* \"contracts/UmerToken_flattened.sol\":21388:21415  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UmerToken_flattened.sol\":21388:21423  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":21437:21446  emitEvent */\n      dup1\n        /* \"contracts/UmerToken_flattened.sol\":21433:21509  if (emitEvent) {... */\n      iszero\n      tag_131\n      jumpi\n        /* \"contracts/UmerToken_flattened.sol\":21483:21490  spender */\n      dup3\n        /* \"contracts/UmerToken_flattened.sol\":21467:21498  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UmerToken_flattened.sol\":21476:21481  owner */\n      dup5\n        /* \"contracts/UmerToken_flattened.sol\":21467:21498  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/UmerToken_flattened.sol\":21492:21497  value */\n      dup5\n        /* \"contracts/UmerToken_flattened.sol\":21467:21498  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/UmerToken_flattened.sol\":21433:21509  if (emitEvent) {... */\n    tag_131:\n        /* \"contracts/UmerToken_flattened.sol\":21083:21515  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/UmerToken_flattened.sol\":17390:18497  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_125:\n        /* \"contracts/UmerToken_flattened.sol\":17495:17496  0 */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":17479:17497  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UmerToken_flattened.sol\":17479:17483  from */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":17479:17497  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/UmerToken_flattened.sol\":17475:18015  if (from == address(0)) {... */\n      tag_134\n      jumpi\n        /* \"contracts/UmerToken_flattened.sol\":17631:17636  value */\n      dup1\n        /* \"contracts/UmerToken_flattened.sol\":17615:17627  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":17615:17636  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":17475:18015  if (from == address(0)) {... */\n      jump(tag_137)\n    tag_134:\n        /* \"contracts/UmerToken_flattened.sol\":17667:17686  uint256 fromBalance */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":17689:17698  _balances */\n      dup1\n        /* \"contracts/UmerToken_flattened.sol\":17689:17704  _balances[from] */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":17699:17703  from */\n      dup6\n        /* \"contracts/UmerToken_flattened.sol\":17689:17704  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/UmerToken_flattened.sol\":17667:17704  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":17736:17741  value */\n      dup2\n        /* \"contracts/UmerToken_flattened.sol\":17722:17733  fromBalance */\n      dup2\n        /* \"contracts/UmerToken_flattened.sol\":17722:17741  fromBalance < value */\n      lt\n        /* \"contracts/UmerToken_flattened.sol\":17718:17833  if (fromBalance < value) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"contracts/UmerToken_flattened.sol\":17793:17797  from */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":17799:17810  fromBalance */\n      dup2\n        /* \"contracts/UmerToken_flattened.sol\":17812:17817  value */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":17768:17818  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/UmerToken_flattened.sol\":17718:17833  if (fromBalance < value) {... */\n    tag_138:\n        /* \"contracts/UmerToken_flattened.sol\":17985:17990  value */\n      dup2\n        /* \"contracts/UmerToken_flattened.sol\":17971:17982  fromBalance */\n      dup2\n        /* \"contracts/UmerToken_flattened.sol\":17971:17990  fromBalance - value */\n      sub\n        /* \"contracts/UmerToken_flattened.sol\":17953:17962  _balances */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":17953:17968  _balances[from] */\n      dup1\n        /* \"contracts/UmerToken_flattened.sol\":17963:17967  from */\n      dup7\n        /* \"contracts/UmerToken_flattened.sol\":17953:17968  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/UmerToken_flattened.sol\":17953:17990  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":17653:18015  {... */\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":17475:18015  if (from == address(0)) {... */\n    tag_137:\n        /* \"contracts/UmerToken_flattened.sol\":18043:18044  0 */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":18029:18045  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UmerToken_flattened.sol\":18029:18031  to */\n      dup3\n        /* \"contracts/UmerToken_flattened.sol\":18029:18045  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/UmerToken_flattened.sol\":18025:18450  if (to == address(0)) {... */\n      tag_140\n      jumpi\n        /* \"contracts/UmerToken_flattened.sol\":18208:18213  value */\n      dup1\n        /* \"contracts/UmerToken_flattened.sol\":18192:18204  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":18192:18213  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":18025:18450  if (to == address(0)) {... */\n      jump(tag_141)\n    tag_140:\n        /* \"contracts/UmerToken_flattened.sol\":18420:18425  value */\n      dup1\n        /* \"contracts/UmerToken_flattened.sol\":18403:18412  _balances */\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":18403:18416  _balances[to] */\n      dup1\n        /* \"contracts/UmerToken_flattened.sol\":18413:18415  to */\n      dup5\n        /* \"contracts/UmerToken_flattened.sol\":18403:18416  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/UmerToken_flattened.sol\":18403:18425  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/UmerToken_flattened.sol\":18025:18450  if (to == address(0)) {... */\n    tag_141:\n        /* \"contracts/UmerToken_flattened.sol\":18480:18482  to */\n      dup2\n        /* \"contracts/UmerToken_flattened.sol\":18465:18490  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/UmerToken_flattened.sol\":18474:18478  from */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":18465:18490  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/UmerToken_flattened.sol\":18484:18489  value */\n      dup4\n        /* \"contracts/UmerToken_flattened.sol\":18465:18490  Transfer(from, to, value) */\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/UmerToken_flattened.sol\":17390:18497  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_143:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_144:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_145:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_146:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_147:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_175\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_143\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":711:782   */\n      tag_176\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_144\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_177\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_145\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":881:910   */\n      tag_178\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_146\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_18:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_180\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_147\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_149:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_151:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_152:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_186\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_151\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_153:\n        /* \"#utility.yul\":1876:1900   */\n      tag_188\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_152\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_189:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_154:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_191\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_153\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_155:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_156:\n        /* \"#utility.yul\":2232:2256   */\n      tag_194\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_155\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_195\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_195:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_157:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_197\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_156\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_21:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_200\n      tag_149\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2525:2644   */\n    tag_199:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_201\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_154\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_202\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_157\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_158:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_159:\n        /* \"#utility.yul\":3089:3110   */\n      tag_205\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_158\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_24:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_207\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_159\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_160:\n        /* \"#utility.yul\":3426:3450   */\n      tag_209\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_155\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_28:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_211\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_160\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_31:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_214\n      tag_149\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":3801:3920   */\n    tag_213:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_215\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_154\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_216\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_154\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_217\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_157\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_161:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_162:\n        /* \"#utility.yul\":4491:4513   */\n      tag_220\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_161\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_37:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_222\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_162\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_40:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_225\n      tag_149\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4822:4941   */\n    tag_224:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_226\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_157\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_45:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_229\n      tag_149\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":5157:5276   */\n    tag_228:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_230\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_154\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5890   */\n    tag_57:\n        /* \"#utility.yul\":5484:5490   */\n      0x00\n        /* \"#utility.yul\":5492:5498   */\n      dup1\n        /* \"#utility.yul\":5541:5543   */\n      0x40\n        /* \"#utility.yul\":5529:5538   */\n      dup4\n        /* \"#utility.yul\":5520:5527   */\n      dup6\n        /* \"#utility.yul\":5516:5539   */\n      sub\n        /* \"#utility.yul\":5512:5544   */\n      slt\n        /* \"#utility.yul\":5509:5628   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":5547:5626   */\n      tag_233\n      tag_149\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":5509:5628   */\n    tag_232:\n        /* \"#utility.yul\":5667:5668   */\n      0x00\n        /* \"#utility.yul\":5692:5745   */\n      tag_234\n        /* \"#utility.yul\":5737:5744   */\n      dup6\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5717:5726   */\n      dup7\n        /* \"#utility.yul\":5713:5735   */\n      add\n        /* \"#utility.yul\":5692:5745   */\n      tag_154\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5682:5745   */\n      swap3\n      pop\n        /* \"#utility.yul\":5638:5755   */\n      pop\n        /* \"#utility.yul\":5794:5796   */\n      0x20\n        /* \"#utility.yul\":5820:5873   */\n      tag_235\n        /* \"#utility.yul\":5865:5872   */\n      dup6\n        /* \"#utility.yul\":5856:5862   */\n      dup3\n        /* \"#utility.yul\":5845:5854   */\n      dup7\n        /* \"#utility.yul\":5841:5863   */\n      add\n        /* \"#utility.yul\":5820:5873   */\n      tag_154\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5810:5873   */\n      swap2\n      pop\n        /* \"#utility.yul\":5765:5883   */\n      pop\n        /* \"#utility.yul\":5416:5890   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5896:6076   */\n    tag_163:\n        /* \"#utility.yul\":5944:6021   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5941:5942   */\n      0x00\n        /* \"#utility.yul\":5934:6022   */\n      mstore\n        /* \"#utility.yul\":6041:6045   */\n      0x22\n        /* \"#utility.yul\":6038:6039   */\n      0x04\n        /* \"#utility.yul\":6031:6046   */\n      mstore\n        /* \"#utility.yul\":6065:6069   */\n      0x24\n        /* \"#utility.yul\":6062:6063   */\n      0x00\n        /* \"#utility.yul\":6055:6070   */\n      revert\n        /* \"#utility.yul\":6082:6402   */\n    tag_65:\n        /* \"#utility.yul\":6126:6132   */\n      0x00\n        /* \"#utility.yul\":6163:6164   */\n      0x02\n        /* \"#utility.yul\":6157:6161   */\n      dup3\n        /* \"#utility.yul\":6153:6165   */\n      div\n        /* \"#utility.yul\":6143:6165   */\n      swap1\n      pop\n        /* \"#utility.yul\":6210:6211   */\n      0x01\n        /* \"#utility.yul\":6204:6208   */\n      dup3\n        /* \"#utility.yul\":6200:6212   */\n      and\n        /* \"#utility.yul\":6231:6249   */\n      dup1\n        /* \"#utility.yul\":6221:6302   */\n      tag_238\n      jumpi\n        /* \"#utility.yul\":6287:6291   */\n      0x7f\n        /* \"#utility.yul\":6279:6285   */\n      dup3\n        /* \"#utility.yul\":6275:6292   */\n      and\n        /* \"#utility.yul\":6265:6292   */\n      swap2\n      pop\n        /* \"#utility.yul\":6221:6302   */\n    tag_238:\n        /* \"#utility.yul\":6349:6351   */\n      0x20\n        /* \"#utility.yul\":6341:6347   */\n      dup3\n        /* \"#utility.yul\":6338:6352   */\n      lt\n        /* \"#utility.yul\":6318:6336   */\n      dup2\n        /* \"#utility.yul\":6315:6353   */\n      sub\n        /* \"#utility.yul\":6312:6396   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":6368:6386   */\n      tag_240\n      tag_163\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":6312:6396   */\n    tag_239:\n        /* \"#utility.yul\":6133:6402   */\n      pop\n        /* \"#utility.yul\":6082:6402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6408:6570   */\n    tag_164:\n        /* \"#utility.yul\":6548:6562   */\n      0x4e6f7420616e206f776e65720000000000000000000000000000000000000000\n        /* \"#utility.yul\":6544:6545   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup3\n        /* \"#utility.yul\":6532:6546   */\n      add\n        /* \"#utility.yul\":6525:6563   */\n      mstore\n        /* \"#utility.yul\":6408:6570   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6576:6942   */\n    tag_165:\n        /* \"#utility.yul\":6718:6721   */\n      0x00\n        /* \"#utility.yul\":6739:6806   */\n      tag_243\n        /* \"#utility.yul\":6803:6805   */\n      0x0c\n        /* \"#utility.yul\":6798:6801   */\n      dup4\n        /* \"#utility.yul\":6739:6806   */\n      tag_144\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":6732:6806   */\n      swap2\n      pop\n        /* \"#utility.yul\":6815:6908   */\n      tag_244\n        /* \"#utility.yul\":6904:6907   */\n      dup3\n        /* \"#utility.yul\":6815:6908   */\n      tag_164\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":6933:6935   */\n      0x20\n        /* \"#utility.yul\":6928:6931   */\n      dup3\n        /* \"#utility.yul\":6924:6936   */\n      add\n        /* \"#utility.yul\":6917:6936   */\n      swap1\n      pop\n        /* \"#utility.yul\":6576:6942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6948:7367   */\n    tag_87:\n        /* \"#utility.yul\":7114:7118   */\n      0x00\n        /* \"#utility.yul\":7152:7154   */\n      0x20\n        /* \"#utility.yul\":7141:7150   */\n      dup3\n        /* \"#utility.yul\":7137:7155   */\n      add\n        /* \"#utility.yul\":7129:7155   */\n      swap1\n      pop\n        /* \"#utility.yul\":7201:7210   */\n      dup2\n        /* \"#utility.yul\":7195:7199   */\n      dup2\n        /* \"#utility.yul\":7191:7211   */\n      sub\n        /* \"#utility.yul\":7187:7188   */\n      0x00\n        /* \"#utility.yul\":7176:7185   */\n      dup4\n        /* \"#utility.yul\":7172:7189   */\n      add\n        /* \"#utility.yul\":7165:7212   */\n      mstore\n        /* \"#utility.yul\":7229:7360   */\n      tag_246\n        /* \"#utility.yul\":7355:7359   */\n      dup2\n        /* \"#utility.yul\":7229:7360   */\n      tag_165\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7221:7360   */\n      swap1\n      pop\n        /* \"#utility.yul\":6948:7367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7373:7553   */\n    tag_166:\n        /* \"#utility.yul\":7421:7498   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7418:7419   */\n      0x00\n        /* \"#utility.yul\":7411:7499   */\n      mstore\n        /* \"#utility.yul\":7518:7522   */\n      0x11\n        /* \"#utility.yul\":7515:7516   */\n      0x04\n        /* \"#utility.yul\":7508:7523   */\n      mstore\n        /* \"#utility.yul\":7542:7546   */\n      0x24\n        /* \"#utility.yul\":7539:7540   */\n      0x00\n        /* \"#utility.yul\":7532:7547   */\n      revert\n        /* \"#utility.yul\":7559:7969   */\n    tag_99:\n        /* \"#utility.yul\":7599:7606   */\n      0x00\n        /* \"#utility.yul\":7622:7642   */\n      tag_249\n        /* \"#utility.yul\":7640:7641   */\n      dup3\n        /* \"#utility.yul\":7622:7642   */\n      tag_155\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":7617:7642   */\n      swap2\n      pop\n        /* \"#utility.yul\":7656:7676   */\n      tag_250\n        /* \"#utility.yul\":7674:7675   */\n      dup4\n        /* \"#utility.yul\":7656:7676   */\n      tag_155\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":7651:7676   */\n      swap3\n      pop\n        /* \"#utility.yul\":7711:7712   */\n      dup3\n        /* \"#utility.yul\":7708:7709   */\n      dup3\n        /* \"#utility.yul\":7704:7713   */\n      mul\n        /* \"#utility.yul\":7733:7763   */\n      tag_251\n        /* \"#utility.yul\":7751:7762   */\n      dup2\n        /* \"#utility.yul\":7733:7763   */\n      tag_155\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":7722:7763   */\n      swap2\n      pop\n        /* \"#utility.yul\":7912:7913   */\n      dup3\n        /* \"#utility.yul\":7903:7910   */\n      dup3\n        /* \"#utility.yul\":7899:7914   */\n      div\n        /* \"#utility.yul\":7896:7897   */\n      dup5\n        /* \"#utility.yul\":7893:7915   */\n      eq\n        /* \"#utility.yul\":7873:7874   */\n      dup4\n        /* \"#utility.yul\":7866:7875   */\n      iszero\n        /* \"#utility.yul\":7846:7929   */\n      or\n        /* \"#utility.yul\":7823:7962   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":7942:7960   */\n      tag_253\n      tag_166\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":7823:7962   */\n    tag_252:\n        /* \"#utility.yul\":7607:7969   */\n      pop\n        /* \"#utility.yul\":7559:7969   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7975:8155   */\n    tag_167:\n        /* \"#utility.yul\":8023:8100   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8020:8021   */\n      0x00\n        /* \"#utility.yul\":8013:8101   */\n      mstore\n        /* \"#utility.yul\":8120:8124   */\n      0x12\n        /* \"#utility.yul\":8117:8118   */\n      0x04\n        /* \"#utility.yul\":8110:8125   */\n      mstore\n        /* \"#utility.yul\":8144:8148   */\n      0x24\n        /* \"#utility.yul\":8141:8142   */\n      0x00\n        /* \"#utility.yul\":8134:8149   */\n      revert\n        /* \"#utility.yul\":8161:8346   */\n    tag_101:\n        /* \"#utility.yul\":8201:8202   */\n      0x00\n        /* \"#utility.yul\":8218:8238   */\n      tag_256\n        /* \"#utility.yul\":8236:8237   */\n      dup3\n        /* \"#utility.yul\":8218:8238   */\n      tag_155\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8213:8238   */\n      swap2\n      pop\n        /* \"#utility.yul\":8252:8272   */\n      tag_257\n        /* \"#utility.yul\":8270:8271   */\n      dup4\n        /* \"#utility.yul\":8252:8272   */\n      tag_155\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8247:8272   */\n      swap3\n      pop\n        /* \"#utility.yul\":8291:8292   */\n      dup3\n        /* \"#utility.yul\":8281:8316   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":8296:8314   */\n      tag_259\n      tag_167\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":8281:8316   */\n    tag_258:\n        /* \"#utility.yul\":8338:8339   */\n      dup3\n        /* \"#utility.yul\":8335:8336   */\n      dup3\n        /* \"#utility.yul\":8331:8340   */\n      div\n        /* \"#utility.yul\":8326:8340   */\n      swap1\n      pop\n        /* \"#utility.yul\":8161:8346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8352:8546   */\n    tag_103:\n        /* \"#utility.yul\":8392:8396   */\n      0x00\n        /* \"#utility.yul\":8412:8432   */\n      tag_261\n        /* \"#utility.yul\":8430:8431   */\n      dup3\n        /* \"#utility.yul\":8412:8432   */\n      tag_155\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":8407:8432   */\n      swap2\n      pop\n        /* \"#utility.yul\":8446:8466   */\n      tag_262\n        /* \"#utility.yul\":8464:8465   */\n      dup4\n        /* \"#utility.yul\":8446:8466   */\n      tag_155\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":8441:8466   */\n      swap3\n      pop\n        /* \"#utility.yul\":8490:8491   */\n      dup3\n        /* \"#utility.yul\":8487:8488   */\n      dup3\n        /* \"#utility.yul\":8483:8492   */\n      sub\n        /* \"#utility.yul\":8475:8492   */\n      swap1\n      pop\n        /* \"#utility.yul\":8514:8515   */\n      dup2\n        /* \"#utility.yul\":8508:8512   */\n      dup2\n        /* \"#utility.yul\":8505:8516   */\n      gt\n        /* \"#utility.yul\":8502:8539   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":8519:8537   */\n      tag_264\n      tag_166\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":8502:8539   */\n    tag_263:\n        /* \"#utility.yul\":8352:8546   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8552:8670   */\n    tag_168:\n        /* \"#utility.yul\":8639:8663   */\n      tag_266\n        /* \"#utility.yul\":8657:8662   */\n      dup2\n        /* \"#utility.yul\":8639:8663   */\n      tag_152\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":8634:8637   */\n      dup3\n        /* \"#utility.yul\":8627:8664   */\n      mstore\n        /* \"#utility.yul\":8552:8670   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8676:9118   */\n    tag_116:\n        /* \"#utility.yul\":8825:8829   */\n      0x00\n        /* \"#utility.yul\":8863:8865   */\n      0x60\n        /* \"#utility.yul\":8852:8861   */\n      dup3\n        /* \"#utility.yul\":8848:8866   */\n      add\n        /* \"#utility.yul\":8840:8866   */\n      swap1\n      pop\n        /* \"#utility.yul\":8876:8947   */\n      tag_268\n        /* \"#utility.yul\":8944:8945   */\n      0x00\n        /* \"#utility.yul\":8933:8942   */\n      dup4\n        /* \"#utility.yul\":8929:8946   */\n      add\n        /* \"#utility.yul\":8920:8926   */\n      dup7\n        /* \"#utility.yul\":8876:8947   */\n      tag_168\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":8957:9029   */\n      tag_269\n        /* \"#utility.yul\":9025:9027   */\n      0x20\n        /* \"#utility.yul\":9014:9023   */\n      dup4\n        /* \"#utility.yul\":9010:9028   */\n      add\n        /* \"#utility.yul\":9001:9007   */\n      dup6\n        /* \"#utility.yul\":8957:9029   */\n      tag_160\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9039:9111   */\n      tag_270\n        /* \"#utility.yul\":9107:9109   */\n      0x40\n        /* \"#utility.yul\":9096:9105   */\n      dup4\n        /* \"#utility.yul\":9092:9110   */\n      add\n        /* \"#utility.yul\":9083:9089   */\n      dup5\n        /* \"#utility.yul\":9039:9111   */\n      tag_160\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":8676:9118   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9124:9346   */\n    tag_121:\n        /* \"#utility.yul\":9217:9221   */\n      0x00\n        /* \"#utility.yul\":9255:9257   */\n      0x20\n        /* \"#utility.yul\":9244:9253   */\n      dup3\n        /* \"#utility.yul\":9240:9258   */\n      add\n        /* \"#utility.yul\":9232:9258   */\n      swap1\n      pop\n        /* \"#utility.yul\":9268:9339   */\n      tag_272\n        /* \"#utility.yul\":9336:9337   */\n      0x00\n        /* \"#utility.yul\":9325:9334   */\n      dup4\n        /* \"#utility.yul\":9321:9338   */\n      add\n        /* \"#utility.yul\":9312:9318   */\n      dup5\n        /* \"#utility.yul\":9268:9339   */\n      tag_168\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":9124:9346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9352:9543   */\n    tag_136:\n        /* \"#utility.yul\":9392:9395   */\n      0x00\n        /* \"#utility.yul\":9411:9431   */\n      tag_274\n        /* \"#utility.yul\":9429:9430   */\n      dup3\n        /* \"#utility.yul\":9411:9431   */\n      tag_155\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":9406:9431   */\n      swap2\n      pop\n        /* \"#utility.yul\":9445:9465   */\n      tag_275\n        /* \"#utility.yul\":9463:9464   */\n      dup4\n        /* \"#utility.yul\":9445:9465   */\n      tag_155\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":9440:9465   */\n      swap3\n      pop\n        /* \"#utility.yul\":9488:9489   */\n      dup3\n        /* \"#utility.yul\":9485:9486   */\n      dup3\n        /* \"#utility.yul\":9481:9490   */\n      add\n        /* \"#utility.yul\":9474:9490   */\n      swap1\n      pop\n        /* \"#utility.yul\":9509:9512   */\n      dup1\n        /* \"#utility.yul\":9506:9507   */\n      dup3\n        /* \"#utility.yul\":9503:9513   */\n      gt\n        /* \"#utility.yul\":9500:9536   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":9516:9534   */\n      tag_277\n      tag_166\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":9500:9536   */\n    tag_276:\n        /* \"#utility.yul\":9352:9543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d1df9255c565cb9400e0b1d74804658d476f636dda9b77c3a7340335483335fd64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_852": {
									"entryPoint": null,
									"id": 852,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_669": {
									"entryPoint": 328,
									"id": 669,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_636": {
									"entryPoint": 461,
									"id": 636,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_335": {
									"entryPoint": 320,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2517,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1969,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2051,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1568,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1912,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1190,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1145,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 998,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1328,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1469,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10797:1",
										"nodeType": "YulBlock",
										"src": "0:10797:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "922:274:1",
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:1",
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nativeSrc": "970:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nativeSrc": "970:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nativeSrc": "939:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:1",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nativeSrc": "935:32:1",
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nativeSrc": "932:119:1",
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nativeSrc": "1061:128:1",
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nativeSrc": "1076:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nativeSrc": "1147:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nativeSrc": "1115:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:1",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:1",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:1",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											},
											{
												"body": {
													"nativeSrc": "1261:40:1",
													"nodeType": "YulBlock",
													"src": "1261:40:1",
													"statements": [
														{
															"nativeSrc": "1272:22:1",
															"nodeType": "YulAssignment",
															"src": "1272:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:1"
																},
																"nativeSrc": "1282:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:1",
														"nodeType": "YulTypedName",
														"src": "1244:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:1",
														"nodeType": "YulTypedName",
														"src": "1254:6:1",
														"type": ""
													}
												],
												"src": "1202:99:1"
											},
											{
												"body": {
													"nativeSrc": "1335:152:1",
													"nodeType": "YulBlock",
													"src": "1335:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:1"
																},
																"nativeSrc": "1345:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:1"
															},
															"nativeSrc": "1345:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:1"
																},
																"nativeSrc": "1442:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:1"
															},
															"nativeSrc": "1442:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:1"
																},
																"nativeSrc": "1466:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:1"
															},
															"nativeSrc": "1466:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:1"
											},
											{
												"body": {
													"nativeSrc": "1521:152:1",
													"nodeType": "YulBlock",
													"src": "1521:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:1"
																},
																"nativeSrc": "1531:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:1"
															},
															"nativeSrc": "1531:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:1"
																},
																"nativeSrc": "1628:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:1"
															},
															"nativeSrc": "1628:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nativeSrc": "1652:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:1"
															},
															"nativeSrc": "1652:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:1"
											},
											{
												"body": {
													"nativeSrc": "1730:269:1",
													"nodeType": "YulBlock",
													"src": "1730:269:1",
													"statements": [
														{
															"nativeSrc": "1740:22:1",
															"nodeType": "YulAssignment",
															"src": "1740:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:1"
																},
																"nativeSrc": "1750:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:1"
																}
															]
														},
														{
															"nativeSrc": "1771:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:1"
																},
																"nativeSrc": "1797:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:1",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:1",
																"nodeType": "YulBlock",
																"src": "1848:51:1",
																"statements": [
																	{
																		"nativeSrc": "1862:27:1",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:1"
																			},
																			"nativeSrc": "1872:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:1"
																},
																"nativeSrc": "1821:26:1",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:1"
															},
															"nativeSrc": "1818:81:1",
															"nodeType": "YulIf",
															"src": "1818:81:1"
														},
														{
															"body": {
																"nativeSrc": "1951:42:1",
																"nodeType": "YulBlock",
																"src": "1951:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:1"
																			},
																			"nativeSrc": "1965:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:1"
																		},
																		"nativeSrc": "1965:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:1"
																		},
																		"nativeSrc": "1935:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:1"
																},
																"nativeSrc": "1912:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:1"
															},
															"nativeSrc": "1909:84:1",
															"nodeType": "YulIf",
															"src": "1909:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:1",
														"nodeType": "YulTypedName",
														"src": "1714:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:1",
														"nodeType": "YulTypedName",
														"src": "1723:6:1",
														"type": ""
													}
												],
												"src": "1679:320:1"
											},
											{
												"body": {
													"nativeSrc": "2059:87:1",
													"nodeType": "YulBlock",
													"src": "2059:87:1",
													"statements": [
														{
															"nativeSrc": "2069:11:1",
															"nodeType": "YulAssignment",
															"src": "2069:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:1",
																"nodeType": "YulIdentifier",
																"src": "2077:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																},
																"nativeSrc": "2090:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:1"
															},
															"nativeSrc": "2090:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:1"
														},
														{
															"nativeSrc": "2113:26:1",
															"nodeType": "YulAssignment",
															"src": "2113:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:1"
																},
																"nativeSrc": "2121:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:1",
														"nodeType": "YulTypedName",
														"src": "2046:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:1",
														"nodeType": "YulTypedName",
														"src": "2054:4:1",
														"type": ""
													}
												],
												"src": "2005:141:1"
											},
											{
												"body": {
													"nativeSrc": "2196:49:1",
													"nodeType": "YulBlock",
													"src": "2196:49:1",
													"statements": [
														{
															"nativeSrc": "2206:33:1",
															"nodeType": "YulAssignment",
															"src": "2206:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:1"
																		},
																		"nativeSrc": "2220:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:1"
																},
																"nativeSrc": "2216:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:1",
														"nodeType": "YulTypedName",
														"src": "2179:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:1",
														"nodeType": "YulTypedName",
														"src": "2189:6:1",
														"type": ""
													}
												],
												"src": "2152:93:1"
											},
											{
												"body": {
													"nativeSrc": "2304:54:1",
													"nodeType": "YulBlock",
													"src": "2304:54:1",
													"statements": [
														{
															"nativeSrc": "2314:37:1",
															"nodeType": "YulAssignment",
															"src": "2314:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:1"
																},
																"nativeSrc": "2335:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:1",
														"nodeType": "YulTypedName",
														"src": "2279:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:1",
														"nodeType": "YulTypedName",
														"src": "2285:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:1",
														"nodeType": "YulTypedName",
														"src": "2295:8:1",
														"type": ""
													}
												],
												"src": "2251:107:1"
											},
											{
												"body": {
													"nativeSrc": "2440:317:1",
													"nodeType": "YulBlock",
													"src": "2440:317:1",
													"statements": [
														{
															"nativeSrc": "2450:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:1"
																},
																"nativeSrc": "2467:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:1",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:1",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:1"
																},
																"nativeSrc": "2506:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:1",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:1",
															"nodeType": "YulAssignment",
															"src": "2612:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:1"
																},
																"nativeSrc": "2624:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:1"
																}
															]
														},
														{
															"nativeSrc": "2672:30:1",
															"nodeType": "YulAssignment",
															"src": "2672:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:1"
																		},
																		"nativeSrc": "2692:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:1"
																},
																"nativeSrc": "2681:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:1"
																}
															]
														},
														{
															"nativeSrc": "2711:40:1",
															"nodeType": "YulAssignment",
															"src": "2711:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nativeSrc": "2731:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:1"
																},
																"nativeSrc": "2721:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:1",
														"nodeType": "YulTypedName",
														"src": "2401:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:1",
														"nodeType": "YulTypedName",
														"src": "2408:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:1",
														"nodeType": "YulTypedName",
														"src": "2420:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:1",
														"nodeType": "YulTypedName",
														"src": "2433:6:1",
														"type": ""
													}
												],
												"src": "2364:393:1"
											},
											{
												"body": {
													"nativeSrc": "2808:32:1",
													"nodeType": "YulBlock",
													"src": "2808:32:1",
													"statements": [
														{
															"nativeSrc": "2818:16:1",
															"nodeType": "YulAssignment",
															"src": "2818:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:1",
																"nodeType": "YulIdentifier",
																"src": "2829:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:1",
														"nodeType": "YulTypedName",
														"src": "2790:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:1",
														"nodeType": "YulTypedName",
														"src": "2800:7:1",
														"type": ""
													}
												],
												"src": "2763:77:1"
											},
											{
												"body": {
													"nativeSrc": "2878:28:1",
													"nodeType": "YulBlock",
													"src": "2878:28:1",
													"statements": [
														{
															"nativeSrc": "2888:12:1",
															"nodeType": "YulAssignment",
															"src": "2888:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:1",
																"nodeType": "YulIdentifier",
																"src": "2895:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:1",
														"nodeType": "YulTypedName",
														"src": "2864:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:1",
														"nodeType": "YulTypedName",
														"src": "2874:3:1",
														"type": ""
													}
												],
												"src": "2846:60:1"
											},
											{
												"body": {
													"nativeSrc": "2972:82:1",
													"nodeType": "YulBlock",
													"src": "2972:82:1",
													"statements": [
														{
															"nativeSrc": "2982:66:1",
															"nodeType": "YulAssignment",
															"src": "2982:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:1"
																				},
																				"nativeSrc": "3022:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:1"
																		},
																		"nativeSrc": "3013:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:1"
																},
																"nativeSrc": "2995:53:1",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:1",
														"nodeType": "YulTypedName",
														"src": "2952:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:1",
														"nodeType": "YulTypedName",
														"src": "2962:9:1",
														"type": ""
													}
												],
												"src": "2912:142:1"
											},
											{
												"body": {
													"nativeSrc": "3107:28:1",
													"nodeType": "YulBlock",
													"src": "3107:28:1",
													"statements": [
														{
															"nativeSrc": "3117:12:1",
															"nodeType": "YulAssignment",
															"src": "3117:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:1",
																"nodeType": "YulIdentifier",
																"src": "3124:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:1",
														"nodeType": "YulTypedName",
														"src": "3093:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:1",
														"nodeType": "YulTypedName",
														"src": "3103:3:1",
														"type": ""
													}
												],
												"src": "3060:75:1"
											},
											{
												"body": {
													"nativeSrc": "3217:193:1",
													"nodeType": "YulBlock",
													"src": "3217:193:1",
													"statements": [
														{
															"nativeSrc": "3227:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:1"
																},
																"nativeSrc": "3251:39:1",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:1",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:1"
																				},
																				"nativeSrc": "3340:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:1"
																				},
																				"nativeSrc": "3361:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:1"
																		},
																		"nativeSrc": "3312:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:1"
																},
																"nativeSrc": "3299:105:1",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:1"
															},
															"nativeSrc": "3299:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:1",
														"nodeType": "YulTypedName",
														"src": "3194:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:1",
														"nodeType": "YulTypedName",
														"src": "3200:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:1",
														"nodeType": "YulTypedName",
														"src": "3208:7:1",
														"type": ""
													}
												],
												"src": "3141:269:1"
											},
											{
												"body": {
													"nativeSrc": "3465:24:1",
													"nodeType": "YulBlock",
													"src": "3465:24:1",
													"statements": [
														{
															"nativeSrc": "3475:8:1",
															"nodeType": "YulAssignment",
															"src": "3475:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:1",
																"nodeType": "YulLiteral",
																"src": "3482:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:1",
														"nodeType": "YulTypedName",
														"src": "3461:3:1",
														"type": ""
													}
												],
												"src": "3416:73:1"
											},
											{
												"body": {
													"nativeSrc": "3548:136:1",
													"nodeType": "YulBlock",
													"src": "3548:136:1",
													"statements": [
														{
															"nativeSrc": "3558:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:1"
																},
																"nativeSrc": "3572:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:1"
																},
																"nativeSrc": "3613:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:1"
															},
															"nativeSrc": "3613:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:1",
														"nodeType": "YulTypedName",
														"src": "3534:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:1",
														"nodeType": "YulTypedName",
														"src": "3540:6:1",
														"type": ""
													}
												],
												"src": "3495:189:1"
											},
											{
												"body": {
													"nativeSrc": "3740:136:1",
													"nodeType": "YulBlock",
													"src": "3740:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:1",
																"nodeType": "YulBlock",
																"src": "3807:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:1"
																			},
																			"nativeSrc": "3821:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:1"
																		},
																		"nativeSrc": "3821:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:1"
																},
																"nativeSrc": "3757:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:1"
															},
															"nativeSrc": "3750:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:1",
																"nodeType": "YulBlock",
																"src": "3772:26:1",
																"statements": [
																	{
																		"nativeSrc": "3774:22:1",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:1"
																			},
																			"nativeSrc": "3783:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:1",
																"nodeType": "YulBlock",
																"src": "3754:2:1",
																"statements": []
															},
															"src": "3750:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:1",
														"nodeType": "YulTypedName",
														"src": "3728:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:1",
														"nodeType": "YulTypedName",
														"src": "3735:3:1",
														"type": ""
													}
												],
												"src": "3690:186:1"
											},
											{
												"body": {
													"nativeSrc": "3961:464:1",
													"nodeType": "YulBlock",
													"src": "3961:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:1",
																"nodeType": "YulBlock",
																"src": "3987:431:1",
																"statements": [
																	{
																		"nativeSrc": "4001:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:1"
																			},
																			"nativeSrc": "4017:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:1",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:1"
																					},
																					"nativeSrc": "4101:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:1"
																			},
																			"nativeSrc": "4087:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:1",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:1",
																			"nodeType": "YulBlock",
																			"src": "4288:27:1",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:1",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:1",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:1"
																			},
																			"nativeSrc": "4269:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:1"
																		},
																		"nativeSrc": "4266:49:1",
																		"nodeType": "YulIf",
																		"src": "4266:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:1"
																							},
																							"nativeSrc": "4384:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:1"
																					},
																					"nativeSrc": "4370:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:1"
																			},
																			"nativeSrc": "4328:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:1"
																		},
																		"nativeSrc": "4328:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:1"
																},
																"nativeSrc": "3975:11:1",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:1"
															},
															"nativeSrc": "3972:446:1",
															"nodeType": "YulIf",
															"src": "3972:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:1",
														"nodeType": "YulTypedName",
														"src": "3937:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:1",
														"nodeType": "YulTypedName",
														"src": "3944:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:1",
														"nodeType": "YulTypedName",
														"src": "3949:10:1",
														"type": ""
													}
												],
												"src": "3882:543:1"
											},
											{
												"body": {
													"nativeSrc": "4494:54:1",
													"nodeType": "YulBlock",
													"src": "4494:54:1",
													"statements": [
														{
															"nativeSrc": "4504:37:1",
															"nodeType": "YulAssignment",
															"src": "4504:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:1"
																},
																"nativeSrc": "4525:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:1",
														"nodeType": "YulTypedName",
														"src": "4469:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:1",
														"nodeType": "YulTypedName",
														"src": "4475:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:1",
														"nodeType": "YulTypedName",
														"src": "4485:8:1",
														"type": ""
													}
												],
												"src": "4431:117:1"
											},
											{
												"body": {
													"nativeSrc": "4605:118:1",
													"nodeType": "YulBlock",
													"src": "4605:118:1",
													"statements": [
														{
															"nativeSrc": "4615:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:1"
																				},
																				"nativeSrc": "4660:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:1"
																				},
																				"nativeSrc": "4675:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:1"
																		},
																		"nativeSrc": "4631:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:1"
																},
																"nativeSrc": "4627:56:1",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:1",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:1",
															"nodeType": "YulAssignment",
															"src": "4692:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:1"
																},
																"nativeSrc": "4702:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:1",
														"nodeType": "YulTypedName",
														"src": "4582:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:1",
														"nodeType": "YulTypedName",
														"src": "4588:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:1",
														"nodeType": "YulTypedName",
														"src": "4598:6:1",
														"type": ""
													}
												],
												"src": "4554:169:1"
											},
											{
												"body": {
													"nativeSrc": "4809:214:1",
													"nodeType": "YulBlock",
													"src": "4809:214:1",
													"statements": [
														{
															"nativeSrc": "4942:37:1",
															"nodeType": "YulAssignment",
															"src": "4942:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:1"
																},
																"nativeSrc": "4950:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:1"
																}
															]
														},
														{
															"nativeSrc": "4988:29:1",
															"nodeType": "YulAssignment",
															"src": "4988:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:1"
																		},
																		"nativeSrc": "5005:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:1"
																},
																"nativeSrc": "4996:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:1",
														"nodeType": "YulTypedName",
														"src": "4790:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:1",
														"nodeType": "YulTypedName",
														"src": "4796:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:1",
														"nodeType": "YulTypedName",
														"src": "4804:4:1",
														"type": ""
													}
												],
												"src": "4728:295:1"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:1",
													"nodeType": "YulBlock",
													"src": "5120:1303:1",
													"statements": [
														{
															"nativeSrc": "5131:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:1"
																},
																"nativeSrc": "5145:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:1",
																"nodeType": "YulBlock",
																"src": "5267:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:1"
																			},
																			"nativeSrc": "5269:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:1"
																		},
																		"nativeSrc": "5269:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:1",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:1"
																},
																"nativeSrc": "5236:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:1"
															},
															"nativeSrc": "5233:56:1",
															"nodeType": "YulIf",
															"src": "5233:56:1"
														},
														{
															"nativeSrc": "5299:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:1"
																		},
																		"nativeSrc": "5339:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:1"
																},
																"nativeSrc": "5313:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:1"
																},
																"nativeSrc": "5398:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:1"
															},
															"nativeSrc": "5398:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:1"
														},
														{
															"nativeSrc": "5475:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:1",
																"nodeType": "YulLiteral",
																"src": "5492:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:1",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:1",
															"nodeType": "YulAssignment",
															"src": "5503:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:1",
																"nodeType": "YulLiteral",
																"src": "5516:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:1",
																		"nodeType": "YulBlock",
																		"src": "5567:611:1",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:1",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:1"
																							},
																							"nativeSrc": "5608:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:1"
																					},
																					"nativeSrc": "5596:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:1",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:1"
																					},
																					"nativeSrc": "5646:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:1",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:1",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:1",
																					"nodeType": "YulBlock",
																					"src": "5764:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:1"
																												},
																												"nativeSrc": "5803:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:1"
																										},
																										"nativeSrc": "5797:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:1"
																								},
																								"nativeSrc": "5782:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:1"
																							},
																							"nativeSrc": "5782:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:1"
																						},
																						{
																							"nativeSrc": "5841:24:1",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:1",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:1"
																								},
																								"nativeSrc": "5851:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:1",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:1",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:1"
																								},
																								"nativeSrc": "5895:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:1"
																					},
																					"nativeSrc": "5727:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:1"
																				},
																				"nativeSrc": "5719:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:1",
																					"nodeType": "YulBlock",
																					"src": "5742:21:1",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:1",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:1",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:1"
																								},
																								"nativeSrc": "5749:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:1",
																					"nodeType": "YulBlock",
																					"src": "5723:3:1",
																					"statements": []
																				},
																				"src": "5719:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:1",
																					"nodeType": "YulBlock",
																					"src": "5963:156:1",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:1"
																										},
																										"nativeSrc": "6004:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:1"
																								},
																								"nativeSrc": "5998:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:1",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:1",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:1"
																												},
																												"nativeSrc": "6086:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:1"
																										},
																										"nativeSrc": "6056:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:1"
																								},
																								"nativeSrc": "6041:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:1"
																							},
																							"nativeSrc": "6041:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:1"
																					},
																					"nativeSrc": "5943:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:1"
																				},
																				"nativeSrc": "5940:179:1",
																				"nodeType": "YulIf",
																				"src": "5940:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:1",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:1"
																									},
																									"nativeSrc": "6149:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:1",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:1"
																							},
																							"nativeSrc": "6145:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:1"
																					},
																					"nativeSrc": "6132:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:1"
																				},
																				"nativeSrc": "6132:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:1"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:1",
																	"nodeType": "YulCase",
																	"src": "5560:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:1",
																		"nodeType": "YulBlock",
																		"src": "6195:222:1",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:1",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:1",
																					"nodeType": "YulBlock",
																					"src": "6246:67:1",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:1",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:1"
																										},
																										"nativeSrc": "6279:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:1"
																								},
																								"nativeSrc": "6273:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:1"
																				},
																				"nativeSrc": "6236:77:1",
																				"nodeType": "YulIf",
																				"src": "6236:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:1"
																							},
																							"nativeSrc": "6339:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:1"
																					},
																					"nativeSrc": "6326:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:1"
																				},
																				"nativeSrc": "6326:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:1"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:1",
																	"nodeType": "YulCase",
																	"src": "6187:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:1"
																},
																"nativeSrc": "5537:14:1",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:1"
															},
															"nativeSrc": "5530:887:1",
															"nodeType": "YulSwitch",
															"src": "5530:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:1",
														"nodeType": "YulTypedName",
														"src": "5109:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:1",
														"nodeType": "YulTypedName",
														"src": "5115:3:1",
														"type": ""
													}
												],
												"src": "5028:1395:1"
											},
											{
												"body": {
													"nativeSrc": "6457:152:1",
													"nodeType": "YulBlock",
													"src": "6457:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6474:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6474:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6477:77:1",
																		"nodeType": "YulLiteral",
																		"src": "6477:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6467:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6467:6:1"
																},
																"nativeSrc": "6467:88:1",
																"nodeType": "YulFunctionCall",
																"src": "6467:88:1"
															},
															"nativeSrc": "6467:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "6467:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6571:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6571:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6574:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6574:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6564:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6564:6:1"
																},
																"nativeSrc": "6564:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6564:15:1"
															},
															"nativeSrc": "6564:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6564:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6595:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6595:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6598:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6598:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6588:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6588:6:1"
																},
																"nativeSrc": "6588:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6588:15:1"
															},
															"nativeSrc": "6588:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6588:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6429:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6429:180:1"
											},
											{
												"body": {
													"nativeSrc": "6666:51:1",
													"nodeType": "YulBlock",
													"src": "6666:51:1",
													"statements": [
														{
															"nativeSrc": "6676:34:1",
															"nodeType": "YulAssignment",
															"src": "6676:34:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6701:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6701:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6704:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6704:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6697:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6697:3:1"
																},
																"nativeSrc": "6697:13:1",
																"nodeType": "YulFunctionCall",
																"src": "6697:13:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6676:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "6676:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6615:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6647:5:1",
														"nodeType": "YulTypedName",
														"src": "6647:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6657:8:1",
														"nodeType": "YulTypedName",
														"src": "6657:8:1",
														"type": ""
													}
												],
												"src": "6615:102:1"
											},
											{
												"body": {
													"nativeSrc": "6796:775:1",
													"nodeType": "YulBlock",
													"src": "6796:775:1",
													"statements": [
														{
															"nativeSrc": "6806:15:1",
															"nodeType": "YulAssignment",
															"src": "6806:15:1",
															"value": {
																"name": "_power",
																"nativeSrc": "6815:6:1",
																"nodeType": "YulIdentifier",
																"src": "6815:6:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6806:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6806:5:1"
																}
															]
														},
														{
															"nativeSrc": "6830:14:1",
															"nodeType": "YulAssignment",
															"src": "6830:14:1",
															"value": {
																"name": "_base",
																"nativeSrc": "6839:5:1",
																"nodeType": "YulIdentifier",
																"src": "6839:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "6830:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6830:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6888:677:1",
																"nodeType": "YulBlock",
																"src": "6888:677:1",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "6976:22:1",
																			"nodeType": "YulBlock",
																			"src": "6976:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "6978:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "6978:16:1"
																						},
																						"nativeSrc": "6978:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6978:18:1"
																					},
																					"nativeSrc": "6978:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "6978:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6954:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "6954:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "6964:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6964:3:1"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "6969:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6969:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "6960:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "6960:3:1"
																					},
																					"nativeSrc": "6960:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6960:14:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "6951:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "6951:2:1"
																			},
																			"nativeSrc": "6951:24:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6951:24:1"
																		},
																		"nativeSrc": "6948:50:1",
																		"nodeType": "YulIf",
																		"src": "6948:50:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "7043:419:1",
																			"nodeType": "YulBlock",
																			"src": "7043:419:1",
																			"statements": [
																				{
																					"nativeSrc": "7423:25:1",
																					"nodeType": "YulAssignment",
																					"src": "7423:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7436:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "7436:5:1"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7443:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "7443:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7432:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "7432:3:1"
																						},
																						"nativeSrc": "7432:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7432:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7423:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "7423:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7018:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "7018:8:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7028:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7028:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7014:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7014:3:1"
																			},
																			"nativeSrc": "7014:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7014:16:1"
																		},
																		"nativeSrc": "7011:451:1",
																		"nodeType": "YulIf",
																		"src": "7011:451:1"
																	},
																	{
																		"nativeSrc": "7475:23:1",
																		"nodeType": "YulAssignment",
																		"src": "7475:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7487:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "7487:4:1"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7493:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "7493:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7483:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7483:3:1"
																			},
																			"nativeSrc": "7483:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7483:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7475:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7475:4:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7511:44:1",
																		"nodeType": "YulAssignment",
																		"src": "7511:44:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7546:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "7546:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7523:22:1",
																				"nodeType": "YulIdentifier",
																				"src": "7523:22:1"
																			},
																			"nativeSrc": "7523:32:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7523:32:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7511:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "7511:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6864:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "6864:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6874:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6874:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6861:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6861:2:1"
																},
																"nativeSrc": "6861:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6861:15:1"
															},
															"nativeSrc": "6853:712:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6877:2:1",
																"nodeType": "YulBlock",
																"src": "6877:2:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "6857:3:1",
																"nodeType": "YulBlock",
																"src": "6857:3:1",
																"statements": []
															},
															"src": "6853:712:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "6723:848:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "6751:6:1",
														"nodeType": "YulTypedName",
														"src": "6751:6:1",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "6759:5:1",
														"nodeType": "YulTypedName",
														"src": "6759:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6766:8:1",
														"nodeType": "YulTypedName",
														"src": "6766:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6776:3:1",
														"nodeType": "YulTypedName",
														"src": "6776:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6784:5:1",
														"nodeType": "YulTypedName",
														"src": "6784:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "6791:4:1",
														"nodeType": "YulTypedName",
														"src": "6791:4:1",
														"type": ""
													}
												],
												"src": "6723:848:1"
											},
											{
												"body": {
													"nativeSrc": "7637:1013:1",
													"nodeType": "YulBlock",
													"src": "7637:1013:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7832:20:1",
																"nodeType": "YulBlock",
																"src": "7832:20:1",
																"statements": [
																	{
																		"nativeSrc": "7834:10:1",
																		"nodeType": "YulAssignment",
																		"src": "7834:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7843:1:1",
																			"nodeType": "YulLiteral",
																			"src": "7843:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7834:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7834:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7845:5:1",
																		"nodeType": "YulLeave",
																		"src": "7845:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7822:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "7822:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7815:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7815:6:1"
																},
																"nativeSrc": "7815:16:1",
																"nodeType": "YulFunctionCall",
																"src": "7815:16:1"
															},
															"nativeSrc": "7812:40:1",
															"nodeType": "YulIf",
															"src": "7812:40:1"
														},
														{
															"body": {
																"nativeSrc": "7877:20:1",
																"nodeType": "YulBlock",
																"src": "7877:20:1",
																"statements": [
																	{
																		"nativeSrc": "7879:10:1",
																		"nodeType": "YulAssignment",
																		"src": "7879:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7888:1:1",
																			"nodeType": "YulLiteral",
																			"src": "7888:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7879:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7879:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7890:5:1",
																		"nodeType": "YulLeave",
																		"src": "7890:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7871:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7871:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7864:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7864:6:1"
																},
																"nativeSrc": "7864:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7864:12:1"
															},
															"nativeSrc": "7861:36:1",
															"nodeType": "YulIf",
															"src": "7861:36:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8007:20:1",
																		"nodeType": "YulBlock",
																		"src": "8007:20:1",
																		"statements": [
																			{
																				"nativeSrc": "8009:10:1",
																				"nodeType": "YulAssignment",
																				"src": "8009:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8018:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8018:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8009:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8009:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8020:5:1",
																				"nodeType": "YulLeave",
																				"src": "8020:5:1"
																			}
																		]
																	},
																	"nativeSrc": "8000:27:1",
																	"nodeType": "YulCase",
																	"src": "8000:27:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8005:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8005:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8051:176:1",
																		"nodeType": "YulBlock",
																		"src": "8051:176:1",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8086:22:1",
																					"nodeType": "YulBlock",
																					"src": "8086:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8088:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "8088:16:1"
																								},
																								"nativeSrc": "8088:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8088:18:1"
																							},
																							"nativeSrc": "8088:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "8088:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8071:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "8071:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8081:3:1",
																							"nodeType": "YulLiteral",
																							"src": "8081:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8068:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "8068:2:1"
																					},
																					"nativeSrc": "8068:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8068:17:1"
																				},
																				"nativeSrc": "8065:43:1",
																				"nodeType": "YulIf",
																				"src": "8065:43:1"
																			},
																			{
																				"nativeSrc": "8121:25:1",
																				"nodeType": "YulAssignment",
																				"src": "8121:25:1",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8134:1:1",
																							"nodeType": "YulLiteral",
																							"src": "8134:1:1",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8137:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "8137:8:1"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8130:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8130:3:1"
																					},
																					"nativeSrc": "8130:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8121:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8121:5:1"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8177:22:1",
																					"nodeType": "YulBlock",
																					"src": "8177:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8179:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "8179:16:1"
																								},
																								"nativeSrc": "8179:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8179:18:1"
																							},
																							"nativeSrc": "8179:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "8179:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8165:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "8165:5:1"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8172:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "8172:3:1"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8162:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "8162:2:1"
																					},
																					"nativeSrc": "8162:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8162:14:1"
																				},
																				"nativeSrc": "8159:40:1",
																				"nodeType": "YulIf",
																				"src": "8159:40:1"
																			},
																			{
																				"nativeSrc": "8212:5:1",
																				"nodeType": "YulLeave",
																				"src": "8212:5:1"
																			}
																		]
																	},
																	"nativeSrc": "8036:191:1",
																	"nodeType": "YulCase",
																	"src": "8036:191:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8041:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8041:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "7957:4:1",
																"nodeType": "YulIdentifier",
																"src": "7957:4:1"
															},
															"nativeSrc": "7950:277:1",
															"nodeType": "YulSwitch",
															"src": "7950:277:1"
														},
														{
															"body": {
																"nativeSrc": "8359:123:1",
																"nodeType": "YulBlock",
																"src": "8359:123:1",
																"statements": [
																	{
																		"nativeSrc": "8373:28:1",
																		"nodeType": "YulAssignment",
																		"src": "8373:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8386:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "8386:4:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8392:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "8392:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8382:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8382:3:1"
																			},
																			"nativeSrc": "8382:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8382:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8373:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8373:5:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8432:22:1",
																			"nodeType": "YulBlock",
																			"src": "8432:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8434:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "8434:16:1"
																						},
																						"nativeSrc": "8434:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "8434:18:1"
																					},
																					"nativeSrc": "8434:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "8434:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8420:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "8420:5:1"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8427:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8427:3:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8417:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "8417:2:1"
																			},
																			"nativeSrc": "8417:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8417:14:1"
																		},
																		"nativeSrc": "8414:40:1",
																		"nodeType": "YulIf",
																		"src": "8414:40:1"
																	},
																	{
																		"nativeSrc": "8467:5:1",
																		"nodeType": "YulLeave",
																		"src": "8467:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8262:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "8262:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8268:2:1",
																						"nodeType": "YulLiteral",
																						"src": "8268:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8259:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8259:2:1"
																				},
																				"nativeSrc": "8259:12:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8259:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8276:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "8276:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8286:2:1",
																						"nodeType": "YulLiteral",
																						"src": "8286:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8273:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8273:2:1"
																				},
																				"nativeSrc": "8273:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8273:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8255:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8255:3:1"
																		},
																		"nativeSrc": "8255:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8255:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8311:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "8311:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8317:3:1",
																						"nodeType": "YulLiteral",
																						"src": "8317:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8308:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8308:2:1"
																				},
																				"nativeSrc": "8308:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8308:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8326:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "8326:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8336:2:1",
																						"nodeType": "YulLiteral",
																						"src": "8336:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8323:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8323:2:1"
																				},
																				"nativeSrc": "8323:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8323:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8304:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8304:3:1"
																		},
																		"nativeSrc": "8304:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8304:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8239:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8239:2:1"
																},
																"nativeSrc": "8239:111:1",
																"nodeType": "YulFunctionCall",
																"src": "8239:111:1"
															},
															"nativeSrc": "8236:246:1",
															"nodeType": "YulIf",
															"src": "8236:246:1"
														},
														{
															"nativeSrc": "8492:57:1",
															"nodeType": "YulAssignment",
															"src": "8492:57:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8526:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8526:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8529:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8529:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8535:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "8535:8:1"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8545:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8545:3:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8507:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "8507:18:1"
																},
																"nativeSrc": "8507:42:1",
																"nodeType": "YulFunctionCall",
																"src": "8507:42:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8492:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8492:5:1"
																},
																{
																	"name": "base",
																	"nativeSrc": "8499:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8499:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8588:22:1",
																"nodeType": "YulBlock",
																"src": "8588:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8590:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8590:16:1"
																			},
																			"nativeSrc": "8590:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8590:18:1"
																		},
																		"nativeSrc": "8590:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8590:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8565:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8565:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8576:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8576:3:1"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8581:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8581:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8572:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8572:3:1"
																		},
																		"nativeSrc": "8572:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8572:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8562:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8562:2:1"
																},
																"nativeSrc": "8562:25:1",
																"nodeType": "YulFunctionCall",
																"src": "8562:25:1"
															},
															"nativeSrc": "8559:51:1",
															"nodeType": "YulIf",
															"src": "8559:51:1"
														},
														{
															"nativeSrc": "8619:25:1",
															"nodeType": "YulAssignment",
															"src": "8619:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8632:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8632:5:1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8639:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8639:4:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8628:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8628:3:1"
																},
																"nativeSrc": "8628:16:1",
																"nodeType": "YulFunctionCall",
																"src": "8628:16:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8619:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8619:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7577:1073:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7607:4:1",
														"nodeType": "YulTypedName",
														"src": "7607:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7613:8:1",
														"nodeType": "YulTypedName",
														"src": "7613:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7623:3:1",
														"nodeType": "YulTypedName",
														"src": "7623:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7631:5:1",
														"nodeType": "YulTypedName",
														"src": "7631:5:1",
														"type": ""
													}
												],
												"src": "7577:1073:1"
											},
											{
												"body": {
													"nativeSrc": "8699:43:1",
													"nodeType": "YulBlock",
													"src": "8699:43:1",
													"statements": [
														{
															"nativeSrc": "8709:27:1",
															"nodeType": "YulAssignment",
															"src": "8709:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8724:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8724:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8731:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8731:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8720:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8720:3:1"
																},
																"nativeSrc": "8720:16:1",
																"nodeType": "YulFunctionCall",
																"src": "8720:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8709:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "8709:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "8656:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8681:5:1",
														"nodeType": "YulTypedName",
														"src": "8681:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8691:7:1",
														"nodeType": "YulTypedName",
														"src": "8691:7:1",
														"type": ""
													}
												],
												"src": "8656:86:1"
											},
											{
												"body": {
													"nativeSrc": "8812:217:1",
													"nodeType": "YulBlock",
													"src": "8812:217:1",
													"statements": [
														{
															"nativeSrc": "8822:31:1",
															"nodeType": "YulAssignment",
															"src": "8822:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8848:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8848:4:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8830:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8830:17:1"
																},
																"nativeSrc": "8830:23:1",
																"nodeType": "YulFunctionCall",
																"src": "8830:23:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8822:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8822:4:1"
																}
															]
														},
														{
															"nativeSrc": "8862:37:1",
															"nodeType": "YulAssignment",
															"src": "8862:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8890:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "8890:8:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "8874:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "8874:15:1"
																},
																"nativeSrc": "8874:25:1",
																"nodeType": "YulFunctionCall",
																"src": "8874:25:1"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "8862:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "8862:8:1"
																}
															]
														},
														{
															"nativeSrc": "8909:113:1",
															"nodeType": "YulAssignment",
															"src": "8909:113:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8939:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8939:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8945:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "8945:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8955:66:1",
																		"nodeType": "YulLiteral",
																		"src": "8955:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "8918:20:1",
																	"nodeType": "YulIdentifier",
																	"src": "8918:20:1"
																},
																"nativeSrc": "8918:104:1",
																"nodeType": "YulFunctionCall",
																"src": "8918:104:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8909:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8909:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "8748:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8787:4:1",
														"nodeType": "YulTypedName",
														"src": "8787:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8793:8:1",
														"nodeType": "YulTypedName",
														"src": "8793:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8806:5:1",
														"nodeType": "YulTypedName",
														"src": "8806:5:1",
														"type": ""
													}
												],
												"src": "8748:281:1"
											},
											{
												"body": {
													"nativeSrc": "9083:362:1",
													"nodeType": "YulBlock",
													"src": "9083:362:1",
													"statements": [
														{
															"nativeSrc": "9093:25:1",
															"nodeType": "YulAssignment",
															"src": "9093:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9116:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9116:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9098:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9098:17:1"
																},
																"nativeSrc": "9098:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9098:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9093:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9093:1:1"
																}
															]
														},
														{
															"nativeSrc": "9127:25:1",
															"nodeType": "YulAssignment",
															"src": "9127:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9150:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9150:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9132:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9132:17:1"
																},
																"nativeSrc": "9132:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9132:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9127:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9127:1:1"
																}
															]
														},
														{
															"nativeSrc": "9161:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "9161:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9184:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9184:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9187:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9187:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9180:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9180:3:1"
																},
																"nativeSrc": "9180:9:1",
																"nodeType": "YulFunctionCall",
																"src": "9180:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9165:11:1",
																	"nodeType": "YulTypedName",
																	"src": "9165:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9198:41:1",
															"nodeType": "YulAssignment",
															"src": "9198:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9227:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "9227:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9209:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9209:17:1"
																},
																"nativeSrc": "9209:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9209:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9198:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "9198:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9416:22:1",
																"nodeType": "YulBlock",
																"src": "9416:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9418:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9418:16:1"
																			},
																			"nativeSrc": "9418:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9418:18:1"
																		},
																		"nativeSrc": "9418:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9418:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9349:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "9349:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9342:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "9342:6:1"
																				},
																				"nativeSrc": "9342:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9342:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9372:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "9372:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9379:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "9379:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9388:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "9388:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9375:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "9375:3:1"
																						},
																						"nativeSrc": "9375:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "9375:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9369:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "9369:2:1"
																				},
																				"nativeSrc": "9369:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9369:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9322:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9322:2:1"
																		},
																		"nativeSrc": "9322:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9322:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9302:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9302:6:1"
																},
																"nativeSrc": "9302:113:1",
																"nodeType": "YulFunctionCall",
																"src": "9302:113:1"
															},
															"nativeSrc": "9299:139:1",
															"nodeType": "YulIf",
															"src": "9299:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9035:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9066:1:1",
														"nodeType": "YulTypedName",
														"src": "9066:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9069:1:1",
														"nodeType": "YulTypedName",
														"src": "9069:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9075:7:1",
														"nodeType": "YulTypedName",
														"src": "9075:7:1",
														"type": ""
													}
												],
												"src": "9035:410:1"
											},
											{
												"body": {
													"nativeSrc": "9516:53:1",
													"nodeType": "YulBlock",
													"src": "9516:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9533:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9533:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9556:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "9556:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9538:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "9538:17:1"
																		},
																		"nativeSrc": "9538:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9538:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9526:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9526:6:1"
																},
																"nativeSrc": "9526:37:1",
																"nodeType": "YulFunctionCall",
																"src": "9526:37:1"
															},
															"nativeSrc": "9526:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "9526:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9451:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9504:5:1",
														"nodeType": "YulTypedName",
														"src": "9504:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9511:3:1",
														"nodeType": "YulTypedName",
														"src": "9511:3:1",
														"type": ""
													}
												],
												"src": "9451:118:1"
											},
											{
												"body": {
													"nativeSrc": "9673:124:1",
													"nodeType": "YulBlock",
													"src": "9673:124:1",
													"statements": [
														{
															"nativeSrc": "9683:26:1",
															"nodeType": "YulAssignment",
															"src": "9683:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9695:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9695:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9706:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9706:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9691:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9691:3:1"
																},
																"nativeSrc": "9691:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9691:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9683:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9683:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9763:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9763:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9776:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9776:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9787:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9787:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9772:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9772:3:1"
																		},
																		"nativeSrc": "9772:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9772:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9719:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9719:43:1"
																},
																"nativeSrc": "9719:71:1",
																"nodeType": "YulFunctionCall",
																"src": "9719:71:1"
															},
															"nativeSrc": "9719:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "9719:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9575:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9645:9:1",
														"nodeType": "YulTypedName",
														"src": "9645:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9657:6:1",
														"nodeType": "YulTypedName",
														"src": "9657:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9668:4:1",
														"nodeType": "YulTypedName",
														"src": "9668:4:1",
														"type": ""
													}
												],
												"src": "9575:222:1"
											},
											{
												"body": {
													"nativeSrc": "9847:147:1",
													"nodeType": "YulBlock",
													"src": "9847:147:1",
													"statements": [
														{
															"nativeSrc": "9857:25:1",
															"nodeType": "YulAssignment",
															"src": "9857:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9880:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9880:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9862:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9862:17:1"
																},
																"nativeSrc": "9862:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9862:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9857:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9857:1:1"
																}
															]
														},
														{
															"nativeSrc": "9891:25:1",
															"nodeType": "YulAssignment",
															"src": "9891:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9914:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9914:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9896:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9896:17:1"
																},
																"nativeSrc": "9896:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9896:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9891:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9891:1:1"
																}
															]
														},
														{
															"nativeSrc": "9925:16:1",
															"nodeType": "YulAssignment",
															"src": "9925:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9936:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9936:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9939:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9939:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9932:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9932:3:1"
																},
																"nativeSrc": "9932:9:1",
																"nodeType": "YulFunctionCall",
																"src": "9932:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9925:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9925:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9965:22:1",
																"nodeType": "YulBlock",
																"src": "9965:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9967:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9967:16:1"
																			},
																			"nativeSrc": "9967:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9967:18:1"
																		},
																		"nativeSrc": "9967:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9967:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9957:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9957:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9960:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9960:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9954:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9954:2:1"
																},
																"nativeSrc": "9954:10:1",
																"nodeType": "YulFunctionCall",
																"src": "9954:10:1"
															},
															"nativeSrc": "9951:36:1",
															"nodeType": "YulIf",
															"src": "9951:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9803:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9834:1:1",
														"nodeType": "YulTypedName",
														"src": "9834:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9837:1:1",
														"nodeType": "YulTypedName",
														"src": "9837:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9843:3:1",
														"nodeType": "YulTypedName",
														"src": "9843:3:1",
														"type": ""
													}
												],
												"src": "9803:191:1"
											},
											{
												"body": {
													"nativeSrc": "10065:53:1",
													"nodeType": "YulBlock",
													"src": "10065:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10082:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10082:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10105:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "10105:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10087:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "10087:17:1"
																		},
																		"nativeSrc": "10087:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10087:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10075:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10075:6:1"
																},
																"nativeSrc": "10075:37:1",
																"nodeType": "YulFunctionCall",
																"src": "10075:37:1"
															},
															"nativeSrc": "10075:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "10075:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10000:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10053:5:1",
														"nodeType": "YulTypedName",
														"src": "10053:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10060:3:1",
														"nodeType": "YulTypedName",
														"src": "10060:3:1",
														"type": ""
													}
												],
												"src": "10000:118:1"
											},
											{
												"body": {
													"nativeSrc": "10278:288:1",
													"nodeType": "YulBlock",
													"src": "10278:288:1",
													"statements": [
														{
															"nativeSrc": "10288:26:1",
															"nodeType": "YulAssignment",
															"src": "10288:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10300:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10300:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10311:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10311:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10296:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10296:3:1"
																},
																"nativeSrc": "10296:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10296:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10288:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10288:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10368:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10368:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10381:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10381:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10392:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10392:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10377:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10377:3:1"
																		},
																		"nativeSrc": "10377:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10377:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10324:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10324:43:1"
																},
																"nativeSrc": "10324:71:1",
																"nodeType": "YulFunctionCall",
																"src": "10324:71:1"
															},
															"nativeSrc": "10324:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "10324:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10449:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10449:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10462:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10462:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10473:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10473:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10458:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10458:3:1"
																		},
																		"nativeSrc": "10458:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10458:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10405:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10405:43:1"
																},
																"nativeSrc": "10405:72:1",
																"nodeType": "YulFunctionCall",
																"src": "10405:72:1"
															},
															"nativeSrc": "10405:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "10405:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10531:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10531:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10544:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10544:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10555:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10555:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10540:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10540:3:1"
																		},
																		"nativeSrc": "10540:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10540:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10487:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10487:43:1"
																},
																"nativeSrc": "10487:72:1",
																"nodeType": "YulFunctionCall",
																"src": "10487:72:1"
															},
															"nativeSrc": "10487:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "10487:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10124:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10234:9:1",
														"nodeType": "YulTypedName",
														"src": "10234:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10246:6:1",
														"nodeType": "YulTypedName",
														"src": "10246:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10254:6:1",
														"nodeType": "YulTypedName",
														"src": "10254:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10262:6:1",
														"nodeType": "YulTypedName",
														"src": "10262:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10273:4:1",
														"nodeType": "YulTypedName",
														"src": "10273:4:1",
														"type": ""
													}
												],
												"src": "10124:442:1"
											},
											{
												"body": {
													"nativeSrc": "10670:124:1",
													"nodeType": "YulBlock",
													"src": "10670:124:1",
													"statements": [
														{
															"nativeSrc": "10680:26:1",
															"nodeType": "YulAssignment",
															"src": "10680:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10692:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10692:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10703:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10703:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10688:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10688:3:1"
																},
																"nativeSrc": "10688:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10688:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10680:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10680:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10760:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10760:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10773:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10773:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10784:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10784:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10769:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10769:3:1"
																		},
																		"nativeSrc": "10769:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10769:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10716:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10716:43:1"
																},
																"nativeSrc": "10716:71:1",
																"nodeType": "YulFunctionCall",
																"src": "10716:71:1"
															},
															"nativeSrc": "10716:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "10716:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10572:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10642:9:1",
														"nodeType": "YulTypedName",
														"src": "10642:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10654:6:1",
														"nodeType": "YulTypedName",
														"src": "10654:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10665:4:1",
														"nodeType": "YulTypedName",
														"src": "10665:4:1",
														"type": ""
													}
												],
												"src": "10572:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600a6005553360065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015610054575f80fd5b50604051611ad9380380611ad983398181016040528101906100769190610444565b6040518060400160405280600981526020017f556d6572546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f55544b000000000000000000000000000000000000000000000000000000000081525081600390816100f191906106a9565b50806004908161010191906106a9565b50505061013a8161011661014060201b60201c565b600a61012291906108e0565b61271061012f919061092a565b61014860201b60201c565b50610a23565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036101b8575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016101af919061097a565b60405180910390fd5b6101c95f83836101cd60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361021d578060025f8282546102119190610993565b925050819055506102eb565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156102a6578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161029d939291906109d5565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610332578060025f828254039250508190555061037c565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103d99190610a0a565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610413826103ea565b9050919050565b61042381610409565b811461042d575f80fd5b50565b5f8151905061043e8161041a565b92915050565b5f60208284031215610459576104586103e6565b5b5f61046684828501610430565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806104ea57607f821691505b6020821081036104fd576104fc6104a6565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261055f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610524565b6105698683610524565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6105ad6105a86105a384610581565b61058a565b610581565b9050919050565b5f819050919050565b6105c683610593565b6105da6105d2826105b4565b848454610530565b825550505050565b5f90565b6105ee6105e2565b6105f98184846105bd565b505050565b5b8181101561061c576106115f826105e6565b6001810190506105ff565b5050565b601f8211156106615761063281610503565b61063b84610515565b8101602085101561064a578190505b61065e61065685610515565b8301826105fe565b50505b505050565b5f82821c905092915050565b5f6106815f1984600802610666565b1980831691505092915050565b5f6106998383610672565b9150826002028217905092915050565b6106b28261046f565b67ffffffffffffffff8111156106cb576106ca610479565b5b6106d582546104d3565b6106e0828285610620565b5f60209050601f831160018114610711575f84156106ff578287015190505b610709858261068e565b865550610770565b601f19841661071f86610503565b5f5b8281101561074657848901518255600182019150602085019450602081019050610721565b86831015610763578489015161075f601f891682610672565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156107fa578086048111156107d6576107d5610778565b5b60018516156107e55780820291505b80810290506107f3856107a5565b94506107ba565b94509492505050565b5f8261081257600190506108cd565b8161081f575f90506108cd565b8160018114610835576002811461083f5761086e565b60019150506108cd565b60ff84111561085157610850610778565b5b8360020a91508482111561086857610867610778565b5b506108cd565b5060208310610133831016604e8410600b84101617156108a35782820a90508381111561089e5761089d610778565b5b6108cd565b6108b084848460016107b1565b925090508184048111156108c7576108c6610778565b5b81810290505b9392505050565b5f60ff82169050919050565b5f6108ea82610581565b91506108f5836108d4565b92506109227fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610803565b905092915050565b5f61093482610581565b915061093f83610581565b925082820261094d81610581565b9150828204841483151761096457610963610778565b5b5092915050565b61097481610409565b82525050565b5f60208201905061098d5f83018461096b565b92915050565b5f61099d82610581565b91506109a883610581565b92508282019050808211156109c0576109bf610778565b5b92915050565b6109cf81610581565b82525050565b5f6060820190506109e85f83018661096b565b6109f560208301856109c6565b610a0260408301846109c6565b949350505050565b5f602082019050610a1d5f8301846109c6565b92915050565b6110a980610a305f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c80636a1db1bf1161006f5780636a1db1bf1461016557806370a082311461019557806395d89b41146101c5578063a9059cbb146101e3578063dd62ed3e14610213578063ddca3f4314610243576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b3610261565b6040516100c09190610bbe565b60405180910390f35b6100e360048036038101906100de9190610c6f565b6102f1565b6040516100f09190610cc7565b60405180910390f35b610101610313565b60405161010e9190610cef565b60405180910390f35b610131600480360381019061012c9190610d08565b61031c565b60405161013e9190610cc7565b60405180910390f35b61014f61034a565b60405161015c9190610d73565b60405180910390f35b61017f600480360381019061017a9190610d8c565b610352565b60405161018c9190610cc7565b60405180910390f35b6101af60048036038101906101aa9190610db7565b6103f9565b6040516101bc9190610cef565b60405180910390f35b6101cd61043e565b6040516101da9190610bbe565b60405180910390f35b6101fd60048036038101906101f89190610c6f565b6104ce565b60405161020a9190610cc7565b60405180910390f35b61022d60048036038101906102289190610de2565b610542565b60405161023a9190610cef565b60405180910390f35b61024b6105c4565b6040516102589190610cef565b60405180910390f35b60606003805461027090610e4d565b80601f016020809104026020016040519081016040528092919081815260200182805461029c90610e4d565b80156102e75780601f106102be576101008083540402835291602001916102e7565b820191905f5260205f20905b8154815290600101906020018083116102ca57829003601f168201915b5050505050905090565b5f806102fb6105ca565b90506103088185856105d1565b600191505092915050565b5f600254905090565b5f806103266105ca565b90506103338582856105e3565b61033e858585610676565b60019150509392505050565b5f6012905090565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166103936105ca565b73ffffffffffffffffffffffffffffffffffffffff16146103e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e090610ec7565b60405180910390fd5b8160058190555060019050919050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461044d90610e4d565b80601f016020809104026020016040519081016040528092919081815260200182805461047990610e4d565b80156104c45780601f1061049b576101008083540402835291602001916104c4565b820191905f5260205f20905b8154815290600101906020018083116104a757829003601f168201915b5050505050905090565b5f806104d86105ca565b90505f735b38da6a701c568545dcfcb03fcb875f56beddc490505f6064600554866105039190610f12565b61050d9190610f80565b90506005548561051d9190610fb0565b945061052a838383610676565b610535838787610676565b6001935050505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60055481565b5f33905090565b6105de8383836001610766565b505050565b5f6105ee8484610542565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156106705781811015610661578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161065893929190610ff2565b60405180910390fd5b61066f84848484035f610766565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106e6575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106dd9190611027565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610756575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161074d9190611027565b60405180910390fd5b610761838383610935565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107d6575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107cd9190611027565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610846575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161083d9190611027565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561092f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109269190610cef565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610985578060025f8282546109799190611040565b92505081905550610a53565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610a0e578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a0593929190610ff2565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a9a578060025f8282540392505081905550610ae4565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b419190610cef565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610b9082610b4e565b610b9a8185610b58565b9350610baa818560208601610b68565b610bb381610b76565b840191505092915050565b5f6020820190508181035f830152610bd68184610b86565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c0b82610be2565b9050919050565b610c1b81610c01565b8114610c25575f80fd5b50565b5f81359050610c3681610c12565b92915050565b5f819050919050565b610c4e81610c3c565b8114610c58575f80fd5b50565b5f81359050610c6981610c45565b92915050565b5f8060408385031215610c8557610c84610bde565b5b5f610c9285828601610c28565b9250506020610ca385828601610c5b565b9150509250929050565b5f8115159050919050565b610cc181610cad565b82525050565b5f602082019050610cda5f830184610cb8565b92915050565b610ce981610c3c565b82525050565b5f602082019050610d025f830184610ce0565b92915050565b5f805f60608486031215610d1f57610d1e610bde565b5b5f610d2c86828701610c28565b9350506020610d3d86828701610c28565b9250506040610d4e86828701610c5b565b9150509250925092565b5f60ff82169050919050565b610d6d81610d58565b82525050565b5f602082019050610d865f830184610d64565b92915050565b5f60208284031215610da157610da0610bde565b5b5f610dae84828501610c5b565b91505092915050565b5f60208284031215610dcc57610dcb610bde565b5b5f610dd984828501610c28565b91505092915050565b5f8060408385031215610df857610df7610bde565b5b5f610e0585828601610c28565b9250506020610e1685828601610c28565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e6457607f821691505b602082108103610e7757610e76610e20565b5b50919050565b7f4e6f7420616e206f776e657200000000000000000000000000000000000000005f82015250565b5f610eb1600c83610b58565b9150610ebc82610e7d565b602082019050919050565b5f6020820190508181035f830152610ede81610ea5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f1c82610c3c565b9150610f2783610c3c565b9250828202610f3581610c3c565b91508282048414831517610f4c57610f4b610ee5565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610f8a82610c3c565b9150610f9583610c3c565b925082610fa557610fa4610f53565b5b828204905092915050565b5f610fba82610c3c565b9150610fc583610c3c565b9250828203905081811115610fdd57610fdc610ee5565b5b92915050565b610fec81610c01565b82525050565b5f6060820190506110055f830186610fe3565b6110126020830185610ce0565b61101f6040830184610ce0565b949350505050565b5f60208201905061103a5f830184610fe3565b92915050565b5f61104a82610c3c565b915061105583610c3c565b925082820190508082111561106d5761106c610ee5565b5b9291505056fea2646970667358221220d1df9255c565cb9400e0b1d74804658d476f636dda9b77c3a7340335483335fd64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x5 SSTORE CALLER PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x54 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1AD9 CODESIZE SUB DUP1 PUSH2 0x1AD9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556D6572546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x55544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x6A9 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x6A9 JUMP JUMPDEST POP POP POP PUSH2 0x13A DUP2 PUSH2 0x116 PUSH2 0x140 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x92A JUMP JUMPDEST PUSH2 0x148 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xA23 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C9 PUSH0 DUP4 DUP4 PUSH2 0x1CD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x21D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2EB JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2A6 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x332 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x37C JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0xA0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x413 DUP3 PUSH2 0x3EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x423 DUP2 PUSH2 0x409 JUMP JUMPDEST DUP2 EQ PUSH2 0x42D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x43E DUP2 PUSH2 0x41A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x459 JUMPI PUSH2 0x458 PUSH2 0x3E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x466 DUP5 DUP3 DUP6 ADD PUSH2 0x430 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4EA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4FD JUMPI PUSH2 0x4FC PUSH2 0x4A6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x55F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x524 JUMP JUMPDEST PUSH2 0x569 DUP7 DUP4 PUSH2 0x524 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5AD PUSH2 0x5A8 PUSH2 0x5A3 DUP5 PUSH2 0x581 JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C6 DUP4 PUSH2 0x593 JUMP JUMPDEST PUSH2 0x5DA PUSH2 0x5D2 DUP3 PUSH2 0x5B4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x530 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x5EE PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x5F9 DUP2 DUP5 DUP5 PUSH2 0x5BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x61C JUMPI PUSH2 0x611 PUSH0 DUP3 PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5FF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x661 JUMPI PUSH2 0x632 DUP2 PUSH2 0x503 JUMP JUMPDEST PUSH2 0x63B DUP5 PUSH2 0x515 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x64A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x65E PUSH2 0x656 DUP6 PUSH2 0x515 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x5FE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x681 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x666 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x699 DUP4 DUP4 PUSH2 0x672 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6B2 DUP3 PUSH2 0x46F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CB JUMPI PUSH2 0x6CA PUSH2 0x479 JUMP JUMPDEST JUMPDEST PUSH2 0x6D5 DUP3 SLOAD PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x6E0 DUP3 DUP3 DUP6 PUSH2 0x620 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x711 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x6FF JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x709 DUP6 DUP3 PUSH2 0x68E JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x770 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x71F DUP7 PUSH2 0x503 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x746 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x721 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x763 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x75F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x672 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x7FA JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x7D6 JUMPI PUSH2 0x7D5 PUSH2 0x778 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x7E5 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x7F3 DUP6 PUSH2 0x7A5 JUMP JUMPDEST SWAP5 POP PUSH2 0x7BA JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x812 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x8CD JUMP JUMPDEST DUP2 PUSH2 0x81F JUMPI PUSH0 SWAP1 POP PUSH2 0x8CD JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x835 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x83F JUMPI PUSH2 0x86E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x8CD JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x851 JUMPI PUSH2 0x850 PUSH2 0x778 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x868 JUMPI PUSH2 0x867 PUSH2 0x778 JUMP JUMPDEST JUMPDEST POP PUSH2 0x8CD JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x8A3 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x89E JUMPI PUSH2 0x89D PUSH2 0x778 JUMP JUMPDEST JUMPDEST PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x8B0 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x7B1 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x8C7 JUMPI PUSH2 0x8C6 PUSH2 0x778 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8EA DUP3 PUSH2 0x581 JUMP JUMPDEST SWAP2 POP PUSH2 0x8F5 DUP4 PUSH2 0x8D4 JUMP JUMPDEST SWAP3 POP PUSH2 0x922 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x803 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x934 DUP3 PUSH2 0x581 JUMP JUMPDEST SWAP2 POP PUSH2 0x93F DUP4 PUSH2 0x581 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x94D DUP2 PUSH2 0x581 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x964 JUMPI PUSH2 0x963 PUSH2 0x778 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x974 DUP2 PUSH2 0x409 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x98D PUSH0 DUP4 ADD DUP5 PUSH2 0x96B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x99D DUP3 PUSH2 0x581 JUMP JUMPDEST SWAP2 POP PUSH2 0x9A8 DUP4 PUSH2 0x581 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9BF PUSH2 0x778 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9CF DUP2 PUSH2 0x581 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x9E8 PUSH0 DUP4 ADD DUP7 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x9F5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0xA02 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9C6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA1D PUSH0 DUP4 ADD DUP5 PUSH2 0x9C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10A9 DUP1 PUSH2 0xA30 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A1DB1BF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x6A1DB1BF EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x243 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xC6F JUMP JUMPDEST PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x34A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xD8C JUMP JUMPDEST PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xC6F JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x542 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x270 SWAP1 PUSH2 0xE4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29C SWAP1 PUSH2 0xE4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2FB PUSH2 0x5CA JUMP JUMPDEST SWAP1 POP PUSH2 0x308 DUP2 DUP6 DUP6 PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x326 PUSH2 0x5CA JUMP JUMPDEST SWAP1 POP PUSH2 0x333 DUP6 DUP3 DUP6 PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x33E DUP6 DUP6 DUP6 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x393 PUSH2 0x5CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E0 SWAP1 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x44D SWAP1 PUSH2 0xE4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x479 SWAP1 PUSH2 0xE4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4D8 PUSH2 0x5CA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0x5B38DA6A701C568545DCFCB03FCB875F56BEDDC4 SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x5 SLOAD DUP7 PUSH2 0x503 SWAP2 SWAP1 PUSH2 0xF12 JUMP JUMPDEST PUSH2 0x50D SWAP2 SWAP1 PUSH2 0xF80 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD DUP6 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0xFB0 JUMP JUMPDEST SWAP5 POP PUSH2 0x52A DUP4 DUP4 DUP4 PUSH2 0x676 JUMP JUMPDEST PUSH2 0x535 DUP4 DUP8 DUP8 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5DE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x766 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5EE DUP5 DUP5 PUSH2 0x542 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x670 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x661 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x658 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x766 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DD SWAP2 SWAP1 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x756 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x761 DUP4 DUP4 DUP4 PUSH2 0x935 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7D6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CD SWAP2 SWAP1 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x846 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83D SWAP2 SWAP1 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x92F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x926 SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x985 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x979 SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA53 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA0E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA05 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAE4 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB41 SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB90 DUP3 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0xB9A DUP2 DUP6 PUSH2 0xB58 JUMP JUMPDEST SWAP4 POP PUSH2 0xBAA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB68 JUMP JUMPDEST PUSH2 0xBB3 DUP2 PUSH2 0xB76 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBD6 DUP2 DUP5 PUSH2 0xB86 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC0B DUP3 PUSH2 0xBE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1B DUP2 PUSH2 0xC01 JUMP JUMPDEST DUP2 EQ PUSH2 0xC25 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC36 DUP2 PUSH2 0xC12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC4E DUP2 PUSH2 0xC3C JUMP JUMPDEST DUP2 EQ PUSH2 0xC58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC69 DUP2 PUSH2 0xC45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC85 JUMPI PUSH2 0xC84 PUSH2 0xBDE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC92 DUP6 DUP3 DUP7 ADD PUSH2 0xC28 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCA3 DUP6 DUP3 DUP7 ADD PUSH2 0xC5B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC1 DUP2 PUSH2 0xCAD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCDA PUSH0 DUP4 ADD DUP5 PUSH2 0xCB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCE9 DUP2 PUSH2 0xC3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD02 PUSH0 DUP4 ADD DUP5 PUSH2 0xCE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD1F JUMPI PUSH2 0xD1E PUSH2 0xBDE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD2C DUP7 DUP3 DUP8 ADD PUSH2 0xC28 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD3D DUP7 DUP3 DUP8 ADD PUSH2 0xC28 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD4E DUP7 DUP3 DUP8 ADD PUSH2 0xC5B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6D DUP2 PUSH2 0xD58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD86 PUSH0 DUP4 ADD DUP5 PUSH2 0xD64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDA1 JUMPI PUSH2 0xDA0 PUSH2 0xBDE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDAE DUP5 DUP3 DUP6 ADD PUSH2 0xC5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCC JUMPI PUSH2 0xDCB PUSH2 0xBDE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDD9 DUP5 DUP3 DUP6 ADD PUSH2 0xC28 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF8 JUMPI PUSH2 0xDF7 PUSH2 0xBDE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE05 DUP6 DUP3 DUP7 ADD PUSH2 0xC28 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE16 DUP6 DUP3 DUP7 ADD PUSH2 0xC28 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE64 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE77 JUMPI PUSH2 0xE76 PUSH2 0xE20 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616E206F776E65720000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEB1 PUSH1 0xC DUP4 PUSH2 0xB58 JUMP JUMPDEST SWAP2 POP PUSH2 0xEBC DUP3 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEDE DUP2 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF1C DUP3 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0xF27 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF35 DUP2 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF4C JUMPI PUSH2 0xF4B PUSH2 0xEE5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF8A DUP3 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0xF95 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFA5 JUMPI PUSH2 0xFA4 PUSH2 0xF53 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFBA DUP3 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0xFC5 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFDD JUMPI PUSH2 0xFDC PUSH2 0xEE5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFEC DUP2 PUSH2 0xC01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1005 PUSH0 DUP4 ADD DUP7 PUSH2 0xFE3 JUMP JUMPDEST PUSH2 0x1012 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCE0 JUMP JUMPDEST PUSH2 0x101F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCE0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x103A PUSH0 DUP4 ADD DUP5 PUSH2 0xFE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x104A DUP3 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1055 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x106D JUMPI PUSH2 0x106C PUSH2 0xEE5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xDF SWAP3 SSTORE 0xC5 PUSH6 0xCB9400E0B1D7 BASEFEE DIV PUSH6 0x8D476F636DDA SWAP12 PUSH24 0xC3A7340335483335FD64736F6C634300081A003300000000 ",
							"sourceMap": "22388:152:0:-:0;;;14234:2;14216:20;;14259:10;14242:27;;;;;;;;;;;;;;;;;;;;22422:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12502:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12576:5;12568;:13;;;;;;:::i;:::-;;12601:7;12591;:17;;;;;;:::i;:::-;;12502:113;;22489:42:::1;22495:9;22520:10;:8;;;:10;;:::i;:::-;22514:2;:16;;;;:::i;:::-;22506:5;:24;;;;:::i;:::-;22489:5;;;:42;;:::i;:::-;22422:116:::0;22388:152;;13608:82;13657:5;13681:2;13674:9;;13608:82;:::o;18840:208::-;18929:1;18910:21;;:7;:21;;;18906:91;;18983:1;18954:32;;;;;;;;;;;:::i;:::-;;;;;;;;18906:91;19006:35;19022:1;19026:7;19035:5;19006:7;;;:35;;:::i;:::-;18840:208;;:::o;17390:1107::-;17495:1;17479:18;;:4;:18;;;17475:540;;17631:5;17615:12;;:21;;;;;;;:::i;:::-;;;;;;;;17475:540;;;17667:19;17689:9;:15;17699:4;17689:15;;;;;;;;;;;;;;;;17667:37;;17736:5;17722:11;:19;17718:115;;;17793:4;17799:11;17812:5;17768:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17718:115;17985:5;17971:11;:19;17953:9;:15;17963:4;17953:15;;;;;;;;;;;;;;;:37;;;;17653:362;17475:540;18043:1;18029:16;;:2;:16;;;18025:425;;18208:5;18192:12;;:21;;;;;;;;;;;18025:425;;;18420:5;18403:9;:13;18413:2;18403:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;18025:425;18480:2;18465:25;;18474:4;18465:25;;;18484:5;18465:25;;;;;;:::i;:::-;;;;;;;;17390:1107;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:180::-;6477:77;6474:1;6467:88;6574:4;6571:1;6564:15;6598:4;6595:1;6588:15;6615:102;6657:8;6704:5;6701:1;6697:13;6676:34;;6615:102;;;:::o;6723:848::-;6784:5;6791:4;6815:6;6806:15;;6839:5;6830:14;;6853:712;6874:1;6864:8;6861:15;6853:712;;;6969:4;6964:3;6960:14;6954:4;6951:24;6948:50;;;6978:18;;:::i;:::-;6948:50;7028:1;7018:8;7014:16;7011:451;;;7443:4;7436:5;7432:16;7423:25;;7011:451;7493:4;7487;7483:15;7475:23;;7523:32;7546:8;7523:32;:::i;:::-;7511:44;;6853:712;;;6723:848;;;;;;;:::o;7577:1073::-;7631:5;7822:8;7812:40;;7843:1;7834:10;;7845:5;;7812:40;7871:4;7861:36;;7888:1;7879:10;;7890:5;;7861:36;7957:4;8005:1;8000:27;;;;8041:1;8036:191;;;;7950:277;;8000:27;8018:1;8009:10;;8020:5;;;8036:191;8081:3;8071:8;8068:17;8065:43;;;8088:18;;:::i;:::-;8065:43;8137:8;8134:1;8130:16;8121:25;;8172:3;8165:5;8162:14;8159:40;;;8179:18;;:::i;:::-;8159:40;8212:5;;;7950:277;;8336:2;8326:8;8323:16;8317:3;8311:4;8308:13;8304:36;8286:2;8276:8;8273:16;8268:2;8262:4;8259:12;8255:35;8239:111;8236:246;;;8392:8;8386:4;8382:19;8373:28;;8427:3;8420:5;8417:14;8414:40;;;8434:18;;:::i;:::-;8414:40;8467:5;;8236:246;8507:42;8545:3;8535:8;8529:4;8526:1;8507:42;:::i;:::-;8492:57;;;;8581:4;8576:3;8572:14;8565:5;8562:25;8559:51;;;8590:18;;:::i;:::-;8559:51;8639:4;8632:5;8628:16;8619:25;;7577:1073;;;;;;:::o;8656:86::-;8691:7;8731:4;8724:5;8720:16;8709:27;;8656:86;;;:::o;8748:281::-;8806:5;8830:23;8848:4;8830:23;:::i;:::-;8822:31;;8874:25;8890:8;8874:25;:::i;:::-;8862:37;;8918:104;8955:66;8945:8;8939:4;8918:104;:::i;:::-;8909:113;;8748:281;;;;:::o;9035:410::-;9075:7;9098:20;9116:1;9098:20;:::i;:::-;9093:25;;9132:20;9150:1;9132:20;:::i;:::-;9127:25;;9187:1;9184;9180:9;9209:30;9227:11;9209:30;:::i;:::-;9198:41;;9388:1;9379:7;9375:15;9372:1;9369:22;9349:1;9342:9;9322:83;9299:139;;9418:18;;:::i;:::-;9299:139;9083:362;9035:410;;;;:::o;9451:118::-;9538:24;9556:5;9538:24;:::i;:::-;9533:3;9526:37;9451:118;;:::o;9575:222::-;9668:4;9706:2;9695:9;9691:18;9683:26;;9719:71;9787:1;9776:9;9772:17;9763:6;9719:71;:::i;:::-;9575:222;;;;:::o;9803:191::-;9843:3;9862:20;9880:1;9862:20;:::i;:::-;9857:25;;9896:20;9914:1;9896:20;:::i;:::-;9891:25;;9939:1;9936;9932:9;9925:16;;9960:3;9957:1;9954:10;9951:36;;;9967:18;;:::i;:::-;9951:36;9803:191;;;;:::o;10000:118::-;10087:24;10105:5;10087:24;:::i;:::-;10082:3;10075:37;10000:118;;:::o;10124:442::-;10273:4;10311:2;10300:9;10296:18;10288:26;;10324:71;10392:1;10381:9;10377:17;10368:6;10324:71;:::i;:::-;10405:72;10473:2;10462:9;10458:18;10449:6;10405:72;:::i;:::-;10487;10555:2;10544:9;10540:18;10531:6;10487:72;:::i;:::-;10124:442;;;;;;:::o;10572:222::-;10665:4;10703:2;10692:9;10688:18;10680:26;;10716:71;10784:1;10773:9;10769:17;10760:6;10716:71;:::i;:::-;10572:222;;;;:::o;22388:152:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_720": {
									"entryPoint": 1489,
									"id": 720,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_780": {
									"entryPoint": 1894,
									"id": 780,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": 1482,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_828": {
									"entryPoint": 1507,
									"id": 828,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_559": {
									"entryPoint": 1654,
									"id": 559,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_636": {
									"entryPoint": 2357,
									"id": 636,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_456": {
									"entryPoint": 1346,
									"id": 456,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_480": {
									"entryPoint": 753,
									"id": 480,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": 1017,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@changeFee_439": {
									"entryPoint": 850,
									"id": 439,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_335": {
									"entryPoint": 842,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@fee_361": {
									"entryPoint": 1476,
									"id": 361,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 609,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_326": {
									"entryPoint": 1086,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": 787,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_512": {
									"entryPoint": 796,
									"id": 512,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_411": {
									"entryPoint": 1230,
									"id": 411,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_38f1e8dc38fecfe471d0b117a6310f3d806a6db8c5b6d4cb844edcf1633e5233_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4082,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_38f1e8dc38fecfe471d0b117a6310f3d806a6db8c5b6d4cb844edcf1633e5233__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2920,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3813,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3923,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3616,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3038,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_38f1e8dc38fecfe471d0b117a6310f3d806a6db8c5b6d4cb844edcf1633e5233": {
									"entryPoint": 3709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9546:1",
										"nodeType": "YulBlock",
										"src": "0:9546:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "208:73:1",
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nativeSrc": "218:19:1",
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nativeSrc": "218:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nativeSrc": "246:29:1",
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:1",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nativeSrc": "261:14:1",
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:1",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:1",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:1",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nativeSrc": "349:77:1",
													"nodeType": "YulBlock",
													"src": "349:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:1"
																},
																"nativeSrc": "360:23:1",
																"nodeType": "YulFunctionCall",
																"src": "360:23:1"
															},
															"nativeSrc": "360:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:1"
																		},
																		"nativeSrc": "399:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:1",
																		"nodeType": "YulLiteral",
																		"src": "417:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:1"
																},
																"nativeSrc": "392:27:1",
																"nodeType": "YulFunctionCall",
																"src": "392:27:1"
															},
															"nativeSrc": "392:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:1",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:1",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:1",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:139:1"
											},
											{
												"body": {
													"nativeSrc": "480:54:1",
													"nodeType": "YulBlock",
													"src": "480:54:1",
													"statements": [
														{
															"nativeSrc": "490:38:1",
															"nodeType": "YulAssignment",
															"src": "490:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:1",
																				"nodeType": "YulLiteral",
																				"src": "515:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:1"
																		},
																		"nativeSrc": "504:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:1",
																				"nodeType": "YulLiteral",
																				"src": "524:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:1"
																		},
																		"nativeSrc": "520:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:1"
																},
																"nativeSrc": "500:28:1",
																"nodeType": "YulFunctionCall",
																"src": "500:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:1",
														"nodeType": "YulTypedName",
														"src": "463:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:1",
														"nodeType": "YulTypedName",
														"src": "473:6:1",
														"type": ""
													}
												],
												"src": "432:102:1"
											},
											{
												"body": {
													"nativeSrc": "632:285:1",
													"nodeType": "YulBlock",
													"src": "632:285:1",
													"statements": [
														{
															"nativeSrc": "642:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:1"
																},
																"nativeSrc": "656:39:1",
																"nodeType": "YulFunctionCall",
																"src": "656:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:1",
																	"nodeType": "YulTypedName",
																	"src": "646:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:1",
															"nodeType": "YulAssignment",
															"src": "704:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:1"
																},
																"nativeSrc": "711:71:1",
																"nodeType": "YulFunctionCall",
																"src": "711:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:1",
																				"nodeType": "YulLiteral",
																				"src": "837:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:1"
																		},
																		"nativeSrc": "826:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:1"
																},
																"nativeSrc": "791:65:1",
																"nodeType": "YulFunctionCall",
																"src": "791:65:1"
															},
															"nativeSrc": "791:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:1"
														},
														{
															"nativeSrc": "865:46:1",
															"nodeType": "YulAssignment",
															"src": "865:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:1"
																		},
																		"nativeSrc": "881:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:1"
																},
																"nativeSrc": "872:39:1",
																"nodeType": "YulFunctionCall",
																"src": "872:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:1",
														"nodeType": "YulTypedName",
														"src": "613:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:1",
														"nodeType": "YulTypedName",
														"src": "620:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:1",
														"nodeType": "YulTypedName",
														"src": "628:3:1",
														"type": ""
													}
												],
												"src": "540:377:1"
											},
											{
												"body": {
													"nativeSrc": "1041:195:1",
													"nodeType": "YulBlock",
													"src": "1041:195:1",
													"statements": [
														{
															"nativeSrc": "1051:26:1",
															"nodeType": "YulAssignment",
															"src": "1051:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:1"
																},
																"nativeSrc": "1059:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:1"
																		},
																		"nativeSrc": "1094:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:1"
																		},
																		"nativeSrc": "1113:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:1"
																},
																"nativeSrc": "1087:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:1"
															},
															"nativeSrc": "1087:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:1"
														},
														{
															"nativeSrc": "1143:86:1",
															"nodeType": "YulAssignment",
															"src": "1143:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:1"
																},
																"nativeSrc": "1151:78:1",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:1",
														"nodeType": "YulTypedName",
														"src": "1013:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:1",
														"nodeType": "YulTypedName",
														"src": "1025:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:1",
														"nodeType": "YulTypedName",
														"src": "1036:4:1",
														"type": ""
													}
												],
												"src": "923:313:1"
											},
											{
												"body": {
													"nativeSrc": "1282:35:1",
													"nodeType": "YulBlock",
													"src": "1282:35:1",
													"statements": [
														{
															"nativeSrc": "1292:19:1",
															"nodeType": "YulAssignment",
															"src": "1292:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:1"
																},
																"nativeSrc": "1302:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:1",
														"nodeType": "YulTypedName",
														"src": "1275:6:1",
														"type": ""
													}
												],
												"src": "1242:75:1"
											},
											{
												"body": {
													"nativeSrc": "1412:28:1",
													"nodeType": "YulBlock",
													"src": "1412:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:1"
																},
																"nativeSrc": "1422:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:1"
															},
															"nativeSrc": "1422:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:1"
											},
											{
												"body": {
													"nativeSrc": "1535:28:1",
													"nodeType": "YulBlock",
													"src": "1535:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:1"
																},
																"nativeSrc": "1545:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:1"
															},
															"nativeSrc": "1545:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:1"
											},
											{
												"body": {
													"nativeSrc": "1614:81:1",
													"nodeType": "YulBlock",
													"src": "1614:81:1",
													"statements": [
														{
															"nativeSrc": "1624:65:1",
															"nodeType": "YulAssignment",
															"src": "1624:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:1"
																},
																"nativeSrc": "1635:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:1",
														"nodeType": "YulTypedName",
														"src": "1596:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:1",
														"nodeType": "YulTypedName",
														"src": "1606:7:1",
														"type": ""
													}
												],
												"src": "1569:126:1"
											},
											{
												"body": {
													"nativeSrc": "1746:51:1",
													"nodeType": "YulBlock",
													"src": "1746:51:1",
													"statements": [
														{
															"nativeSrc": "1756:35:1",
															"nodeType": "YulAssignment",
															"src": "1756:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:1"
																},
																"nativeSrc": "1767:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:1",
														"nodeType": "YulTypedName",
														"src": "1728:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:1",
														"nodeType": "YulTypedName",
														"src": "1738:7:1",
														"type": ""
													}
												],
												"src": "1701:96:1"
											},
											{
												"body": {
													"nativeSrc": "1846:79:1",
													"nodeType": "YulBlock",
													"src": "1846:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:1",
																"nodeType": "YulBlock",
																"src": "1903:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:1"
																			},
																			"nativeSrc": "1905:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:1"
																		},
																		"nativeSrc": "1905:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:1"
																				},
																				"nativeSrc": "1876:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:1"
																		},
																		"nativeSrc": "1866:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:1"
																},
																"nativeSrc": "1859:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:1"
															},
															"nativeSrc": "1856:63:1",
															"nodeType": "YulIf",
															"src": "1856:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:1",
														"nodeType": "YulTypedName",
														"src": "1839:5:1",
														"type": ""
													}
												],
												"src": "1803:122:1"
											},
											{
												"body": {
													"nativeSrc": "1983:87:1",
													"nodeType": "YulBlock",
													"src": "1983:87:1",
													"statements": [
														{
															"nativeSrc": "1993:29:1",
															"nodeType": "YulAssignment",
															"src": "1993:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:1"
																},
																"nativeSrc": "2002:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:1"
																},
																"nativeSrc": "2031:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:1"
															},
															"nativeSrc": "2031:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:1",
														"nodeType": "YulTypedName",
														"src": "1961:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:1",
														"nodeType": "YulTypedName",
														"src": "1969:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:1",
														"nodeType": "YulTypedName",
														"src": "1977:5:1",
														"type": ""
													}
												],
												"src": "1931:139:1"
											},
											{
												"body": {
													"nativeSrc": "2121:32:1",
													"nodeType": "YulBlock",
													"src": "2121:32:1",
													"statements": [
														{
															"nativeSrc": "2131:16:1",
															"nodeType": "YulAssignment",
															"src": "2131:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:1",
																"nodeType": "YulIdentifier",
																"src": "2142:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:1",
														"nodeType": "YulTypedName",
														"src": "2103:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:1",
														"nodeType": "YulTypedName",
														"src": "2113:7:1",
														"type": ""
													}
												],
												"src": "2076:77:1"
											},
											{
												"body": {
													"nativeSrc": "2202:79:1",
													"nodeType": "YulBlock",
													"src": "2202:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:1",
																"nodeType": "YulBlock",
																"src": "2259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:1"
																			},
																			"nativeSrc": "2261:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:1"
																		},
																		"nativeSrc": "2261:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:1"
																				},
																				"nativeSrc": "2232:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:1"
																		},
																		"nativeSrc": "2222:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:1"
																},
																"nativeSrc": "2215:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:1"
															},
															"nativeSrc": "2212:63:1",
															"nodeType": "YulIf",
															"src": "2212:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:1",
														"nodeType": "YulTypedName",
														"src": "2195:5:1",
														"type": ""
													}
												],
												"src": "2159:122:1"
											},
											{
												"body": {
													"nativeSrc": "2339:87:1",
													"nodeType": "YulBlock",
													"src": "2339:87:1",
													"statements": [
														{
															"nativeSrc": "2349:29:1",
															"nodeType": "YulAssignment",
															"src": "2349:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:1"
																},
																"nativeSrc": "2358:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:1"
																},
																"nativeSrc": "2387:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:1"
															},
															"nativeSrc": "2387:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:1",
														"nodeType": "YulTypedName",
														"src": "2317:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:1",
														"nodeType": "YulTypedName",
														"src": "2325:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:1",
														"nodeType": "YulTypedName",
														"src": "2333:5:1",
														"type": ""
													}
												],
												"src": "2287:139:1"
											},
											{
												"body": {
													"nativeSrc": "2515:391:1",
													"nodeType": "YulBlock",
													"src": "2515:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:1",
																"nodeType": "YulBlock",
																"src": "2561:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:1"
																			},
																			"nativeSrc": "2563:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:1"
																		},
																		"nativeSrc": "2563:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:1"
																		},
																		"nativeSrc": "2532:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:1"
																},
																"nativeSrc": "2528:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:1"
															},
															"nativeSrc": "2525:119:1",
															"nodeType": "YulIf",
															"src": "2525:119:1"
														},
														{
															"nativeSrc": "2654:117:1",
															"nodeType": "YulBlock",
															"src": "2654:117:1",
															"statements": [
																{
																	"nativeSrc": "2669:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:1"
																				},
																				"nativeSrc": "2729:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:1"
																		},
																		"nativeSrc": "2708:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:1",
															"nodeType": "YulBlock",
															"src": "2781:118:1",
															"statements": [
																{
																	"nativeSrc": "2796:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:1"
																				},
																				"nativeSrc": "2857:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:1"
																		},
																		"nativeSrc": "2836:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:1",
														"nodeType": "YulTypedName",
														"src": "2477:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:1",
														"nodeType": "YulTypedName",
														"src": "2488:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:1",
														"nodeType": "YulTypedName",
														"src": "2500:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:1",
														"nodeType": "YulTypedName",
														"src": "2508:6:1",
														"type": ""
													}
												],
												"src": "2432:474:1"
											},
											{
												"body": {
													"nativeSrc": "2954:48:1",
													"nodeType": "YulBlock",
													"src": "2954:48:1",
													"statements": [
														{
															"nativeSrc": "2964:32:1",
															"nodeType": "YulAssignment",
															"src": "2964:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:1"
																		},
																		"nativeSrc": "2982:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:1"
																},
																"nativeSrc": "2975:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:1",
														"nodeType": "YulTypedName",
														"src": "2936:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:1",
														"nodeType": "YulTypedName",
														"src": "2946:7:1",
														"type": ""
													}
												],
												"src": "2912:90:1"
											},
											{
												"body": {
													"nativeSrc": "3067:50:1",
													"nodeType": "YulBlock",
													"src": "3067:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:1"
																		},
																		"nativeSrc": "3089:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:1"
																},
																"nativeSrc": "3077:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:1"
															},
															"nativeSrc": "3077:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:1",
														"nodeType": "YulTypedName",
														"src": "3055:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:1",
														"nodeType": "YulTypedName",
														"src": "3062:3:1",
														"type": ""
													}
												],
												"src": "3008:109:1"
											},
											{
												"body": {
													"nativeSrc": "3215:118:1",
													"nodeType": "YulBlock",
													"src": "3215:118:1",
													"statements": [
														{
															"nativeSrc": "3225:26:1",
															"nodeType": "YulAssignment",
															"src": "3225:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:1"
																},
																"nativeSrc": "3233:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:1"
																		},
																		"nativeSrc": "3308:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:1"
																},
																"nativeSrc": "3261:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:1"
															},
															"nativeSrc": "3261:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:1",
														"nodeType": "YulTypedName",
														"src": "3187:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:1",
														"nodeType": "YulTypedName",
														"src": "3199:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:1",
														"nodeType": "YulTypedName",
														"src": "3210:4:1",
														"type": ""
													}
												],
												"src": "3123:210:1"
											},
											{
												"body": {
													"nativeSrc": "3404:53:1",
													"nodeType": "YulBlock",
													"src": "3404:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:1"
																		},
																		"nativeSrc": "3426:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:1"
																},
																"nativeSrc": "3414:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:1"
															},
															"nativeSrc": "3414:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:1",
														"nodeType": "YulTypedName",
														"src": "3392:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:1",
														"nodeType": "YulTypedName",
														"src": "3399:3:1",
														"type": ""
													}
												],
												"src": "3339:118:1"
											},
											{
												"body": {
													"nativeSrc": "3561:124:1",
													"nodeType": "YulBlock",
													"src": "3561:124:1",
													"statements": [
														{
															"nativeSrc": "3571:26:1",
															"nodeType": "YulAssignment",
															"src": "3571:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:1"
																},
																"nativeSrc": "3579:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:1"
																		},
																		"nativeSrc": "3660:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:1"
																},
																"nativeSrc": "3607:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:1"
															},
															"nativeSrc": "3607:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:1",
														"nodeType": "YulTypedName",
														"src": "3533:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:1",
														"nodeType": "YulTypedName",
														"src": "3545:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:1",
														"nodeType": "YulTypedName",
														"src": "3556:4:1",
														"type": ""
													}
												],
												"src": "3463:222:1"
											},
											{
												"body": {
													"nativeSrc": "3791:519:1",
													"nodeType": "YulBlock",
													"src": "3791:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:1",
																"nodeType": "YulBlock",
																"src": "3837:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:1"
																			},
																			"nativeSrc": "3839:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:1"
																		},
																		"nativeSrc": "3839:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:1"
																		},
																		"nativeSrc": "3808:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:1"
																},
																"nativeSrc": "3804:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:1"
															},
															"nativeSrc": "3801:119:1",
															"nodeType": "YulIf",
															"src": "3801:119:1"
														},
														{
															"nativeSrc": "3930:117:1",
															"nodeType": "YulBlock",
															"src": "3930:117:1",
															"statements": [
																{
																	"nativeSrc": "3945:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:1"
																				},
																				"nativeSrc": "4005:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:1"
																		},
																		"nativeSrc": "3984:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:1",
															"nodeType": "YulBlock",
															"src": "4057:118:1",
															"statements": [
																{
																	"nativeSrc": "4072:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:1"
																				},
																				"nativeSrc": "4133:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:1"
																		},
																		"nativeSrc": "4112:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:1",
															"nodeType": "YulBlock",
															"src": "4185:118:1",
															"statements": [
																{
																	"nativeSrc": "4200:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:1"
																				},
																				"nativeSrc": "4261:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:1"
																		},
																		"nativeSrc": "4240:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:1",
														"nodeType": "YulTypedName",
														"src": "3745:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:1",
														"nodeType": "YulTypedName",
														"src": "3756:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:1",
														"nodeType": "YulTypedName",
														"src": "3768:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:1",
														"nodeType": "YulTypedName",
														"src": "3776:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:1",
														"nodeType": "YulTypedName",
														"src": "3784:6:1",
														"type": ""
													}
												],
												"src": "3691:619:1"
											},
											{
												"body": {
													"nativeSrc": "4359:43:1",
													"nodeType": "YulBlock",
													"src": "4359:43:1",
													"statements": [
														{
															"nativeSrc": "4369:27:1",
															"nodeType": "YulAssignment",
															"src": "4369:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:1"
																},
																"nativeSrc": "4380:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:1",
														"nodeType": "YulTypedName",
														"src": "4341:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:1",
														"nodeType": "YulTypedName",
														"src": "4351:7:1",
														"type": ""
													}
												],
												"src": "4316:86:1"
											},
											{
												"body": {
													"nativeSrc": "4469:51:1",
													"nodeType": "YulBlock",
													"src": "4469:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:1"
																		},
																		"nativeSrc": "4491:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:1"
																},
																"nativeSrc": "4479:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:1"
															},
															"nativeSrc": "4479:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:1",
														"nodeType": "YulTypedName",
														"src": "4457:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:1",
														"nodeType": "YulTypedName",
														"src": "4464:3:1",
														"type": ""
													}
												],
												"src": "4408:112:1"
											},
											{
												"body": {
													"nativeSrc": "4620:120:1",
													"nodeType": "YulBlock",
													"src": "4620:120:1",
													"statements": [
														{
															"nativeSrc": "4630:26:1",
															"nodeType": "YulAssignment",
															"src": "4630:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:1"
																},
																"nativeSrc": "4638:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:1"
																		},
																		"nativeSrc": "4715:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:1"
																},
																"nativeSrc": "4666:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:1"
															},
															"nativeSrc": "4666:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:1",
														"nodeType": "YulTypedName",
														"src": "4592:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:1",
														"nodeType": "YulTypedName",
														"src": "4604:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:1",
														"nodeType": "YulTypedName",
														"src": "4615:4:1",
														"type": ""
													}
												],
												"src": "4526:214:1"
											},
											{
												"body": {
													"nativeSrc": "4812:263:1",
													"nodeType": "YulBlock",
													"src": "4812:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:1",
																"nodeType": "YulBlock",
																"src": "4858:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:1"
																			},
																			"nativeSrc": "4860:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:1"
																		},
																		"nativeSrc": "4860:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:1"
																		},
																		"nativeSrc": "4829:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:1"
																},
																"nativeSrc": "4825:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:1"
															},
															"nativeSrc": "4822:119:1",
															"nodeType": "YulIf",
															"src": "4822:119:1"
														},
														{
															"nativeSrc": "4951:117:1",
															"nodeType": "YulBlock",
															"src": "4951:117:1",
															"statements": [
																{
																	"nativeSrc": "4966:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:1"
																				},
																				"nativeSrc": "5026:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5005:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:1"
																		},
																		"nativeSrc": "5005:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4746:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:1",
														"nodeType": "YulTypedName",
														"src": "4782:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:1",
														"nodeType": "YulTypedName",
														"src": "4793:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:1",
														"nodeType": "YulTypedName",
														"src": "4805:6:1",
														"type": ""
													}
												],
												"src": "4746:329:1"
											},
											{
												"body": {
													"nativeSrc": "5147:263:1",
													"nodeType": "YulBlock",
													"src": "5147:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:1",
																"nodeType": "YulBlock",
																"src": "5193:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:1"
																			},
																			"nativeSrc": "5195:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:1"
																		},
																		"nativeSrc": "5195:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:1"
																		},
																		"nativeSrc": "5164:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:1"
																},
																"nativeSrc": "5160:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:1"
															},
															"nativeSrc": "5157:119:1",
															"nodeType": "YulIf",
															"src": "5157:119:1"
														},
														{
															"nativeSrc": "5286:117:1",
															"nodeType": "YulBlock",
															"src": "5286:117:1",
															"statements": [
																{
																	"nativeSrc": "5301:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:1"
																				},
																				"nativeSrc": "5361:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:1"
																		},
																		"nativeSrc": "5340:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5081:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:1",
														"nodeType": "YulTypedName",
														"src": "5117:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:1",
														"nodeType": "YulTypedName",
														"src": "5128:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:1",
														"nodeType": "YulTypedName",
														"src": "5140:6:1",
														"type": ""
													}
												],
												"src": "5081:329:1"
											},
											{
												"body": {
													"nativeSrc": "5499:391:1",
													"nodeType": "YulBlock",
													"src": "5499:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5545:83:1",
																"nodeType": "YulBlock",
																"src": "5545:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5547:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5547:77:1"
																			},
																			"nativeSrc": "5547:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5547:79:1"
																		},
																		"nativeSrc": "5547:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5547:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5529:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5516:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:1"
																		},
																		"nativeSrc": "5516:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5512:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:1"
																},
																"nativeSrc": "5512:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5512:32:1"
															},
															"nativeSrc": "5509:119:1",
															"nodeType": "YulIf",
															"src": "5509:119:1"
														},
														{
															"nativeSrc": "5638:117:1",
															"nodeType": "YulBlock",
															"src": "5638:117:1",
															"statements": [
																{
																	"nativeSrc": "5653:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5653:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5667:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5657:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5657:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5682:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5682:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5717:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5717:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5728:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5728:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5713:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5713:3:1"
																				},
																				"nativeSrc": "5713:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5713:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5737:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5737:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5692:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5692:20:1"
																		},
																		"nativeSrc": "5692:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5682:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5682:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5765:118:1",
															"nodeType": "YulBlock",
															"src": "5765:118:1",
															"statements": [
																{
																	"nativeSrc": "5780:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5780:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5794:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5794:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5784:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5784:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5810:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5810:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5845:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5845:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5856:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5856:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5841:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5841:3:1"
																				},
																				"nativeSrc": "5841:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5841:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5865:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5865:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5820:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5820:20:1"
																		},
																		"nativeSrc": "5820:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5820:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5810:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5810:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5416:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5461:9:1",
														"nodeType": "YulTypedName",
														"src": "5461:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5472:7:1",
														"nodeType": "YulTypedName",
														"src": "5472:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5484:6:1",
														"nodeType": "YulTypedName",
														"src": "5484:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5492:6:1",
														"nodeType": "YulTypedName",
														"src": "5492:6:1",
														"type": ""
													}
												],
												"src": "5416:474:1"
											},
											{
												"body": {
													"nativeSrc": "5924:152:1",
													"nodeType": "YulBlock",
													"src": "5924:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5941:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5941:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5944:77:1",
																		"nodeType": "YulLiteral",
																		"src": "5944:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5934:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5934:6:1"
																},
																"nativeSrc": "5934:88:1",
																"nodeType": "YulFunctionCall",
																"src": "5934:88:1"
															},
															"nativeSrc": "5934:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "5934:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6038:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6038:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6041:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6041:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6031:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6031:6:1"
																},
																"nativeSrc": "6031:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6031:15:1"
															},
															"nativeSrc": "6031:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6031:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6062:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6062:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6065:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6065:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6055:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6055:6:1"
																},
																"nativeSrc": "6055:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6055:15:1"
															},
															"nativeSrc": "6055:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6055:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5896:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "5896:180:1"
											},
											{
												"body": {
													"nativeSrc": "6133:269:1",
													"nodeType": "YulBlock",
													"src": "6133:269:1",
													"statements": [
														{
															"nativeSrc": "6143:22:1",
															"nodeType": "YulAssignment",
															"src": "6143:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6157:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6157:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6163:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6163:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6153:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6153:3:1"
																},
																"nativeSrc": "6153:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6153:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6143:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6143:6:1"
																}
															]
														},
														{
															"nativeSrc": "6174:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6174:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6204:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6204:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6210:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6210:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6200:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6200:3:1"
																},
																"nativeSrc": "6200:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6200:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6178:18:1",
																	"nodeType": "YulTypedName",
																	"src": "6178:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6251:51:1",
																"nodeType": "YulBlock",
																"src": "6251:51:1",
																"statements": [
																	{
																		"nativeSrc": "6265:27:1",
																		"nodeType": "YulAssignment",
																		"src": "6265:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6279:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6279:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6287:4:1",
																					"nodeType": "YulLiteral",
																					"src": "6287:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6275:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6275:3:1"
																			},
																			"nativeSrc": "6275:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6275:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6265:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6265:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6231:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "6231:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6224:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6224:6:1"
																},
																"nativeSrc": "6224:26:1",
																"nodeType": "YulFunctionCall",
																"src": "6224:26:1"
															},
															"nativeSrc": "6221:81:1",
															"nodeType": "YulIf",
															"src": "6221:81:1"
														},
														{
															"body": {
																"nativeSrc": "6354:42:1",
																"nodeType": "YulBlock",
																"src": "6354:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6368:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "6368:16:1"
																			},
																			"nativeSrc": "6368:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6368:18:1"
																		},
																		"nativeSrc": "6368:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6368:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6318:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "6318:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6341:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6341:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6349:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6349:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6338:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "6338:2:1"
																		},
																		"nativeSrc": "6338:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6338:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6315:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6315:2:1"
																},
																"nativeSrc": "6315:38:1",
																"nodeType": "YulFunctionCall",
																"src": "6315:38:1"
															},
															"nativeSrc": "6312:84:1",
															"nodeType": "YulIf",
															"src": "6312:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6082:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6117:4:1",
														"nodeType": "YulTypedName",
														"src": "6117:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6126:6:1",
														"nodeType": "YulTypedName",
														"src": "6126:6:1",
														"type": ""
													}
												],
												"src": "6082:320:1"
											},
											{
												"body": {
													"nativeSrc": "6514:56:1",
													"nodeType": "YulBlock",
													"src": "6514:56:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6536:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6536:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6544:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6544:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6532:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6532:3:1"
																		},
																		"nativeSrc": "6532:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6532:14:1"
																	},
																	{
																		"hexValue": "4e6f7420616e206f776e6572",
																		"kind": "string",
																		"nativeSrc": "6548:14:1",
																		"nodeType": "YulLiteral",
																		"src": "6548:14:1",
																		"type": "",
																		"value": "Not an owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6525:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6525:6:1"
																},
																"nativeSrc": "6525:38:1",
																"nodeType": "YulFunctionCall",
																"src": "6525:38:1"
															},
															"nativeSrc": "6525:38:1",
															"nodeType": "YulExpressionStatement",
															"src": "6525:38:1"
														}
													]
												},
												"name": "store_literal_in_memory_38f1e8dc38fecfe471d0b117a6310f3d806a6db8c5b6d4cb844edcf1633e5233",
												"nativeSrc": "6408:162:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6506:6:1",
														"nodeType": "YulTypedName",
														"src": "6506:6:1",
														"type": ""
													}
												],
												"src": "6408:162:1"
											},
											{
												"body": {
													"nativeSrc": "6722:220:1",
													"nodeType": "YulBlock",
													"src": "6722:220:1",
													"statements": [
														{
															"nativeSrc": "6732:74:1",
															"nodeType": "YulAssignment",
															"src": "6732:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6798:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6798:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6803:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6803:2:1",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6739:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "6739:58:1"
																},
																"nativeSrc": "6739:67:1",
																"nodeType": "YulFunctionCall",
																"src": "6739:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6732:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6732:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6904:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6904:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_38f1e8dc38fecfe471d0b117a6310f3d806a6db8c5b6d4cb844edcf1633e5233",
																	"nativeSrc": "6815:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "6815:88:1"
																},
																"nativeSrc": "6815:93:1",
																"nodeType": "YulFunctionCall",
																"src": "6815:93:1"
															},
															"nativeSrc": "6815:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "6815:93:1"
														},
														{
															"nativeSrc": "6917:19:1",
															"nodeType": "YulAssignment",
															"src": "6917:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6928:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6928:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6933:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6933:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6924:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6924:3:1"
																},
																"nativeSrc": "6924:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6924:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6917:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6917:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_38f1e8dc38fecfe471d0b117a6310f3d806a6db8c5b6d4cb844edcf1633e5233_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6576:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6710:3:1",
														"nodeType": "YulTypedName",
														"src": "6710:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6718:3:1",
														"nodeType": "YulTypedName",
														"src": "6718:3:1",
														"type": ""
													}
												],
												"src": "6576:366:1"
											},
											{
												"body": {
													"nativeSrc": "7119:248:1",
													"nodeType": "YulBlock",
													"src": "7119:248:1",
													"statements": [
														{
															"nativeSrc": "7129:26:1",
															"nodeType": "YulAssignment",
															"src": "7129:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7141:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7141:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7152:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7152:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7137:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7137:3:1"
																},
																"nativeSrc": "7137:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7137:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7129:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7129:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7176:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7176:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7187:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7187:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7172:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7172:3:1"
																		},
																		"nativeSrc": "7172:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7172:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7195:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7195:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7201:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7201:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7191:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7191:3:1"
																		},
																		"nativeSrc": "7191:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7191:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7165:6:1"
																},
																"nativeSrc": "7165:47:1",
																"nodeType": "YulFunctionCall",
																"src": "7165:47:1"
															},
															"nativeSrc": "7165:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "7165:47:1"
														},
														{
															"nativeSrc": "7221:139:1",
															"nodeType": "YulAssignment",
															"src": "7221:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7355:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7355:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_38f1e8dc38fecfe471d0b117a6310f3d806a6db8c5b6d4cb844edcf1633e5233_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7229:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "7229:124:1"
																},
																"nativeSrc": "7229:131:1",
																"nodeType": "YulFunctionCall",
																"src": "7229:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7221:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7221:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_38f1e8dc38fecfe471d0b117a6310f3d806a6db8c5b6d4cb844edcf1633e5233__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6948:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7099:9:1",
														"nodeType": "YulTypedName",
														"src": "7099:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7114:4:1",
														"nodeType": "YulTypedName",
														"src": "7114:4:1",
														"type": ""
													}
												],
												"src": "6948:419:1"
											},
											{
												"body": {
													"nativeSrc": "7401:152:1",
													"nodeType": "YulBlock",
													"src": "7401:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7418:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7418:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7421:77:1",
																		"nodeType": "YulLiteral",
																		"src": "7421:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7411:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7411:6:1"
																},
																"nativeSrc": "7411:88:1",
																"nodeType": "YulFunctionCall",
																"src": "7411:88:1"
															},
															"nativeSrc": "7411:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "7411:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7515:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7515:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7518:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7518:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7508:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7508:6:1"
																},
																"nativeSrc": "7508:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7508:15:1"
															},
															"nativeSrc": "7508:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7508:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7539:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7539:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7542:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7542:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7532:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7532:6:1"
																},
																"nativeSrc": "7532:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7532:15:1"
															},
															"nativeSrc": "7532:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7532:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7373:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7373:180:1"
											},
											{
												"body": {
													"nativeSrc": "7607:362:1",
													"nodeType": "YulBlock",
													"src": "7607:362:1",
													"statements": [
														{
															"nativeSrc": "7617:25:1",
															"nodeType": "YulAssignment",
															"src": "7617:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7640:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7640:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7622:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7622:17:1"
																},
																"nativeSrc": "7622:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7622:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7617:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7617:1:1"
																}
															]
														},
														{
															"nativeSrc": "7651:25:1",
															"nodeType": "YulAssignment",
															"src": "7651:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7674:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7674:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7656:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7656:17:1"
																},
																"nativeSrc": "7656:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7656:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7651:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7651:1:1"
																}
															]
														},
														{
															"nativeSrc": "7685:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7685:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7708:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7708:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7711:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7711:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7704:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7704:3:1"
																},
																"nativeSrc": "7704:9:1",
																"nodeType": "YulFunctionCall",
																"src": "7704:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7689:11:1",
																	"nodeType": "YulTypedName",
																	"src": "7689:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7722:41:1",
															"nodeType": "YulAssignment",
															"src": "7722:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7751:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "7751:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7733:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7733:17:1"
																},
																"nativeSrc": "7733:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7733:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7722:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "7722:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7940:22:1",
																"nodeType": "YulBlock",
																"src": "7940:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7942:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7942:16:1"
																			},
																			"nativeSrc": "7942:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7942:18:1"
																		},
																		"nativeSrc": "7942:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7942:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7873:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "7873:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7866:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "7866:6:1"
																				},
																				"nativeSrc": "7866:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7866:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7896:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "7896:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7903:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "7903:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7912:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "7912:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7899:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "7899:3:1"
																						},
																						"nativeSrc": "7899:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7899:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7893:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "7893:2:1"
																				},
																				"nativeSrc": "7893:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7893:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7846:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "7846:2:1"
																		},
																		"nativeSrc": "7846:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7846:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7826:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7826:6:1"
																},
																"nativeSrc": "7826:113:1",
																"nodeType": "YulFunctionCall",
																"src": "7826:113:1"
															},
															"nativeSrc": "7823:139:1",
															"nodeType": "YulIf",
															"src": "7823:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7559:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7590:1:1",
														"nodeType": "YulTypedName",
														"src": "7590:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7593:1:1",
														"nodeType": "YulTypedName",
														"src": "7593:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7599:7:1",
														"nodeType": "YulTypedName",
														"src": "7599:7:1",
														"type": ""
													}
												],
												"src": "7559:410:1"
											},
											{
												"body": {
													"nativeSrc": "8003:152:1",
													"nodeType": "YulBlock",
													"src": "8003:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8020:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8020:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8023:77:1",
																		"nodeType": "YulLiteral",
																		"src": "8023:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8013:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8013:6:1"
																},
																"nativeSrc": "8013:88:1",
																"nodeType": "YulFunctionCall",
																"src": "8013:88:1"
															},
															"nativeSrc": "8013:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "8013:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8117:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8117:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8120:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8120:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8110:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8110:6:1"
																},
																"nativeSrc": "8110:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8110:15:1"
															},
															"nativeSrc": "8110:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8110:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8141:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8141:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8144:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8144:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8134:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8134:6:1"
																},
																"nativeSrc": "8134:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8134:15:1"
															},
															"nativeSrc": "8134:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8134:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7975:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7975:180:1"
											},
											{
												"body": {
													"nativeSrc": "8203:143:1",
													"nodeType": "YulBlock",
													"src": "8203:143:1",
													"statements": [
														{
															"nativeSrc": "8213:25:1",
															"nodeType": "YulAssignment",
															"src": "8213:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8236:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8236:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8218:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8218:17:1"
																},
																"nativeSrc": "8218:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8218:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8213:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8213:1:1"
																}
															]
														},
														{
															"nativeSrc": "8247:25:1",
															"nodeType": "YulAssignment",
															"src": "8247:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8270:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8270:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8252:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8252:17:1"
																},
																"nativeSrc": "8252:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8252:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8247:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8247:1:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8294:22:1",
																"nodeType": "YulBlock",
																"src": "8294:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8296:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8296:16:1"
																			},
																			"nativeSrc": "8296:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8296:18:1"
																		},
																		"nativeSrc": "8296:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8296:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8291:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8291:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8284:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8284:6:1"
																},
																"nativeSrc": "8284:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8284:9:1"
															},
															"nativeSrc": "8281:35:1",
															"nodeType": "YulIf",
															"src": "8281:35:1"
														},
														{
															"nativeSrc": "8326:14:1",
															"nodeType": "YulAssignment",
															"src": "8326:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8335:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8335:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8338:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8338:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8331:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8331:3:1"
																},
																"nativeSrc": "8331:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8331:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8326:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8326:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8161:185:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8192:1:1",
														"nodeType": "YulTypedName",
														"src": "8192:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8195:1:1",
														"nodeType": "YulTypedName",
														"src": "8195:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8201:1:1",
														"nodeType": "YulTypedName",
														"src": "8201:1:1",
														"type": ""
													}
												],
												"src": "8161:185:1"
											},
											{
												"body": {
													"nativeSrc": "8397:149:1",
													"nodeType": "YulBlock",
													"src": "8397:149:1",
													"statements": [
														{
															"nativeSrc": "8407:25:1",
															"nodeType": "YulAssignment",
															"src": "8407:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8430:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8430:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8412:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8412:17:1"
																},
																"nativeSrc": "8412:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8412:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8407:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8407:1:1"
																}
															]
														},
														{
															"nativeSrc": "8441:25:1",
															"nodeType": "YulAssignment",
															"src": "8441:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8464:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8464:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8446:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8446:17:1"
																},
																"nativeSrc": "8446:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8446:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8441:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8441:1:1"
																}
															]
														},
														{
															"nativeSrc": "8475:17:1",
															"nodeType": "YulAssignment",
															"src": "8475:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8487:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8487:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8490:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8490:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8483:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8483:3:1"
																},
																"nativeSrc": "8483:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8483:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8475:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8475:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8517:22:1",
																"nodeType": "YulBlock",
																"src": "8517:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8519:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8519:16:1"
																			},
																			"nativeSrc": "8519:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8519:18:1"
																		},
																		"nativeSrc": "8519:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8519:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8508:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8508:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8514:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8514:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8505:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8505:2:1"
																},
																"nativeSrc": "8505:11:1",
																"nodeType": "YulFunctionCall",
																"src": "8505:11:1"
															},
															"nativeSrc": "8502:37:1",
															"nodeType": "YulIf",
															"src": "8502:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8352:194:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8383:1:1",
														"nodeType": "YulTypedName",
														"src": "8383:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8386:1:1",
														"nodeType": "YulTypedName",
														"src": "8386:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8392:4:1",
														"nodeType": "YulTypedName",
														"src": "8392:4:1",
														"type": ""
													}
												],
												"src": "8352:194:1"
											},
											{
												"body": {
													"nativeSrc": "8617:53:1",
													"nodeType": "YulBlock",
													"src": "8617:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8634:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8634:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8657:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8657:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8639:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "8639:17:1"
																		},
																		"nativeSrc": "8639:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8639:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8627:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8627:6:1"
																},
																"nativeSrc": "8627:37:1",
																"nodeType": "YulFunctionCall",
																"src": "8627:37:1"
															},
															"nativeSrc": "8627:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "8627:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8552:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8605:5:1",
														"nodeType": "YulTypedName",
														"src": "8605:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8612:3:1",
														"nodeType": "YulTypedName",
														"src": "8612:3:1",
														"type": ""
													}
												],
												"src": "8552:118:1"
											},
											{
												"body": {
													"nativeSrc": "8830:288:1",
													"nodeType": "YulBlock",
													"src": "8830:288:1",
													"statements": [
														{
															"nativeSrc": "8840:26:1",
															"nodeType": "YulAssignment",
															"src": "8840:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8852:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8852:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8863:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8863:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8848:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8848:3:1"
																},
																"nativeSrc": "8848:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8848:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8840:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8840:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8920:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8920:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8933:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8933:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8944:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8944:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8929:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8929:3:1"
																		},
																		"nativeSrc": "8929:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8929:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8876:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8876:43:1"
																},
																"nativeSrc": "8876:71:1",
																"nodeType": "YulFunctionCall",
																"src": "8876:71:1"
															},
															"nativeSrc": "8876:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "8876:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9001:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9001:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9014:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9014:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9025:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9025:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9010:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9010:3:1"
																		},
																		"nativeSrc": "9010:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9010:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8957:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8957:43:1"
																},
																"nativeSrc": "8957:72:1",
																"nodeType": "YulFunctionCall",
																"src": "8957:72:1"
															},
															"nativeSrc": "8957:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "8957:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9083:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9083:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9096:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9096:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9107:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9107:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9092:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9092:3:1"
																		},
																		"nativeSrc": "9092:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9092:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9039:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9039:43:1"
																},
																"nativeSrc": "9039:72:1",
																"nodeType": "YulFunctionCall",
																"src": "9039:72:1"
															},
															"nativeSrc": "9039:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "9039:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8676:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8786:9:1",
														"nodeType": "YulTypedName",
														"src": "8786:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8798:6:1",
														"nodeType": "YulTypedName",
														"src": "8798:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8806:6:1",
														"nodeType": "YulTypedName",
														"src": "8806:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8814:6:1",
														"nodeType": "YulTypedName",
														"src": "8814:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8825:4:1",
														"nodeType": "YulTypedName",
														"src": "8825:4:1",
														"type": ""
													}
												],
												"src": "8676:442:1"
											},
											{
												"body": {
													"nativeSrc": "9222:124:1",
													"nodeType": "YulBlock",
													"src": "9222:124:1",
													"statements": [
														{
															"nativeSrc": "9232:26:1",
															"nodeType": "YulAssignment",
															"src": "9232:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9244:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9244:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9255:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9255:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9240:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9240:3:1"
																},
																"nativeSrc": "9240:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9240:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9232:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9232:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9312:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9312:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9325:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9325:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9336:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9336:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9321:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9321:3:1"
																		},
																		"nativeSrc": "9321:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9321:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9268:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9268:43:1"
																},
																"nativeSrc": "9268:71:1",
																"nodeType": "YulFunctionCall",
																"src": "9268:71:1"
															},
															"nativeSrc": "9268:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "9268:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9124:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9194:9:1",
														"nodeType": "YulTypedName",
														"src": "9194:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9206:6:1",
														"nodeType": "YulTypedName",
														"src": "9206:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9217:4:1",
														"nodeType": "YulTypedName",
														"src": "9217:4:1",
														"type": ""
													}
												],
												"src": "9124:222:1"
											},
											{
												"body": {
													"nativeSrc": "9396:147:1",
													"nodeType": "YulBlock",
													"src": "9396:147:1",
													"statements": [
														{
															"nativeSrc": "9406:25:1",
															"nodeType": "YulAssignment",
															"src": "9406:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9429:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9429:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9411:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9411:17:1"
																},
																"nativeSrc": "9411:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9411:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9406:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9406:1:1"
																}
															]
														},
														{
															"nativeSrc": "9440:25:1",
															"nodeType": "YulAssignment",
															"src": "9440:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9463:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9463:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9445:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9445:17:1"
																},
																"nativeSrc": "9445:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9445:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9440:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9440:1:1"
																}
															]
														},
														{
															"nativeSrc": "9474:16:1",
															"nodeType": "YulAssignment",
															"src": "9474:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9485:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9485:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9488:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9488:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9481:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9481:3:1"
																},
																"nativeSrc": "9481:9:1",
																"nodeType": "YulFunctionCall",
																"src": "9481:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9474:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9474:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9514:22:1",
																"nodeType": "YulBlock",
																"src": "9514:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9516:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9516:16:1"
																			},
																			"nativeSrc": "9516:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9516:18:1"
																		},
																		"nativeSrc": "9516:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9516:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9506:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9506:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9509:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9509:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9503:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9503:2:1"
																},
																"nativeSrc": "9503:10:1",
																"nodeType": "YulFunctionCall",
																"src": "9503:10:1"
															},
															"nativeSrc": "9500:36:1",
															"nodeType": "YulIf",
															"src": "9500:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9352:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9383:1:1",
														"nodeType": "YulTypedName",
														"src": "9383:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9386:1:1",
														"nodeType": "YulTypedName",
														"src": "9386:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9392:3:1",
														"nodeType": "YulTypedName",
														"src": "9392:3:1",
														"type": ""
													}
												],
												"src": "9352:191:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_38f1e8dc38fecfe471d0b117a6310f3d806a6db8c5b6d4cb844edcf1633e5233(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not an owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_38f1e8dc38fecfe471d0b117a6310f3d806a6db8c5b6d4cb844edcf1633e5233_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_38f1e8dc38fecfe471d0b117a6310f3d806a6db8c5b6d4cb844edcf1633e5233(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_38f1e8dc38fecfe471d0b117a6310f3d806a6db8c5b6d4cb844edcf1633e5233__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_38f1e8dc38fecfe471d0b117a6310f3d806a6db8c5b6d4cb844edcf1633e5233_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A1DB1BF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x6A1DB1BF EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x243 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xC6F JUMP JUMPDEST PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x34A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xD8C JUMP JUMPDEST PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xC6F JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x542 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x270 SWAP1 PUSH2 0xE4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29C SWAP1 PUSH2 0xE4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2FB PUSH2 0x5CA JUMP JUMPDEST SWAP1 POP PUSH2 0x308 DUP2 DUP6 DUP6 PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x326 PUSH2 0x5CA JUMP JUMPDEST SWAP1 POP PUSH2 0x333 DUP6 DUP3 DUP6 PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x33E DUP6 DUP6 DUP6 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x393 PUSH2 0x5CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E0 SWAP1 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x44D SWAP1 PUSH2 0xE4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x479 SWAP1 PUSH2 0xE4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4D8 PUSH2 0x5CA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0x5B38DA6A701C568545DCFCB03FCB875F56BEDDC4 SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x5 SLOAD DUP7 PUSH2 0x503 SWAP2 SWAP1 PUSH2 0xF12 JUMP JUMPDEST PUSH2 0x50D SWAP2 SWAP1 PUSH2 0xF80 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD DUP6 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0xFB0 JUMP JUMPDEST SWAP5 POP PUSH2 0x52A DUP4 DUP4 DUP4 PUSH2 0x676 JUMP JUMPDEST PUSH2 0x535 DUP4 DUP8 DUP8 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5DE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x766 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5EE DUP5 DUP5 PUSH2 0x542 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x670 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x661 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x658 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x766 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DD SWAP2 SWAP1 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x756 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x761 DUP4 DUP4 DUP4 PUSH2 0x935 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7D6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CD SWAP2 SWAP1 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x846 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83D SWAP2 SWAP1 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x92F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x926 SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x985 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x979 SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA53 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA0E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA05 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAE4 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB41 SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB90 DUP3 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0xB9A DUP2 DUP6 PUSH2 0xB58 JUMP JUMPDEST SWAP4 POP PUSH2 0xBAA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB68 JUMP JUMPDEST PUSH2 0xBB3 DUP2 PUSH2 0xB76 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBD6 DUP2 DUP5 PUSH2 0xB86 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC0B DUP3 PUSH2 0xBE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1B DUP2 PUSH2 0xC01 JUMP JUMPDEST DUP2 EQ PUSH2 0xC25 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC36 DUP2 PUSH2 0xC12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC4E DUP2 PUSH2 0xC3C JUMP JUMPDEST DUP2 EQ PUSH2 0xC58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC69 DUP2 PUSH2 0xC45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC85 JUMPI PUSH2 0xC84 PUSH2 0xBDE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC92 DUP6 DUP3 DUP7 ADD PUSH2 0xC28 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCA3 DUP6 DUP3 DUP7 ADD PUSH2 0xC5B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC1 DUP2 PUSH2 0xCAD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCDA PUSH0 DUP4 ADD DUP5 PUSH2 0xCB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCE9 DUP2 PUSH2 0xC3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD02 PUSH0 DUP4 ADD DUP5 PUSH2 0xCE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD1F JUMPI PUSH2 0xD1E PUSH2 0xBDE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD2C DUP7 DUP3 DUP8 ADD PUSH2 0xC28 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD3D DUP7 DUP3 DUP8 ADD PUSH2 0xC28 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD4E DUP7 DUP3 DUP8 ADD PUSH2 0xC5B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6D DUP2 PUSH2 0xD58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD86 PUSH0 DUP4 ADD DUP5 PUSH2 0xD64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDA1 JUMPI PUSH2 0xDA0 PUSH2 0xBDE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDAE DUP5 DUP3 DUP6 ADD PUSH2 0xC5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCC JUMPI PUSH2 0xDCB PUSH2 0xBDE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDD9 DUP5 DUP3 DUP6 ADD PUSH2 0xC28 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF8 JUMPI PUSH2 0xDF7 PUSH2 0xBDE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE05 DUP6 DUP3 DUP7 ADD PUSH2 0xC28 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE16 DUP6 DUP3 DUP7 ADD PUSH2 0xC28 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE64 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE77 JUMPI PUSH2 0xE76 PUSH2 0xE20 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616E206F776E65720000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEB1 PUSH1 0xC DUP4 PUSH2 0xB58 JUMP JUMPDEST SWAP2 POP PUSH2 0xEBC DUP3 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEDE DUP2 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF1C DUP3 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0xF27 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF35 DUP2 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF4C JUMPI PUSH2 0xF4B PUSH2 0xEE5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF8A DUP3 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0xF95 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFA5 JUMPI PUSH2 0xFA4 PUSH2 0xF53 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFBA DUP3 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0xFC5 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFDD JUMPI PUSH2 0xFDC PUSH2 0xEE5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFEC DUP2 PUSH2 0xC01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1005 PUSH0 DUP4 ADD DUP7 PUSH2 0xFE3 JUMP JUMPDEST PUSH2 0x1012 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCE0 JUMP JUMPDEST PUSH2 0x101F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCE0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x103A PUSH0 DUP4 ADD DUP5 PUSH2 0xFE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x104A DUP3 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1055 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x106D JUMPI PUSH2 0x106C PUSH2 0xEE5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xDF SWAP3 SSTORE 0xC5 PUSH6 0xCB9400E0B1D7 BASEFEE DIV PUSH6 0x8D476F636DDA SWAP12 PUSH24 0xC3A7340335483335FD64736F6C634300081A003300000000 ",
							"sourceMap": "22388:152:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12680:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15380:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13750:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16158:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13608:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14753:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13905:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12882:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14276:369;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14933:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14216:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12680:89;12725:13;12757:5;12750:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12680:89;:::o;15380:186::-;15453:4;15469:13;15485:12;:10;:12::i;:::-;15469:28;;15507:31;15516:5;15523:7;15532:5;15507:8;:31::i;:::-;15555:4;15548:11;;;15380:186;;;;:::o;13750:97::-;13802:7;13828:12;;13821:19;;13750:97;:::o;16158:244::-;16245:4;16261:15;16279:12;:10;:12::i;:::-;16261:30;;16301:37;16317:4;16323:7;16332:5;16301:15;:37::i;:::-;16348:26;16358:4;16364:2;16368:5;16348:9;:26::i;:::-;16391:4;16384:11;;;16158:244;;;;;:::o;13608:82::-;13657:5;13681:2;13674:9;;13608:82;:::o;14753:122::-;14819:4;14706:6;;;;;;;;;;;14690:22;;:12;:10;:12::i;:::-;:22;;;14682:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;14841:6:::1;14835:3;:12;;;;14864:4;14857:11;;14753:122:::0;;;:::o;13905:116::-;13970:7;13996:9;:18;14006:7;13996:18;;;;;;;;;;;;;;;;13989:25;;13905:116;;;:::o;12882:93::-;12929:13;12961:7;12954:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12882:93;:::o;14276:369::-;14346:4;14362:13;14378:12;:10;:12::i;:::-;14362:28;;14400:18;14421:42;14400:63;;14474:17;14506:3;14501;;14495:5;:9;;;;:::i;:::-;14494:15;;;;:::i;:::-;14474:35;;14528:3;;14519:12;;;;;:::i;:::-;;;14542:39;14552:5;14559:10;14571:9;14542;:39::i;:::-;14591:26;14601:5;14607:2;14611:5;14591:9;:26::i;:::-;14634:4;14627:11;;;;;14276:369;;;;:::o;14933:140::-;15013:7;15039:11;:18;15051:5;15039:18;;;;;;;;;;;;;;;:27;15058:7;15039:27;;;;;;;;;;;;;;;;15032:34;;14933:140;;;;:::o;14216:20::-;;;;:::o;4209:96::-;4262:7;4288:10;4281:17;;4209:96;:::o;20108:128::-;20192:37;20201:5;20208:7;20217:5;20224:4;20192:8;:37::i;:::-;20108:128;;;:::o;21797:476::-;21896:24;21923:25;21933:5;21940:7;21923:9;:25::i;:::-;21896:52;;21981:17;21962:16;:36;21958:309;;;22037:5;22018:16;:24;22014:130;;;22096:7;22105:16;22123:5;22069:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;22014:130;22185:57;22194:5;22201:7;22229:5;22210:16;:24;22236:5;22185:8;:57::i;:::-;21958:309;21886:387;21797:476;;;:::o;16775:300::-;16874:1;16858:18;;:4;:18;;;16854:86;;16926:1;16899:30;;;;;;;;;;;:::i;:::-;;;;;;;;16854:86;16967:1;16953:16;;:2;:16;;;16949:86;;17021:1;16992:32;;;;;;;;;;;:::i;:::-;;;;;;;;16949:86;17044:24;17052:4;17058:2;17062:5;17044:7;:24::i;:::-;16775:300;;;:::o;21083:432::-;21212:1;21195:19;;:5;:19;;;21191:89;;21266:1;21237:32;;;;;;;;;;;:::i;:::-;;;;;;;;21191:89;21312:1;21293:21;;:7;:21;;;21289:90;;21365:1;21337:31;;;;;;;;;;;:::i;:::-;;;;;;;;21289:90;21418:5;21388:11;:18;21400:5;21388:18;;;;;;;;;;;;;;;:27;21407:7;21388:27;;;;;;;;;;;;;;;:35;;;;21437:9;21433:76;;;21483:7;21467:31;;21476:5;21467:31;;;21492:5;21467:31;;;;;;:::i;:::-;;;;;;;;21433:76;21083:432;;;;:::o;17390:1107::-;17495:1;17479:18;;:4;:18;;;17475:540;;17631:5;17615:12;;:21;;;;;;;:::i;:::-;;;;;;;;17475:540;;;17667:19;17689:9;:15;17699:4;17689:15;;;;;;;;;;;;;;;;17667:37;;17736:5;17722:11;:19;17718:115;;;17793:4;17799:11;17812:5;17768:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17718:115;17985:5;17971:11;:19;17953:9;:15;17963:4;17953:15;;;;;;;;;;;;;;;:37;;;;17653:362;17475:540;18043:1;18029:16;;:2;:16;;;18025:425;;18208:5;18192:12;;:21;;;;;;;;;;;18025:425;;;18420:5;18403:9;:13;18413:2;18403:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;18025:425;18480:2;18465:25;;18474:4;18465:25;;;18484:5;18465:25;;;;;;:::i;:::-;;;;;;;;17390:1107;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:474::-;5484:6;5492;5541:2;5529:9;5520:7;5516:23;5512:32;5509:119;;;5547:79;;:::i;:::-;5509:119;5667:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;:::i;:::-;5682:63;;5638:117;5794:2;5820:53;5865:7;5856:6;5845:9;5841:22;5820:53;:::i;:::-;5810:63;;5765:118;5416:474;;;;;:::o;5896:180::-;5944:77;5941:1;5934:88;6041:4;6038:1;6031:15;6065:4;6062:1;6055:15;6082:320;6126:6;6163:1;6157:4;6153:12;6143:22;;6210:1;6204:4;6200:12;6231:18;6221:81;;6287:4;6279:6;6275:17;6265:27;;6221:81;6349:2;6341:6;6338:14;6318:18;6315:38;6312:84;;6368:18;;:::i;:::-;6312:84;6133:269;6082:320;;;:::o;6408:162::-;6548:14;6544:1;6536:6;6532:14;6525:38;6408:162;:::o;6576:366::-;6718:3;6739:67;6803:2;6798:3;6739:67;:::i;:::-;6732:74;;6815:93;6904:3;6815:93;:::i;:::-;6933:2;6928:3;6924:12;6917:19;;6576:366;;;:::o;6948:419::-;7114:4;7152:2;7141:9;7137:18;7129:26;;7201:9;7195:4;7191:20;7187:1;7176:9;7172:17;7165:47;7229:131;7355:4;7229:131;:::i;:::-;7221:139;;6948:419;;;:::o;7373:180::-;7421:77;7418:1;7411:88;7518:4;7515:1;7508:15;7542:4;7539:1;7532:15;7559:410;7599:7;7622:20;7640:1;7622:20;:::i;:::-;7617:25;;7656:20;7674:1;7656:20;:::i;:::-;7651:25;;7711:1;7708;7704:9;7733:30;7751:11;7733:30;:::i;:::-;7722:41;;7912:1;7903:7;7899:15;7896:1;7893:22;7873:1;7866:9;7846:83;7823:139;;7942:18;;:::i;:::-;7823:139;7607:362;7559:410;;;;:::o;7975:180::-;8023:77;8020:1;8013:88;8120:4;8117:1;8110:15;8144:4;8141:1;8134:15;8161:185;8201:1;8218:20;8236:1;8218:20;:::i;:::-;8213:25;;8252:20;8270:1;8252:20;:::i;:::-;8247:25;;8291:1;8281:35;;8296:18;;:::i;:::-;8281:35;8338:1;8335;8331:9;8326:14;;8161:185;;;;:::o;8352:194::-;8392:4;8412:20;8430:1;8412:20;:::i;:::-;8407:25;;8446:20;8464:1;8446:20;:::i;:::-;8441:25;;8490:1;8487;8483:9;8475:17;;8514:1;8508:4;8505:11;8502:37;;;8519:18;;:::i;:::-;8502:37;8352:194;;;;:::o;8552:118::-;8639:24;8657:5;8639:24;:::i;:::-;8634:3;8627:37;8552:118;;:::o;8676:442::-;8825:4;8863:2;8852:9;8848:18;8840:26;;8876:71;8944:1;8933:9;8929:17;8920:6;8876:71;:::i;:::-;8957:72;9025:2;9014:9;9010:18;9001:6;8957:72;:::i;:::-;9039;9107:2;9096:9;9092:18;9083:6;9039:72;:::i;:::-;8676:442;;;;;;:::o;9124:222::-;9217:4;9255:2;9244:9;9240:18;9232:26;;9268:71;9336:1;9325:9;9321:17;9312:6;9268:71;:::i;:::-;9124:222;;;;:::o;9352:191::-;9392:3;9411:20;9429:1;9411:20;:::i;:::-;9406:25;;9445:20;9463:1;9445:20;:::i;:::-;9440:25;;9488:1;9485;9481:9;9474:16;;9509:3;9506:1;9503:10;9500:36;;;9516:18;;:::i;:::-;9500:36;9352:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "853000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"changeFee(uint256)": "24916",
								"decimals()": "427",
								"fee()": "2535",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22388,
									"end": 22540,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22388,
									"end": 22540,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22388,
									"end": 22540,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14234,
									"end": 14236,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 14216,
									"end": 14236,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 14216,
									"end": 14236,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 14259,
									"end": 14269,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 14242,
									"end": 14269,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 22422,
									"end": 22538,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "556D6572546F6B656E0000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "PUSH",
									"source": 0,
									"value": "55544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12576,
									"end": 12581,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12573,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12568,
									"end": 12581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12568,
									"end": 12581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12601,
									"end": 12608,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12591,
									"end": 12598,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12591,
									"end": 12608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12591,
									"end": 12608,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12502,
									"end": 12615,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22489,
									"end": 22531,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 22495,
									"end": 22504,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22520,
									"end": 22530,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 22520,
									"end": 22528,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22520,
									"end": 22528,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22520,
									"end": 22528,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 22520,
									"end": 22530,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22520,
									"end": 22530,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 22520,
									"end": 22530,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22520,
									"end": 22530,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 22520,
									"end": 22530,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22514,
									"end": 22516,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 22514,
									"end": 22530,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 22514,
									"end": 22530,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22514,
									"end": 22530,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22514,
									"end": 22530,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 22514,
									"end": 22530,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22514,
									"end": 22530,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 22514,
									"end": 22530,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22506,
									"end": 22511,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "2710"
								},
								{
									"begin": 22506,
									"end": 22530,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 22506,
									"end": 22530,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22506,
									"end": 22530,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22506,
									"end": 22530,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 22506,
									"end": 22530,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22506,
									"end": 22530,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 22506,
									"end": 22530,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22489,
									"end": 22494,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 22489,
									"end": 22494,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22489,
									"end": 22494,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 22489,
									"end": 22531,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22489,
									"end": 22531,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 22489,
									"end": 22531,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22489,
									"end": 22531,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 22489,
									"end": 22531,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22422,
									"end": 22538,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22388,
									"end": 22540,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 22388,
									"end": 22540,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13608,
									"end": 13690,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 13608,
									"end": 13690,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13657,
									"end": 13662,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13681,
									"end": 13683,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 13674,
									"end": 13683,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13674,
									"end": 13683,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13608,
									"end": 13690,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13608,
									"end": 13690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18840,
									"end": 19048,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 18840,
									"end": 19048,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18929,
									"end": 18930,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18910,
									"end": 18931,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18910,
									"end": 18931,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18910,
									"end": 18917,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18910,
									"end": 18931,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18910,
									"end": 18931,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18910,
									"end": 18931,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18906,
									"end": 18997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 18906,
									"end": 18997,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18983,
									"end": 18984,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18954,
									"end": 18986,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18954,
									"end": 18986,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18906,
									"end": 18997,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 18906,
									"end": 18997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19006,
									"end": 19041,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 19022,
									"end": 19023,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19026,
									"end": 19033,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 19035,
									"end": 19040,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 19006,
									"end": 19013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 19006,
									"end": 19013,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19006,
									"end": 19013,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 19006,
									"end": 19041,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19006,
									"end": 19041,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 19006,
									"end": 19041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19006,
									"end": 19041,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 19006,
									"end": 19041,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18840,
									"end": 19048,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18840,
									"end": 19048,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18840,
									"end": 19048,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17390,
									"end": 18497,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 17390,
									"end": 18497,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17495,
									"end": 17496,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17479,
									"end": 17497,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17479,
									"end": 17497,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17479,
									"end": 17483,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17479,
									"end": 17497,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17479,
									"end": 17497,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17479,
									"end": 17497,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17475,
									"end": 18015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 17475,
									"end": 18015,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17631,
									"end": 17636,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17615,
									"end": 17627,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17615,
									"end": 17627,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17615,
									"end": 17636,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17615,
									"end": 17636,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17615,
									"end": 17636,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17615,
									"end": 17636,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17615,
									"end": 17636,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17615,
									"end": 17636,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17615,
									"end": 17636,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 17615,
									"end": 17636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17615,
									"end": 17636,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17615,
									"end": 17636,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17615,
									"end": 17636,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17615,
									"end": 17636,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17615,
									"end": 17636,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17615,
									"end": 17636,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17615,
									"end": 17636,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17615,
									"end": 17636,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17615,
									"end": 17636,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17475,
									"end": 18015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 17475,
									"end": 18015,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17475,
									"end": 18015,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 17475,
									"end": 18015,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17667,
									"end": 17686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17689,
									"end": 17698,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17689,
									"end": 17704,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17699,
									"end": 17703,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17689,
									"end": 17704,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17689,
									"end": 17704,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17689,
									"end": 17704,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17689,
									"end": 17704,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17689,
									"end": 17704,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17689,
									"end": 17704,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17689,
									"end": 17704,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17689,
									"end": 17704,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17689,
									"end": 17704,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17689,
									"end": 17704,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17689,
									"end": 17704,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17689,
									"end": 17704,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17689,
									"end": 17704,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17689,
									"end": 17704,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17689,
									"end": 17704,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17689,
									"end": 17704,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17667,
									"end": 17704,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17667,
									"end": 17704,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17736,
									"end": 17741,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17722,
									"end": 17733,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17722,
									"end": 17741,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17718,
									"end": 17833,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17718,
									"end": 17833,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 17718,
									"end": 17833,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17793,
									"end": 17797,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17799,
									"end": 17810,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17812,
									"end": 17817,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 17768,
									"end": 17818,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17768,
									"end": 17818,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17718,
									"end": 17833,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 17718,
									"end": 17833,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17985,
									"end": 17990,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17971,
									"end": 17982,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17971,
									"end": 17990,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 17962,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 17968,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17963,
									"end": 17967,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 17968,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17953,
									"end": 17968,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 17968,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17953,
									"end": 17968,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 17968,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 17968,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 17968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17953,
									"end": 17968,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 17968,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 17968,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 17968,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 17968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17953,
									"end": 17968,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 17968,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17953,
									"end": 17968,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 17990,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 17990,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 17990,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17953,
									"end": 17990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17653,
									"end": 18015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17475,
									"end": 18015,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 17475,
									"end": 18015,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18043,
									"end": 18044,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18029,
									"end": 18045,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18029,
									"end": 18045,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18029,
									"end": 18031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18029,
									"end": 18045,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18029,
									"end": 18045,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18029,
									"end": 18045,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18025,
									"end": 18450,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 18025,
									"end": 18450,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18208,
									"end": 18213,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18192,
									"end": 18204,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 18192,
									"end": 18204,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18192,
									"end": 18213,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18192,
									"end": 18213,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18192,
									"end": 18213,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18192,
									"end": 18213,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18192,
									"end": 18213,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 18192,
									"end": 18213,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18192,
									"end": 18213,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18192,
									"end": 18213,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18192,
									"end": 18213,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18192,
									"end": 18213,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18192,
									"end": 18213,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18025,
									"end": 18450,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 18025,
									"end": 18450,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18025,
									"end": 18450,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 18025,
									"end": 18450,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18420,
									"end": 18425,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18412,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18403,
									"end": 18416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18413,
									"end": 18415,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18416,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18403,
									"end": 18416,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18416,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18403,
									"end": 18416,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18416,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18403,
									"end": 18416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18416,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18403,
									"end": 18416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18403,
									"end": 18416,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18403,
									"end": 18425,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18425,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18425,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18425,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18425,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18425,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18425,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18425,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18403,
									"end": 18425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18025,
									"end": 18450,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 18025,
									"end": 18450,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18480,
									"end": 18482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18474,
									"end": 18478,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 18484,
									"end": 18489,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 18465,
									"end": 18490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18465,
									"end": 18490,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 17390,
									"end": 18497,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17390,
									"end": 18497,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17390,
									"end": 18497,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17390,
									"end": 18497,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6609,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 6429,
									"end": 6609,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6477,
									"end": 6554,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6474,
									"end": 6475,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6467,
									"end": 6555,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6574,
									"end": 6578,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 6571,
									"end": 6572,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6564,
									"end": 6579,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6598,
									"end": 6602,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6595,
									"end": 6596,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6588,
									"end": 6603,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6615,
									"end": 6717,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 6615,
									"end": 6717,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6657,
									"end": 6665,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6704,
									"end": 6709,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6701,
									"end": 6702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6697,
									"end": 6710,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6676,
									"end": 6710,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6676,
									"end": 6710,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6615,
									"end": 6717,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6615,
									"end": 6717,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6615,
									"end": 6717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6615,
									"end": 6717,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6784,
									"end": 6789,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6795,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6815,
									"end": 6821,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6806,
									"end": 6821,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6806,
									"end": 6821,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6839,
									"end": 6844,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6830,
									"end": 6844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6830,
									"end": 6844,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "tag",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6874,
									"end": 6875,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6864,
									"end": 6872,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6861,
									"end": 6876,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6969,
									"end": 6973,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6964,
									"end": 6967,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6960,
									"end": 6974,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 6954,
									"end": 6958,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6951,
									"end": 6975,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 6948,
									"end": 6998,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6948,
									"end": 6998,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 6948,
									"end": 6998,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6978,
									"end": 6996,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 6978,
									"end": 6996,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 6978,
									"end": 6996,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6978,
									"end": 6996,
									"name": "tag",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 6978,
									"end": 6996,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6948,
									"end": 6998,
									"name": "tag",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 6948,
									"end": 6998,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7028,
									"end": 7029,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7018,
									"end": 7026,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7014,
									"end": 7030,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7011,
									"end": 7462,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7011,
									"end": 7462,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 7011,
									"end": 7462,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7443,
									"end": 7447,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7436,
									"end": 7441,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7432,
									"end": 7448,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7423,
									"end": 7448,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7423,
									"end": 7448,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7011,
									"end": 7462,
									"name": "tag",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 7011,
									"end": 7462,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7487,
									"end": 7491,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7483,
									"end": 7498,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7475,
									"end": 7498,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7475,
									"end": 7498,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7523,
									"end": 7555,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 7546,
									"end": 7554,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7523,
									"end": 7555,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 7523,
									"end": 7555,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7523,
									"end": 7555,
									"name": "tag",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 7523,
									"end": 7555,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7511,
									"end": 7555,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 7511,
									"end": 7555,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "tag",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6723,
									"end": 7571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7631,
									"end": 7636,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7822,
									"end": 7830,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7812,
									"end": 7852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 7812,
									"end": 7852,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7843,
									"end": 7844,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7834,
									"end": 7844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7834,
									"end": 7844,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7845,
									"end": 7850,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 7845,
									"end": 7850,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7812,
									"end": 7852,
									"name": "tag",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 7812,
									"end": 7852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7871,
									"end": 7875,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7861,
									"end": 7897,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "162"
								},
								{
									"begin": 7861,
									"end": 7897,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7888,
									"end": 7889,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7879,
									"end": 7889,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7879,
									"end": 7889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7890,
									"end": 7895,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 7890,
									"end": 7895,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7861,
									"end": 7897,
									"name": "tag",
									"source": 1,
									"value": "162"
								},
								{
									"begin": 7861,
									"end": 7897,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7957,
									"end": 7961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8005,
									"end": 8006,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8000,
									"end": 8027,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8000,
									"end": 8027,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8000,
									"end": 8027,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 8000,
									"end": 8027,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8041,
									"end": 8042,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8036,
									"end": 8227,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8036,
									"end": 8227,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8036,
									"end": 8227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "165"
								},
								{
									"begin": 8036,
									"end": 8227,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7950,
									"end": 8227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "163"
								},
								{
									"begin": 7950,
									"end": 8227,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8000,
									"end": 8027,
									"name": "tag",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 8000,
									"end": 8027,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8018,
									"end": 8019,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8009,
									"end": 8019,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8009,
									"end": 8019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8020,
									"end": 8025,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8020,
									"end": 8025,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 8020,
									"end": 8025,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8036,
									"end": 8227,
									"name": "tag",
									"source": 1,
									"value": "165"
								},
								{
									"begin": 8036,
									"end": 8227,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8081,
									"end": 8084,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 8071,
									"end": 8079,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8068,
									"end": 8085,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8065,
									"end": 8108,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8065,
									"end": 8108,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 8065,
									"end": 8108,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8088,
									"end": 8106,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 8088,
									"end": 8106,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 8088,
									"end": 8106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8088,
									"end": 8106,
									"name": "tag",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 8088,
									"end": 8106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8065,
									"end": 8108,
									"name": "tag",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 8065,
									"end": 8108,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8137,
									"end": 8145,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8134,
									"end": 8135,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8130,
									"end": 8146,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8121,
									"end": 8146,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8121,
									"end": 8146,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8172,
									"end": 8175,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8165,
									"end": 8170,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8162,
									"end": 8176,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8159,
									"end": 8199,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8159,
									"end": 8199,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 8159,
									"end": 8199,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8179,
									"end": 8197,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 8179,
									"end": 8197,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 8179,
									"end": 8197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8179,
									"end": 8197,
									"name": "tag",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 8179,
									"end": 8197,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8159,
									"end": 8199,
									"name": "tag",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 8159,
									"end": 8199,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8212,
									"end": 8217,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8212,
									"end": 8217,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 8212,
									"end": 8217,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7950,
									"end": 8227,
									"name": "tag",
									"source": 1,
									"value": "163"
								},
								{
									"begin": 7950,
									"end": 8227,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7950,
									"end": 8227,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8336,
									"end": 8338,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8326,
									"end": 8334,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8323,
									"end": 8339,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8317,
									"end": 8320,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 8311,
									"end": 8315,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8304,
									"end": 8340,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8286,
									"end": 8288,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 8276,
									"end": 8284,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8273,
									"end": 8289,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8268,
									"end": 8270,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 8262,
									"end": 8266,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8259,
									"end": 8271,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8255,
									"end": 8290,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8239,
									"end": 8350,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8236,
									"end": 8482,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8236,
									"end": 8482,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 8236,
									"end": 8482,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8392,
									"end": 8400,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8386,
									"end": 8390,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8382,
									"end": 8401,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8373,
									"end": 8401,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8373,
									"end": 8401,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8427,
									"end": 8430,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8420,
									"end": 8425,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8417,
									"end": 8431,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8414,
									"end": 8454,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8414,
									"end": 8454,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 8414,
									"end": 8454,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8434,
									"end": 8452,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "172"
								},
								{
									"begin": 8434,
									"end": 8452,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 8434,
									"end": 8452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8434,
									"end": 8452,
									"name": "tag",
									"source": 1,
									"value": "172"
								},
								{
									"begin": 8434,
									"end": 8452,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8414,
									"end": 8454,
									"name": "tag",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 8414,
									"end": 8454,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8467,
									"end": 8472,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 8467,
									"end": 8472,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8236,
									"end": 8482,
									"name": "tag",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 8236,
									"end": 8482,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8507,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 8545,
									"end": 8548,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8535,
									"end": 8543,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8529,
									"end": 8533,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8526,
									"end": 8527,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8507,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 8507,
									"end": 8549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8507,
									"end": 8549,
									"name": "tag",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 8507,
									"end": 8549,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8492,
									"end": 8549,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8492,
									"end": 8549,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8492,
									"end": 8549,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8492,
									"end": 8549,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8581,
									"end": 8585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8576,
									"end": 8579,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8572,
									"end": 8586,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 8565,
									"end": 8570,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8562,
									"end": 8587,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8559,
									"end": 8610,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8559,
									"end": 8610,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 8559,
									"end": 8610,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8590,
									"end": 8608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 8590,
									"end": 8608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 8590,
									"end": 8608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8590,
									"end": 8608,
									"name": "tag",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 8590,
									"end": 8608,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8559,
									"end": 8610,
									"name": "tag",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 8559,
									"end": 8610,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8639,
									"end": 8643,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8632,
									"end": 8637,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8628,
									"end": 8644,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8619,
									"end": 8644,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8619,
									"end": 8644,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "tag",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7577,
									"end": 8650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8656,
									"end": 8742,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 8656,
									"end": 8742,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8691,
									"end": 8698,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8731,
									"end": 8735,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 8724,
									"end": 8729,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8720,
									"end": 8736,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8709,
									"end": 8736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8709,
									"end": 8736,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8656,
									"end": 8742,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8656,
									"end": 8742,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8656,
									"end": 8742,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8656,
									"end": 8742,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8748,
									"end": 9029,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 8748,
									"end": 9029,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8806,
									"end": 8811,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8830,
									"end": 8853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 8848,
									"end": 8852,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8830,
									"end": 8853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 8830,
									"end": 8853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8830,
									"end": 8853,
									"name": "tag",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 8830,
									"end": 8853,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8822,
									"end": 8853,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8822,
									"end": 8853,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8874,
									"end": 8899,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 8890,
									"end": 8898,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8874,
									"end": 8899,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 8874,
									"end": 8899,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8874,
									"end": 8899,
									"name": "tag",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 8874,
									"end": 8899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8862,
									"end": 8899,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8862,
									"end": 8899,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8918,
									"end": 9022,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 8955,
									"end": 9021,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8945,
									"end": 8953,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8939,
									"end": 8943,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8918,
									"end": 9022,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 8918,
									"end": 9022,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8918,
									"end": 9022,
									"name": "tag",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 8918,
									"end": 9022,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8909,
									"end": 9022,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8909,
									"end": 9022,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8748,
									"end": 9029,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8748,
									"end": 9029,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8748,
									"end": 9029,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8748,
									"end": 9029,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8748,
									"end": 9029,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9035,
									"end": 9445,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 9035,
									"end": 9445,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9075,
									"end": 9082,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9098,
									"end": 9118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 9116,
									"end": 9117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9098,
									"end": 9118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 9098,
									"end": 9118,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9098,
									"end": 9118,
									"name": "tag",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 9098,
									"end": 9118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9093,
									"end": 9118,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9093,
									"end": 9118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9132,
									"end": 9152,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 9150,
									"end": 9151,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9132,
									"end": 9152,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 9132,
									"end": 9152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9132,
									"end": 9152,
									"name": "tag",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 9132,
									"end": 9152,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9127,
									"end": 9152,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9127,
									"end": 9152,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9187,
									"end": 9188,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9184,
									"end": 9185,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9180,
									"end": 9189,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 9209,
									"end": 9239,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 9227,
									"end": 9238,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9209,
									"end": 9239,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 9209,
									"end": 9239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9209,
									"end": 9239,
									"name": "tag",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 9209,
									"end": 9239,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9198,
									"end": 9239,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9198,
									"end": 9239,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9388,
									"end": 9389,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9379,
									"end": 9386,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9375,
									"end": 9390,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 9372,
									"end": 9373,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9369,
									"end": 9391,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 9349,
									"end": 9350,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9342,
									"end": 9351,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 9322,
									"end": 9405,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 9299,
									"end": 9438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 9299,
									"end": 9438,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9418,
									"end": 9436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 9418,
									"end": 9436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 9418,
									"end": 9436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9418,
									"end": 9436,
									"name": "tag",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 9418,
									"end": 9436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9299,
									"end": 9438,
									"name": "tag",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 9299,
									"end": 9438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9083,
									"end": 9445,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9035,
									"end": 9445,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9035,
									"end": 9445,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9035,
									"end": 9445,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9035,
									"end": 9445,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9035,
									"end": 9445,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 9556,
									"end": 9561,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 9538,
									"end": 9562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "tag",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9533,
									"end": 9536,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9526,
									"end": 9563,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9451,
									"end": 9569,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9668,
									"end": 9672,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9706,
									"end": 9708,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9695,
									"end": 9704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9691,
									"end": 9709,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9683,
									"end": 9709,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9683,
									"end": 9709,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "190"
								},
								{
									"begin": 9787,
									"end": 9788,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9776,
									"end": 9785,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9772,
									"end": 9789,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9763,
									"end": 9769,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 9719,
									"end": 9790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "tag",
									"source": 1,
									"value": "190"
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9575,
									"end": 9797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9843,
									"end": 9846,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "192"
								},
								{
									"begin": 9880,
									"end": 9881,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 9862,
									"end": 9882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "tag",
									"source": 1,
									"value": "192"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "193"
								},
								{
									"begin": 9914,
									"end": 9915,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 9896,
									"end": 9916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "tag",
									"source": 1,
									"value": "193"
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9939,
									"end": 9940,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9936,
									"end": 9937,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9932,
									"end": 9941,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9960,
									"end": 9963,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9957,
									"end": 9958,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9954,
									"end": 9964,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "194"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "195"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 9967,
									"end": 9985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "tag",
									"source": 1,
									"value": "195"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "tag",
									"source": 1,
									"value": "194"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "197"
								},
								{
									"begin": 10105,
									"end": 10110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 10087,
									"end": 10111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "tag",
									"source": 1,
									"value": "197"
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10082,
									"end": 10085,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10075,
									"end": 10112,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10000,
									"end": 10118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10273,
									"end": 10277,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10311,
									"end": 10313,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 10300,
									"end": 10309,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10296,
									"end": 10314,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "199"
								},
								{
									"begin": 10392,
									"end": 10393,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10381,
									"end": 10390,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10377,
									"end": 10394,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10368,
									"end": 10374,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 10324,
									"end": 10395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "tag",
									"source": 1,
									"value": "199"
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "200"
								},
								{
									"begin": 10473,
									"end": 10475,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10462,
									"end": 10471,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10458,
									"end": 10476,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10449,
									"end": 10455,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 10405,
									"end": 10477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "tag",
									"source": 1,
									"value": "200"
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "201"
								},
								{
									"begin": 10555,
									"end": 10557,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 10544,
									"end": 10553,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10540,
									"end": 10558,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10531,
									"end": 10537,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 10487,
									"end": 10559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "tag",
									"source": 1,
									"value": "201"
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10665,
									"end": 10669,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10703,
									"end": 10705,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10692,
									"end": 10701,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "203"
								},
								{
									"begin": 10784,
									"end": 10785,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10773,
									"end": 10782,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10769,
									"end": 10786,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10760,
									"end": 10766,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 10716,
									"end": 10787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "tag",
									"source": 1,
									"value": "203"
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10572,
									"end": 10794,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 22388,
									"end": 22540,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 22388,
									"end": 22540,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22388,
									"end": 22540,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22388,
									"end": 22540,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22388,
									"end": 22540,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22388,
									"end": 22540,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22388,
									"end": 22540,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22388,
									"end": 22540,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22388,
									"end": 22540,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d1df9255c565cb9400e0b1d74804658d476f636dda9b77c3a7340335483335fd64736f6c634300081a0033",
									".code": [
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "6A1DB1BF"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "6A1DB1BF"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "DDCA3F43"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22388,
											"end": 22540,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 12680,
											"end": 12769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12680,
											"end": 12769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 15380,
											"end": 15566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15380,
											"end": 15566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15380,
											"end": 15566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13750,
											"end": 13847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13750,
											"end": 13847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16158,
											"end": 16402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16158,
											"end": 16402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16158,
											"end": 16402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 13608,
											"end": 13690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13608,
											"end": 13690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14753,
											"end": 14875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14753,
											"end": 14875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14753,
											"end": 14875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13905,
											"end": 14021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 13905,
											"end": 14021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13905,
											"end": 14021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 12882,
											"end": 12975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12882,
											"end": 12975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14276,
											"end": 14645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14276,
											"end": 14645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14276,
											"end": 14645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14933,
											"end": 15073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 14933,
											"end": 15073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14933,
											"end": 15073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 14216,
											"end": 14236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14216,
											"end": 14236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12725,
											"end": 12738,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12757,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 12750,
											"end": 12762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 12750,
											"end": 12762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15453,
											"end": 15457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15469,
											"end": 15482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15485,
											"end": 15497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 15485,
											"end": 15495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 15485,
											"end": 15497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15485,
											"end": 15497,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 15485,
											"end": 15497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15469,
											"end": 15497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15469,
											"end": 15497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15507,
											"end": 15538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 15516,
											"end": 15521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15523,
											"end": 15530,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15532,
											"end": 15537,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15507,
											"end": 15515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 15507,
											"end": 15538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15507,
											"end": 15538,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 15507,
											"end": 15538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15555,
											"end": 15559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15548,
											"end": 15559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15548,
											"end": 15559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15548,
											"end": 15559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13802,
											"end": 13809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13828,
											"end": 13840,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13828,
											"end": 13840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16245,
											"end": 16249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16261,
											"end": 16276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16279,
											"end": 16291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 16279,
											"end": 16289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 16279,
											"end": 16291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16279,
											"end": 16291,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 16279,
											"end": 16291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16261,
											"end": 16291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16261,
											"end": 16291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16301,
											"end": 16338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 16317,
											"end": 16321,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16323,
											"end": 16330,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16332,
											"end": 16337,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16301,
											"end": 16316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 16301,
											"end": 16338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16301,
											"end": 16338,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 16301,
											"end": 16338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16348,
											"end": 16374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16358,
											"end": 16362,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16364,
											"end": 16366,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16368,
											"end": 16373,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16348,
											"end": 16357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 16348,
											"end": 16374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16348,
											"end": 16374,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16348,
											"end": 16374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16391,
											"end": 16395,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16384,
											"end": 16395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16384,
											"end": 16395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16384,
											"end": 16395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16158,
											"end": 16402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13681,
											"end": 13683,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13674,
											"end": 13683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13674,
											"end": 13683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14706,
											"end": 14712,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14706,
											"end": 14712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14706,
											"end": 14712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14706,
											"end": 14712,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14706,
											"end": 14712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14706,
											"end": 14712,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14706,
											"end": 14712,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14706,
											"end": 14712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14706,
											"end": 14712,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14706,
											"end": 14712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14706,
											"end": 14712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14690,
											"end": 14712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 14690,
											"end": 14700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 14690,
											"end": 14702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14702,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 14690,
											"end": 14702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14690,
											"end": 14712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14682,
											"end": 14729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 14682,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14841,
											"end": 14847,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14835,
											"end": 14838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14835,
											"end": 14847,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14835,
											"end": 14847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14835,
											"end": 14847,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14835,
											"end": 14847,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14864,
											"end": 14868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14857,
											"end": 14868,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14857,
											"end": 14868,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13970,
											"end": 13977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13996,
											"end": 14005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14006,
											"end": 14013,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13989,
											"end": 14014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13989,
											"end": 14014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 14021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12942,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 12954,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 12954,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14346,
											"end": 14350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14362,
											"end": 14375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14378,
											"end": 14388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 14378,
											"end": 14390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14378,
											"end": 14390,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14378,
											"end": 14390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14362,
											"end": 14390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14362,
											"end": 14390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14421,
											"end": 14463,
											"name": "PUSH",
											"source": 0,
											"value": "5B38DA6A701C568545DCFCB03FCB875F56BEDDC4"
										},
										{
											"begin": 14400,
											"end": 14463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14400,
											"end": 14463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14474,
											"end": 14491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14501,
											"end": 14504,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14501,
											"end": 14504,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14495,
											"end": 14500,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14495,
											"end": 14504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 14495,
											"end": 14504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14495,
											"end": 14504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14495,
											"end": 14504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 14495,
											"end": 14504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14495,
											"end": 14504,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 14495,
											"end": 14504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14494,
											"end": 14509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14494,
											"end": 14509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14494,
											"end": 14509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14494,
											"end": 14509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 14494,
											"end": 14509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14494,
											"end": 14509,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14494,
											"end": 14509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14474,
											"end": 14509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14474,
											"end": 14509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14528,
											"end": 14531,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14528,
											"end": 14531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14519,
											"end": 14531,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14519,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 14519,
											"end": 14531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14519,
											"end": 14531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14519,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 14519,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14519,
											"end": 14531,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 14519,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14519,
											"end": 14531,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14519,
											"end": 14531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14552,
											"end": 14557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14559,
											"end": 14569,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14542,
											"end": 14581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14581,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14542,
											"end": 14581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14591,
											"end": 14617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14601,
											"end": 14606,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14609,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14611,
											"end": 14616,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14591,
											"end": 14600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14591,
											"end": 14617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14591,
											"end": 14617,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14591,
											"end": 14617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14634,
											"end": 14638,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14627,
											"end": 14638,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14627,
											"end": 14638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14627,
											"end": 14638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14627,
											"end": 14638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14627,
											"end": 14638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14276,
											"end": 14645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15039,
											"end": 15050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15051,
											"end": 15056,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15039,
											"end": 15057,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15058,
											"end": 15065,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15066,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15039,
											"end": 15066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15066,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15039,
											"end": 15066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15039,
											"end": 15066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15039,
											"end": 15066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15039,
											"end": 15066,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15066,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15032,
											"end": 15066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15032,
											"end": 15066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14933,
											"end": 15073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4305,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4209,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4209,
											"end": 4305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20108,
											"end": 20236,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 20108,
											"end": 20236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20192,
											"end": 20229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 20201,
											"end": 20206,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20208,
											"end": 20215,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20217,
											"end": 20222,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20224,
											"end": 20228,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20192,
											"end": 20200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 20192,
											"end": 20229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20192,
											"end": 20229,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 20192,
											"end": 20229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20108,
											"end": 20236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20108,
											"end": 20236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20108,
											"end": 20236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20108,
											"end": 20236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 22273,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 21797,
											"end": 22273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21896,
											"end": 21920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21923,
											"end": 21948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 21933,
											"end": 21938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21940,
											"end": 21947,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21923,
											"end": 21932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 21923,
											"end": 21948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21923,
											"end": 21948,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 21923,
											"end": 21948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21896,
											"end": 21948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21896,
											"end": 21948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21981,
											"end": 21998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21962,
											"end": 21978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21962,
											"end": 21998,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21958,
											"end": 22267,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21958,
											"end": 22267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 21958,
											"end": 22267,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22037,
											"end": 22042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22018,
											"end": 22034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22018,
											"end": 22042,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22014,
											"end": 22144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22014,
											"end": 22144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 22014,
											"end": 22144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22096,
											"end": 22103,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22105,
											"end": 22121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22123,
											"end": 22128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 22069,
											"end": 22129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22069,
											"end": 22129,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22014,
											"end": 22144,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 22014,
											"end": 22144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22185,
											"end": 22242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 22194,
											"end": 22199,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22201,
											"end": 22208,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22229,
											"end": 22234,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22226,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22210,
											"end": 22234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22236,
											"end": 22241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22185,
											"end": 22193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 22185,
											"end": 22242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22185,
											"end": 22242,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 22185,
											"end": 22242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21958,
											"end": 22267,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 21958,
											"end": 22267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21886,
											"end": 22273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 22273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 22273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 22273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 22273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 17075,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 16775,
											"end": 17075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16874,
											"end": 16875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16858,
											"end": 16876,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16858,
											"end": 16876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16858,
											"end": 16862,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16858,
											"end": 16876,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16858,
											"end": 16876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16858,
											"end": 16876,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16854,
											"end": 16940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 16854,
											"end": 16940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 16899,
											"end": 16929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16899,
											"end": 16929,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16854,
											"end": 16940,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 16854,
											"end": 16940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16967,
											"end": 16968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16953,
											"end": 16969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16953,
											"end": 16969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16953,
											"end": 16955,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16953,
											"end": 16969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16953,
											"end": 16969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16953,
											"end": 16969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16949,
											"end": 17035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16949,
											"end": 17035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17021,
											"end": 17022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 16992,
											"end": 17024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16949,
											"end": 17035,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16949,
											"end": 17035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17052,
											"end": 17056,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17058,
											"end": 17060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17067,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 17044,
											"end": 17068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17068,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17044,
											"end": 17068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 17075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 17075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 17075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 17075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21083,
											"end": 21515,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 21083,
											"end": 21515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21195,
											"end": 21214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21195,
											"end": 21214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21195,
											"end": 21200,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21195,
											"end": 21214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21195,
											"end": 21214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21195,
											"end": 21214,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21191,
											"end": 21280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 21191,
											"end": 21280,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21266,
											"end": 21267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 21237,
											"end": 21269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21269,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21191,
											"end": 21280,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 21191,
											"end": 21280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21312,
											"end": 21313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21293,
											"end": 21314,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21293,
											"end": 21314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21293,
											"end": 21300,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21293,
											"end": 21314,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21293,
											"end": 21314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21293,
											"end": 21314,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21289,
											"end": 21379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 21289,
											"end": 21379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21365,
											"end": 21366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 21337,
											"end": 21368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21337,
											"end": 21368,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21289,
											"end": 21379,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 21289,
											"end": 21379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21399,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21388,
											"end": 21406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21400,
											"end": 21405,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21388,
											"end": 21406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21388,
											"end": 21406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21406,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21388,
											"end": 21406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21406,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21388,
											"end": 21406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21388,
											"end": 21406,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21407,
											"end": 21414,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21388,
											"end": 21415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21388,
											"end": 21415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21388,
											"end": 21415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21388,
											"end": 21415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21388,
											"end": 21415,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21423,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21437,
											"end": 21446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21433,
											"end": 21509,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21433,
											"end": 21509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 21433,
											"end": 21509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21483,
											"end": 21490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21476,
											"end": 21481,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21492,
											"end": 21497,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 21467,
											"end": 21498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21467,
											"end": 21498,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21433,
											"end": 21509,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 21433,
											"end": 21509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21083,
											"end": 21515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21083,
											"end": 21515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21083,
											"end": 21515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21083,
											"end": 21515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21083,
											"end": 21515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17390,
											"end": 18497,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 17390,
											"end": 18497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17495,
											"end": 17496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17479,
											"end": 17497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17479,
											"end": 17497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17483,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17479,
											"end": 17497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17497,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 18015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 17475,
											"end": 18015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17631,
											"end": 17636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17627,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17615,
											"end": 17627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 17615,
											"end": 17636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 18015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 17475,
											"end": 18015,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 18015,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 17475,
											"end": 18015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17667,
											"end": 17686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17689,
											"end": 17698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17699,
											"end": 17703,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17689,
											"end": 17704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17689,
											"end": 17704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17704,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17689,
											"end": 17704,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17704,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17689,
											"end": 17704,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17689,
											"end": 17704,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17689,
											"end": 17704,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17667,
											"end": 17704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17667,
											"end": 17704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17736,
											"end": 17741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17722,
											"end": 17733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17722,
											"end": 17741,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17718,
											"end": 17833,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17718,
											"end": 17833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 17718,
											"end": 17833,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17793,
											"end": 17797,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17799,
											"end": 17810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17812,
											"end": 17817,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 17768,
											"end": 17818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17818,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17718,
											"end": 17833,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 17718,
											"end": 17833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17985,
											"end": 17990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17971,
											"end": 17982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17971,
											"end": 17990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17963,
											"end": 17967,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17990,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17653,
											"end": 18015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 18015,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 17475,
											"end": 18015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18043,
											"end": 18044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18029,
											"end": 18045,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18029,
											"end": 18045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18029,
											"end": 18031,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18029,
											"end": 18045,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18029,
											"end": 18045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18029,
											"end": 18045,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 18025,
											"end": 18450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18208,
											"end": 18213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18192,
											"end": 18204,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18192,
											"end": 18204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18192,
											"end": 18213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18192,
											"end": 18213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18192,
											"end": 18213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18192,
											"end": 18213,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18192,
											"end": 18213,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18192,
											"end": 18213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18192,
											"end": 18213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18192,
											"end": 18213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18192,
											"end": 18213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18192,
											"end": 18213,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18192,
											"end": 18213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 18025,
											"end": 18450,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18450,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 18025,
											"end": 18450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18420,
											"end": 18425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18413,
											"end": 18415,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18403,
											"end": 18425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18425,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18425,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18450,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 18025,
											"end": 18450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18480,
											"end": 18482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18474,
											"end": 18478,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18484,
											"end": 18489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 18465,
											"end": 18490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18465,
											"end": 18490,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17390,
											"end": 18497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17390,
											"end": 18497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17390,
											"end": 18497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17390,
											"end": 18497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5539,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 5544,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5547,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 5737,
											"end": 5744,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5692,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5794,
											"end": 5796,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 5865,
											"end": 5872,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5856,
											"end": 5862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5845,
											"end": 5854,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5841,
											"end": 5863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5820,
											"end": 5873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5810,
											"end": 5873,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5810,
											"end": 5873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 6076,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5896,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6021,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5941,
											"end": 5942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 6022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6041,
											"end": 6045,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6038,
											"end": 6039,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6069,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6062,
											"end": 6063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6070,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6164,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6157,
											"end": 6161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6153,
											"end": 6165,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6211,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6204,
											"end": 6208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6200,
											"end": 6212,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 6221,
											"end": 6302,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6291,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 6279,
											"end": 6285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6275,
											"end": 6292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6292,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6302,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 6221,
											"end": 6302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6349,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6341,
											"end": 6347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6338,
											"end": 6352,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6318,
											"end": 6336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6353,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 6312,
											"end": 6396,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6368,
											"end": 6386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6396,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 6312,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6133,
											"end": 6402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6570,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6408,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6562,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F7420616E206F776E65720000000000000000000000000000000000000000"
										},
										{
											"begin": 6544,
											"end": 6545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6532,
											"end": 6546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6525,
											"end": 6563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6576,
											"end": 6942,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6576,
											"end": 6942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6718,
											"end": 6721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6739,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 6803,
											"end": 6805,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 6798,
											"end": 6801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6739,
											"end": 6806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6806,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 6739,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6815,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 6904,
											"end": 6907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6815,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6815,
											"end": 6908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6815,
											"end": 6908,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 6815,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6933,
											"end": 6935,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6928,
											"end": 6931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6917,
											"end": 6936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6917,
											"end": 6936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6576,
											"end": 6942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6576,
											"end": 6942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6576,
											"end": 6942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6576,
											"end": 6942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6948,
											"end": 7367,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6948,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7114,
											"end": 7118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7152,
											"end": 7154,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7129,
											"end": 7155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7129,
											"end": 7155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7211,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7176,
											"end": 7185,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7172,
											"end": 7189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7165,
											"end": 7212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7229,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7229,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 7229,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7229,
											"end": 7360,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 7229,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6948,
											"end": 7367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6948,
											"end": 7367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6948,
											"end": 7367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6948,
											"end": 7367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7373,
											"end": 7553,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 7373,
											"end": 7553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7498,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7418,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7518,
											"end": 7522,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7515,
											"end": 7516,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7508,
											"end": 7523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7542,
											"end": 7546,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7539,
											"end": 7540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7532,
											"end": 7547,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7969,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 7559,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7622,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7622,
											"end": 7642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7642,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 7622,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7617,
											"end": 7642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7617,
											"end": 7642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 7674,
											"end": 7675,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7656,
											"end": 7676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7676,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 7656,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7651,
											"end": 7676,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7651,
											"end": 7676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7711,
											"end": 7712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7713,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7733,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 7751,
											"end": 7762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7733,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7733,
											"end": 7763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7733,
											"end": 7763,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 7733,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7722,
											"end": 7763,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7722,
											"end": 7763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7912,
											"end": 7913,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7903,
											"end": 7910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7893,
											"end": 7915,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7873,
											"end": 7874,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7866,
											"end": 7875,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7846,
											"end": 7929,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 7823,
											"end": 7962,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 7942,
											"end": 7960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7962,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 7823,
											"end": 7962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7607,
											"end": 7969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7969,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7975,
											"end": 8155,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7975,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8100,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8020,
											"end": 8021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8013,
											"end": 8101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8120,
											"end": 8124,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 8117,
											"end": 8118,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8110,
											"end": 8125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8144,
											"end": 8148,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8141,
											"end": 8142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8134,
											"end": 8149,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8346,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8161,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8218,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 8236,
											"end": 8237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8218,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 8218,
											"end": 8238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8218,
											"end": 8238,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 8218,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8213,
											"end": 8238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8213,
											"end": 8238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 8270,
											"end": 8271,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 8252,
											"end": 8272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8291,
											"end": 8292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 8281,
											"end": 8316,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8296,
											"end": 8314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 8296,
											"end": 8314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 8296,
											"end": 8314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8296,
											"end": 8314,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 8296,
											"end": 8314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8316,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 8281,
											"end": 8316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8338,
											"end": 8339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8335,
											"end": 8336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8331,
											"end": 8340,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8326,
											"end": 8340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8326,
											"end": 8340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8346,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8546,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 8352,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8392,
											"end": 8396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8412,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 8430,
											"end": 8431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 8412,
											"end": 8432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8432,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 8412,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8407,
											"end": 8432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8407,
											"end": 8432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8446,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 8464,
											"end": 8465,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8446,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 8446,
											"end": 8466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8446,
											"end": 8466,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 8446,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8441,
											"end": 8466,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8441,
											"end": 8466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8490,
											"end": 8491,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8483,
											"end": 8492,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8475,
											"end": 8492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8475,
											"end": 8492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8514,
											"end": 8515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8508,
											"end": 8512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8505,
											"end": 8516,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8502,
											"end": 8539,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8502,
											"end": 8539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 8502,
											"end": 8539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 8519,
											"end": 8537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8502,
											"end": 8539,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 8502,
											"end": 8539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8546,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8670,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 8552,
											"end": 8670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 8657,
											"end": 8662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 8639,
											"end": 8663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8663,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 8639,
											"end": 8663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8676,
											"end": 9118,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 8676,
											"end": 9118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8825,
											"end": 8829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8863,
											"end": 8865,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8852,
											"end": 8861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8848,
											"end": 8866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8840,
											"end": 8866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8840,
											"end": 8866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8876,
											"end": 8947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 8944,
											"end": 8945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8933,
											"end": 8942,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8929,
											"end": 8946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8920,
											"end": 8926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8876,
											"end": 8947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 8876,
											"end": 8947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8876,
											"end": 8947,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 8876,
											"end": 8947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8957,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 9025,
											"end": 9027,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9014,
											"end": 9023,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9010,
											"end": 9028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9001,
											"end": 9007,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8957,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 8957,
											"end": 9029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8957,
											"end": 9029,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 8957,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9039,
											"end": 9111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 9107,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9096,
											"end": 9105,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9083,
											"end": 9089,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9039,
											"end": 9111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 9039,
											"end": 9111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9039,
											"end": 9111,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 9039,
											"end": 9111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8676,
											"end": 9118,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8676,
											"end": 9118,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8676,
											"end": 9118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8676,
											"end": 9118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8676,
											"end": 9118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8676,
											"end": 9118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8676,
											"end": 9118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9124,
											"end": 9346,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 9124,
											"end": 9346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9217,
											"end": 9221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9255,
											"end": 9257,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9244,
											"end": 9253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9240,
											"end": 9258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9258,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9268,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 9336,
											"end": 9337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9325,
											"end": 9334,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9321,
											"end": 9338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9312,
											"end": 9318,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9268,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 9268,
											"end": 9339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9268,
											"end": 9339,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 9268,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9124,
											"end": 9346,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9124,
											"end": 9346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9124,
											"end": 9346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9124,
											"end": 9346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9124,
											"end": 9346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9543,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 9352,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9392,
											"end": 9395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9411,
											"end": 9431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 9429,
											"end": 9430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9411,
											"end": 9431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 9411,
											"end": 9431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9411,
											"end": 9431,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 9411,
											"end": 9431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9406,
											"end": 9431,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9406,
											"end": 9431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9445,
											"end": 9465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 9463,
											"end": 9464,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9445,
											"end": 9465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 9445,
											"end": 9465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9445,
											"end": 9465,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 9445,
											"end": 9465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9440,
											"end": 9465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9440,
											"end": 9465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9488,
											"end": 9489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9485,
											"end": 9486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9481,
											"end": 9490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9509,
											"end": 9512,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9506,
											"end": 9507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9503,
											"end": 9513,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9500,
											"end": 9536,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9500,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 9500,
											"end": 9536,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9516,
											"end": 9534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 9516,
											"end": 9534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 9516,
											"end": 9534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9516,
											"end": 9534,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 9516,
											"end": 9534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9500,
											"end": 9536,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 9500,
											"end": 9536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9543,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/UmerToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"changeFee(uint256)": "6a1db1bf",
							"decimals()": "313ce567",
							"fee()": "ddca3f43",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"changeFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UmerToken_flattened.sol\":\"UmerToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UmerToken_flattened.sol\":{\"keccak256\":\"0x82fa10ba4c86e246f2e29d4ea4a1858e9f0c3d1299d80b33df7747f0fea8ec67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d7427bb9ef1280eb4de232f74ee80a877081b1882b53a7558ca3900641df446\",\"dweb:/ipfs/QmP4HQhZq3d6R9Hi8EjUHj43kHGW6jkXhGZFRiwWFZ9nXM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/UmerToken_flattened.sol:UmerToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/UmerToken_flattened.sol:UmerToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/UmerToken_flattened.sol:UmerToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/UmerToken_flattened.sol:UmerToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/UmerToken_flattened.sol:UmerToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 361,
								"contract": "contracts/UmerToken_flattened.sol:UmerToken",
								"label": "fee",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 365,
								"contract": "contracts/UmerToken_flattened.sol:UmerToken",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/UmerToken_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/UmerToken_flattened.sol",
					"exportedSymbols": {
						"Context": [
							129
						],
						"ERC20": [
							829
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							218
						],
						"UmerToken": [
							853
						]
					},
					"id": 854,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "165:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "191:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "273:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "286:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "455:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "480:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "464:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "502:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "486:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "514:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "506:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:57:0"
									},
									"src": "449:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "527:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "686:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "711:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "695:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "734:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "718:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "751:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "743:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:63:0"
									},
									"src": "680:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "764:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "843:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "880:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "879:9:0"
									},
									"scope": 77,
									"src": "834:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "895:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "998:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "990:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1030:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:9:0"
									},
									"scope": 77,
									"src": "971:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1045:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1272:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1289:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1281:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1301:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1293:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1326:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1326:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1325:6:0"
									},
									"scope": 77,
									"src": "1263:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1338:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1616:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1626:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1649:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1641:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1625:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1681:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:9:0"
									},
									"scope": 77,
									"src": "1607:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1696:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2377:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2393:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2385:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2385:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2410:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2402:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2384:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2435:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2435:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2434:6:0"
									},
									"scope": 77,
									"src": "2368:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2447:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2758:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2779:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2793:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2785:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2805:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2797:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2830:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2830:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:6:0"
									},
									"scope": 77,
									"src": "2749:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 854,
							"src": "263:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3010:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3153:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3153:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3153:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3037:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3135:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3166:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3234:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3238:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3264:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3264:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3263:15:0"
									},
									"scope": 100,
									"src": "3225:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3285:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3355:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3361:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3387:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3387:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3386:15:0"
									},
									"scope": 100,
									"src": "3346:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3408:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3487:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3495:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3521:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3521:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3520:7:0"
									},
									"scope": 100,
									"src": "3478:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 854,
							"src": "3125:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3654:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3680:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4195:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4271:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4288:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4292:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4288:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4281:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4218:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4228:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4262:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:9:0"
									},
									"scope": 129,
									"src": "4209:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4378:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4395:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4399:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4395:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4388:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4320:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4328:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4362:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4362:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4361:16:0"
									},
									"scope": 129,
									"src": "4311:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4488:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4505:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4498:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4425:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4445:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4479:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4478:9:0"
									},
									"scope": 129,
									"src": "4416:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 854,
							"src": "4177:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4662:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4688:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4840:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4859:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5179:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5212:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5204:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5228:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5220:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5203:49:0"
									},
									"src": "5173:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5259:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5422:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5449:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5441:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5441:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5440:16:0"
									},
									"src": "5416:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5463:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5633:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5662:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5654:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5653:18:0"
									},
									"src": "5627:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5678:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6034:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6069:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6061:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6086:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6078:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6105:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6097:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6060:52:0"
									},
									"src": "6028:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6119:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6304:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6324:18:0"
									},
									"src": "6298:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6349:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6555:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6583:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6575:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6574:17:0"
									},
									"src": "6549:43:0"
								}
							],
							"scope": 854,
							"src": "4830:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6596:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6750:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6770:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "7000:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7027:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "7019:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7018:15:0"
									},
									"src": "6994:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7040:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7183:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7214:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7206:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:17:0"
									},
									"src": "7177:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7229:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7529:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7558:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7550:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7574:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7566:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7591:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7583:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7549:48:0"
									},
									"src": "7523:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7604:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7767:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7795:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7787:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7787:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7786:16:0"
									},
									"src": "7761:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7809:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7979:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8009:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "8001:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8001:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8000:18:0"
									},
									"src": "7973:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "8025:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8283:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8318:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8310:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8336:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8328:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8309:35:0"
									},
									"src": "8277:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8351:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8536:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8566:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8558:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8558:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8557:18:0"
									},
									"src": "8530:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8582:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8790:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8820:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8812:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:18:0"
									},
									"src": "8784:46:0"
								}
							],
							"scope": 854,
							"src": "6740:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8834:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8990:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9011:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9383:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9418:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9410:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9434:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9426:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9451:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9443:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9467:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9459:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9409:66:0"
									},
									"src": "9377:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9482:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9645:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9674:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9666:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9665:16:0"
									},
									"src": "9639:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9688:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9858:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9889:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9881:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9880:18:0"
									},
									"src": "9852:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9905:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10172:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10209:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10201:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10227:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10219:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10200:33:0"
									},
									"src": "10166:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10240:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10425:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10456:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10448:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10447:18:0"
									},
									"src": "10419:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10472:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10680:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10703:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10702:18:0"
									},
									"src": "10674:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10727:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11018:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11052:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11044:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11071:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11063:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11043:41:0"
									},
									"src": "11012:73:0"
								}
							],
							"scope": 854,
							"src": "8980:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11219:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12034:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12034:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12034:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12043:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12043:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12043:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12051:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12051:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12051:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12067:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12067:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12067:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11249:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 829,
							"linearizedBaseContracts": [
								829,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "12025:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12130:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 829,
									"src": "12086:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12102:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12094:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12086:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12113:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12218:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 829,
									"src": "12146:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12162:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12154:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12146:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12189:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12181:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12173:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12200:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12252:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 829,
									"src": "12236:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12236:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12286:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 829,
									"src": "12271:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12271:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12312:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 829,
									"src": "12297:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12297:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12558:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12568:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12576:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12568:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12568:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12591:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12601:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12591:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12591:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12326:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12528:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12514:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12514:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12549:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12535:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12535:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12513:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12558:0:0"
									},
									"scope": 829,
									"src": "12502:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12740:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "12757:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "12750:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12621:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12689:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12693:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12725:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12725:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12724:15:0"
									},
									"scope": 829,
									"src": "12680:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "12944:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "12961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "12954:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "12775:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12891:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12897:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "12929:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12929:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12928:15:0"
									},
									"scope": 829,
									"src": "12882:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13664:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13681:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13674:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "12981:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13617:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13625:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13657:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13657:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13656:7:0"
									},
									"scope": 829,
									"src": "13608:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "13811:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "13828:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "13821:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13696:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13759:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13770:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "13802:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13801:9:0"
									},
									"scope": 829,
									"src": "13750:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "13979:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "13996:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "14006:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13996:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "13989:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "13853:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13914:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13932:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13924:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13924:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13923:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13969:9:0"
									},
									"scope": 829,
									"src": "13905:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14027:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "ddca3f43",
									"id": 361,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "14228:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 829,
									"src": "14216:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 359,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "14216:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 360,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14234:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 365,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "14250:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 829,
									"src": "14242:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 362,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "14242:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"expression": {
											"id": 363,
											"name": "msg",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967281,
											"src": "14259:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_message",
												"typeString": "msg"
											}
										},
										"id": 364,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberLocation": "14263:6:0",
										"memberName": "sender",
										"nodeType": "MemberAccess",
										"src": "14259:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "14352:293:0",
										"statements": [
											{
												"assignments": [
													375
												],
												"declarations": [
													{
														"constant": false,
														"id": 375,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14370:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 410,
														"src": "14362:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 374,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14362:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 378,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 376,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14378:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14378:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14362:28:0"
											},
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "feeAddress",
														"nameLocation": "14408:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 410,
														"src": "14400:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 379,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14400:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 382,
												"initialValue": {
													"hexValue": "307835423338446136613730316335363835343564436663423033466342383735663536626564644334",
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14421:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"value": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14400:63:0"
											},
											{
												"assignments": [
													384
												],
												"declarations": [
													{
														"constant": false,
														"id": 384,
														"mutability": "mutable",
														"name": "feeamount",
														"nameLocation": "14482:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 410,
														"src": "14474:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14474:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 391,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 385,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "14495:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 386,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "14501:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14495:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 388,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14494:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14506:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "14494:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14474:35:0"
											},
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "14519:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 393,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "14528:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14519:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "14519:12:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 397,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "14552:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "feeAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "14559:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "feeamount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14571:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 396,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "14542:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14542:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "14542:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 403,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "14601:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 404,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "14607:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "14611:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 402,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "14591:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14591:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "14591:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14634:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 373,
												"id": 409,
												"nodeType": "Return",
												"src": "14627:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14285:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14303:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "14295:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14295:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14315:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "14307:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14294:27:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "14346:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 371,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14346:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14345:6:0"
									},
									"scope": 829,
									"src": "14276:369:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "14672:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 414,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "14690:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14690:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 416,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "14706:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14690:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616e206f776e6572",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14714:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_38f1e8dc38fecfe471d0b117a6310f3d806a6db8c5b6d4cb844edcf1633e5233",
																"typeString": "literal_string \"Not an owner\""
															},
															"value": "Not an owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_38f1e8dc38fecfe471d0b117a6310f3d806a6db8c5b6d4cb844edcf1633e5233",
																"typeString": "literal_string \"Not an owner\""
															}
														],
														"id": 413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14682:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14682:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "14682:47:0"
											},
											{
												"id": 421,
												"nodeType": "PlaceholderStatement",
												"src": "14739:1:0"
											}
										]
									},
									"id": 423,
									"name": "onlyOwner",
									"nameLocation": "14660:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14669:2:0"
									},
									"src": "14651:96:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "14825:50:0",
										"statements": [
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "14835:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "newFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "14841:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14835:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "14835:12:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14864:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 431,
												"id": 437,
												"nodeType": "Return",
												"src": "14857:11:0"
											}
										]
									},
									"functionSelector": "6a1db1bf",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 428,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 427,
												"name": "onlyOwner",
												"nameLocations": [
													"14800:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 423,
												"src": "14800:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14800:9:0"
										}
									],
									"name": "changeFee",
									"nameLocation": "14762:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "14777:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "14772:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14772:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14771:13:0"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "14819:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 429,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14819:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14818:6:0"
									},
									"scope": 829,
									"src": "14753:122:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "15022:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 449,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "15039:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 451,
														"indexExpression": {
															"id": 450,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "15051:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15039:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 453,
													"indexExpression": {
														"id": 452,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "15058:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15039:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 448,
												"id": 454,
												"nodeType": "Return",
												"src": "15032:34:0"
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "14881:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14942:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14960:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "14952:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14975:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "14967:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14951:32:0"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "15013:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15012:9:0"
									},
									"scope": 829,
									"src": "14933:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "15459:107:0",
										"statements": [
											{
												"assignments": [
													467
												],
												"declarations": [
													{
														"constant": false,
														"id": 467,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15477:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "15469:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 466,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15469:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 470,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 468,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15485:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15485:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15469:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 472,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "15516:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 473,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "15523:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 474,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "15532:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 471,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															720,
															780
														],
														"referencedDeclaration": 720,
														"src": "15507:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15507:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "15507:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15555:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 465,
												"id": 478,
												"nodeType": "Return",
												"src": "15548:11:0"
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "15079:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15389:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15405:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "15397:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15397:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15422:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "15414:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15396:32:0"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "15453:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 463,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15453:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15452:6:0"
									},
									"scope": 829,
									"src": "15380:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "16251:151:0",
										"statements": [
											{
												"assignments": [
													493
												],
												"declarations": [
													{
														"constant": false,
														"id": 493,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "16269:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "16261:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 492,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16261:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 496,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 494,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "16279:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16279:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16261:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 498,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "16317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "16323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 500,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "16332:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 497,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "16301:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16301:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "16301:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 504,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "16358:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "16364:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "16368:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 503,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "16348:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16348:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "16348:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 491,
												"id": 510,
												"nodeType": "Return",
												"src": "16384:11:0"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "15572:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "16167:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16188:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "16180:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16202:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "16194:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16194:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16214:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "16206:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16179:41:0"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "16245:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 489,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16245:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16244:6:0"
									},
									"scope": 829,
									"src": "16158:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "16844:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 522,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "16858:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16874:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16866:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 523,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16866:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16866:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16858:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "16854:86:0",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "16878:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16926:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16918:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 529,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16918:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16918:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 528,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16899:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16899:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 534,
															"nodeType": "RevertStatement",
															"src": "16892:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 537,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "16953:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16967:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16959:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 538,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16959:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16959:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16953:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 551,
												"nodeType": "IfStatement",
												"src": "16949:86:0",
												"trueBody": {
													"id": 550,
													"nodeType": "Block",
													"src": "16971:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 546,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17021:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17013:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 544,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "17013:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17013:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 543,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16992:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16992:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 549,
															"nodeType": "RevertStatement",
															"src": "16985:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 553,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "17052:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 554,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "17058:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "17062:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 552,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "17044:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17044:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "17044:24:0"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "16408:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16784:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16802:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "16794:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16794:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16816:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "16808:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16808:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16828:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "16820:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16793:41:0"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16844:0:0"
									},
									"scope": 829,
									"src": "16775:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "17465:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "17479:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17495:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17487:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17487:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17487:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17479:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 606,
													"nodeType": "Block",
													"src": "17653:362:0",
													"statements": [
														{
															"assignments": [
																581
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 581,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17675:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 606,
																	"src": "17667:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 580,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17667:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 585,
															"initialValue": {
																"baseExpression": {
																	"id": 582,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17689:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 584,
																"indexExpression": {
																	"id": 583,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "17699:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17689:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17667:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 586,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "17722:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 587,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "17736:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17722:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 596,
															"nodeType": "IfStatement",
															"src": "17718:115:0",
															"trueBody": {
																"id": 595,
																"nodeType": "Block",
																"src": "17743:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 590,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 562,
																					"src": "17793:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 591,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 581,
																					"src": "17799:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 592,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "17812:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 589,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17768:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17768:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 594,
																		"nodeType": "RevertStatement",
																		"src": "17761:57:0"
																	}
																]
															}
														},
														{
															"id": 605,
															"nodeType": "UncheckedBlock",
															"src": "17846:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 597,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17953:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 599,
																			"indexExpression": {
																				"id": 598,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 562,
																				"src": "17963:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17953:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 600,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 581,
																				"src": "17971:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 601,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 566,
																				"src": "17985:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17971:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17953:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 604,
																	"nodeType": "ExpressionStatement",
																	"src": "17953:37:0"
																}
															]
														}
													]
												},
												"id": 607,
												"nodeType": "IfStatement",
												"src": "17475:540:0",
												"trueBody": {
													"id": 579,
													"nodeType": "Block",
													"src": "17499:148:0",
													"statements": [
														{
															"expression": {
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 575,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17615:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 576,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "17631:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17615:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 578,
															"nodeType": "ExpressionStatement",
															"src": "17615:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 608,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "18029:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18043:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18035:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 609,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18035:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18035:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18029:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "18244:206:0",
													"statements": [
														{
															"id": 626,
															"nodeType": "UncheckedBlock",
															"src": "18258:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 620,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "18403:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 622,
																			"indexExpression": {
																				"id": 621,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 564,
																				"src": "18413:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "18403:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 623,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 566,
																			"src": "18420:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18403:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 625,
																	"nodeType": "ExpressionStatement",
																	"src": "18403:22:0"
																}
															]
														}
													]
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "18025:425:0",
												"trueBody": {
													"id": 619,
													"nodeType": "Block",
													"src": "18047:191:0",
													"statements": [
														{
															"id": 618,
															"nodeType": "UncheckedBlock",
															"src": "18061:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 614,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "18192:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 615,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 566,
																			"src": "18208:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18192:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 617,
																	"nodeType": "ExpressionStatement",
																	"src": "18192:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 630,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "18474:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 631,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "18480:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "18484:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "18465:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18465:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "EmitStatement",
												"src": "18460:30:0"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "17081:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "17399:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17415:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "17407:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17407:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17429:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "17421:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17441:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "17433:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17433:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17406:41:0"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17465:0:0"
									},
									"scope": 829,
									"src": "17390:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "18896:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "18910:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18929:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18921:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 645,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18921:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18921:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18910:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 658,
												"nodeType": "IfStatement",
												"src": "18906:91:0",
												"trueBody": {
													"id": 657,
													"nodeType": "Block",
													"src": "18933:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18983:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18975:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 651,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18975:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18975:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 650,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18954:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18954:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 656,
															"nodeType": "RevertStatement",
															"src": "18947:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19022:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19014:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 660,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19014:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19014:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 664,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "19026:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "19035:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "19006:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19006:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "19006:35:0"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "18503:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18849:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18863:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "18855:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18855:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18880:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "18872:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18872:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18854:32:0"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18896:0:0"
									},
									"scope": 829,
									"src": "18840:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "19422:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 677,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "19436:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19455:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19447:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 678,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19447:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19447:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19436:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 691,
												"nodeType": "IfStatement",
												"src": "19432:89:0",
												"trueBody": {
													"id": 690,
													"nodeType": "Block",
													"src": "19459:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19507:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19499:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 684,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19499:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19499:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 683,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "19480:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19480:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 689,
															"nodeType": "RevertStatement",
															"src": "19473:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 693,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "19538:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19555:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19547:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 694,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19547:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19547:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 698,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "19559:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 692,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "19530:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19530:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "19530:35:0"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "19054:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19375:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19389:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "19381:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19406:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "19398:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19380:32:0"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19422:0:0"
									},
									"scope": 829,
									"src": "19366:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "20182:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 713,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "20201:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 714,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "20208:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 715,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "20217:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20224:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 712,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															720,
															780
														],
														"referencedDeclaration": 780,
														"src": "20192:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20192:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "20192:37:0"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "19578:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20117:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20134:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "20126:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20149:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "20141:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20166:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "20158:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20125:47:0"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20182:0:0"
									},
									"scope": 829,
									"src": "20108:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "21181:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 732,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "21195:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21212:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21204:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 733,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21204:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21204:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21195:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 746,
												"nodeType": "IfStatement",
												"src": "21191:89:0",
												"trueBody": {
													"id": 745,
													"nodeType": "Block",
													"src": "21216:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 741,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21266:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21258:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 739,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21258:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21258:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 738,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "21237:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21237:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 744,
															"nodeType": "RevertStatement",
															"src": "21230:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 747,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "21293:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21312:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21304:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 748,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21304:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21304:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21293:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 761,
												"nodeType": "IfStatement",
												"src": "21289:90:0",
												"trueBody": {
													"id": 760,
													"nodeType": "Block",
													"src": "21316:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 756,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21365:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21357:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 754,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21357:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21357:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 753,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "21337:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21337:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 759,
															"nodeType": "RevertStatement",
															"src": "21330:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 762,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "21388:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 765,
															"indexExpression": {
																"id": 763,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 723,
																"src": "21400:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21388:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 766,
														"indexExpression": {
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21407:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21388:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 767,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "21418:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21388:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "21388:35:0"
											},
											{
												"condition": {
													"id": 770,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 729,
													"src": "21437:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 778,
												"nodeType": "IfStatement",
												"src": "21433:76:0",
												"trueBody": {
													"id": 777,
													"nodeType": "Block",
													"src": "21448:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 772,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "21476:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 773,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 725,
																		"src": "21483:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 774,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "21492:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 771,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "21467:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21467:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 776,
															"nodeType": "EmitStatement",
															"src": "21462:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "20242:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "21092:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21109:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "21101:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21124:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "21116:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21141:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "21133:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "21153:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "21148:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 728,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21148:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21100:63:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21181:0:0"
									},
									"scope": 829,
									"src": "21083:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "21886:387:0",
										"statements": [
											{
												"assignments": [
													791
												],
												"declarations": [
													{
														"constant": false,
														"id": 791,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21904:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 827,
														"src": "21896:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 790,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21896:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 796,
												"initialValue": {
													"arguments": [
														{
															"id": 793,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "21933:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 794,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "21940:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 792,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "21923:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21923:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21896:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 797,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "21962:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21986:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 799,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21986:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 798,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21981:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21981:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21995:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21981:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21962:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 826,
												"nodeType": "IfStatement",
												"src": "21958:309:0",
												"trueBody": {
													"id": 825,
													"nodeType": "Block",
													"src": "22000:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 804,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "22018:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 805,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "22037:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22018:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 814,
															"nodeType": "IfStatement",
															"src": "22014:130:0",
															"trueBody": {
																"id": 813,
																"nodeType": "Block",
																"src": "22044:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 808,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 785,
																					"src": "22096:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 809,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 791,
																					"src": "22105:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 810,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 787,
																					"src": "22123:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 807,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "22069:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22069:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 812,
																		"nodeType": "RevertStatement",
																		"src": "22062:67:0"
																	}
																]
															}
														},
														{
															"id": 824,
															"nodeType": "UncheckedBlock",
															"src": "22157:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 816,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 783,
																				"src": "22194:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 817,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 785,
																				"src": "22201:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 818,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 791,
																					"src": "22210:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 819,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 787,
																					"src": "22229:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22210:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22236:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 815,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				720,
																				780
																			],
																			"referencedDeclaration": 780,
																			"src": "22185:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22185:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 823,
																	"nodeType": "ExpressionStatement",
																	"src": "22185:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "21521:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21806:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "21822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21845:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "21837:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21837:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21862:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "21854:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21821:47:0"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21886:0:0"
									},
									"scope": 829,
									"src": "21797:476:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 854,
							"src": "12007:10268:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 830,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "22361:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 831,
										"name": "ERC20",
										"nameLocations": [
											"22410:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 829,
										"src": "22410:5:0"
									},
									"id": 832,
									"nodeType": "InheritanceSpecifier",
									"src": "22410:5:0"
								}
							],
							"canonicalName": "UmerToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 853,
							"linearizedBaseContracts": [
								853,
								829,
								170,
								100,
								77,
								129
							],
							"name": "UmerToken",
							"nameLocation": "22397:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "22479:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 842,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "22495:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22506:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22514:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 845,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "22520:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22520:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "22514:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22506:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 841,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "22489:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22489:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "22489:42:0"
											}
										]
									},
									"id": 852,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "556d6572546f6b656e",
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22459:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_6e7e95be827593ae299c1c54c563ccfb4e4431ce3acba53e6064fe2b3d6f0de4",
														"typeString": "literal_string \"UmerToken\""
													},
													"value": "UmerToken"
												},
												{
													"hexValue": "55544b",
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22472:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_7954e126a2cbdff120680e12376a5281321960ce2747380ed49f15a957c2565d",
														"typeString": "literal_string \"UTK\""
													},
													"value": "UTK"
												}
											],
											"id": 839,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 836,
												"name": "ERC20",
												"nameLocations": [
													"22453:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 829,
												"src": "22453:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22453:25:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "22442:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "22434:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22434:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22433:19:0"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22479:0:0"
									},
									"scope": 853,
									"src": "22422:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 854,
							"src": "22388:152:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "165:22376:0"
				},
				"id": 0
			}
		}
	}
}